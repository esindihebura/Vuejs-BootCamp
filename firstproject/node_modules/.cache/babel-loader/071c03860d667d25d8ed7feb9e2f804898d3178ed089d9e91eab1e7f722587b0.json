{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport { isString, hyphenate, NOOP, extend, isObject, NO, isArray, makeMap, isSymbol, capitalize, camelize as camelize$1, EMPTY_OBJ, PatchFlagNames, slotFlagsText, isOn, isBuiltInDirective, isReservedProp, toHandlerKey } from '@vue/shared';\nexport { generateCodeFrame } from '@vue/shared';\nfunction defaultOnError(error) {\n  throw error;\n}\nfunction defaultOnWarn(msg) {\n  process.env.NODE_ENV !== 'production' && console.warn(`[Vue warn] ${msg.message}`);\n}\nfunction createCompilerError(code, loc, messages, additionalMessage) {\n  const msg = process.env.NODE_ENV !== 'production' || !true ? (messages || errorMessages)[code] + (additionalMessage || ``) : code;\n  const error = new SyntaxError(String(msg));\n  error.code = code;\n  error.loc = loc;\n  return error;\n}\nconst errorMessages = {\n  // parse errors\n  [0 /* ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT */]: 'Illegal comment.',\n  [1 /* ErrorCodes.CDATA_IN_HTML_CONTENT */]: 'CDATA section is allowed only in XML context.',\n  [2 /* ErrorCodes.DUPLICATE_ATTRIBUTE */]: 'Duplicate attribute.',\n  [3 /* ErrorCodes.END_TAG_WITH_ATTRIBUTES */]: 'End tag cannot have attributes.',\n  [4 /* ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS */]: \"Illegal '/' in tags.\",\n  [5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */]: 'Unexpected EOF in tag.',\n  [6 /* ErrorCodes.EOF_IN_CDATA */]: 'Unexpected EOF in CDATA section.',\n  [7 /* ErrorCodes.EOF_IN_COMMENT */]: 'Unexpected EOF in comment.',\n  [8 /* ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */]: 'Unexpected EOF in script.',\n  [9 /* ErrorCodes.EOF_IN_TAG */]: 'Unexpected EOF in tag.',\n  [10 /* ErrorCodes.INCORRECTLY_CLOSED_COMMENT */]: 'Incorrectly closed comment.',\n  [11 /* ErrorCodes.INCORRECTLY_OPENED_COMMENT */]: 'Incorrectly opened comment.',\n  [12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */]: \"Illegal tag name. Use '&lt;' to print '<'.\",\n  [13 /* ErrorCodes.MISSING_ATTRIBUTE_VALUE */]: 'Attribute value was expected.',\n  [14 /* ErrorCodes.MISSING_END_TAG_NAME */]: 'End tag name was expected.',\n  [15 /* ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */]: 'Whitespace was expected.',\n  [16 /* ErrorCodes.NESTED_COMMENT */]: \"Unexpected '<!--' in comment.\",\n  [17 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */]: 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\n  [18 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */]: 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\n  [19 /* ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */]: \"Attribute name cannot start with '='.\",\n  [21 /* ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */]: \"'<?' is allowed only in XML context.\",\n  [20 /* ErrorCodes.UNEXPECTED_NULL_CHARACTER */]: `Unexpected null character.`,\n  [22 /* ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG */]: \"Illegal '/' in tags.\",\n  // Vue-specific parse errors\n  [23 /* ErrorCodes.X_INVALID_END_TAG */]: 'Invalid end tag.',\n  [24 /* ErrorCodes.X_MISSING_END_TAG */]: 'Element is missing end tag.',\n  [25 /* ErrorCodes.X_MISSING_INTERPOLATION_END */]: 'Interpolation end sign was not found.',\n  [27 /* ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */]: 'End bracket for dynamic directive argument was not found. ' + 'Note that dynamic directive argument cannot contain spaces.',\n  [26 /* ErrorCodes.X_MISSING_DIRECTIVE_NAME */]: 'Legal directive name was expected.',\n  // transform errors\n  [28 /* ErrorCodes.X_V_IF_NO_EXPRESSION */]: `v-if/v-else-if is missing expression.`,\n  [29 /* ErrorCodes.X_V_IF_SAME_KEY */]: `v-if/else branches must use unique keys.`,\n  [30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\n  [31 /* ErrorCodes.X_V_FOR_NO_EXPRESSION */]: `v-for is missing expression.`,\n  [32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */]: `v-for has invalid expression.`,\n  [33 /* ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT */]: `<template v-for> key should be placed on the <template> tag.`,\n  [34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */]: `v-bind is missing expression.`,\n  [35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */]: `v-on is missing expression.`,\n  [36 /* ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */]: `Unexpected custom directive on <slot> outlet.`,\n  [37 /* ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE */]: `Mixed v-slot usage on both the component and nested <template>. ` + `When there are multiple named slots, all slots should use <template> ` + `syntax to avoid scope ambiguity.`,\n  [38 /* ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES */]: `Duplicate slot names found. `,\n  [39 /* ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */]: `Extraneous children found when component already has explicitly named ` + `default slot. These children will be ignored.`,\n  [40 /* ErrorCodes.X_V_SLOT_MISPLACED */]: `v-slot can only be used on components or <template> tags.`,\n  [41 /* ErrorCodes.X_V_MODEL_NO_EXPRESSION */]: `v-model is missing expression.`,\n  [42 /* ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION */]: `v-model value must be a valid JavaScript member expression.`,\n  [43 /* ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE */]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\n  [44 /* ErrorCodes.X_V_MODEL_ON_PROPS */]: `v-model cannot be used on a prop, because local prop bindings are not writable.\\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.`,\n  [45 /* ErrorCodes.X_INVALID_EXPRESSION */]: `Error parsing JavaScript expression: `,\n  [46 /* ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN */]: `<KeepAlive> expects exactly one child component.`,\n  // generic errors\n  [47 /* ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED */]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\n  [48 /* ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED */]: `ES module mode is not supported in this build of compiler.`,\n  [49 /* ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED */]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\n  [50 /* ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED */]: `\"scopeId\" option is only supported in module mode.`,\n  // just to fulfill types\n  [51 /* ErrorCodes.__EXTEND_POINT__ */]: ``\n};\nconst FRAGMENT = Symbol(process.env.NODE_ENV !== 'production' ? `Fragment` : ``);\nconst TELEPORT = Symbol(process.env.NODE_ENV !== 'production' ? `Teleport` : ``);\nconst SUSPENSE = Symbol(process.env.NODE_ENV !== 'production' ? `Suspense` : ``);\nconst KEEP_ALIVE = Symbol(process.env.NODE_ENV !== 'production' ? `KeepAlive` : ``);\nconst BASE_TRANSITION = Symbol(process.env.NODE_ENV !== 'production' ? `BaseTransition` : ``);\nconst OPEN_BLOCK = Symbol(process.env.NODE_ENV !== 'production' ? `openBlock` : ``);\nconst CREATE_BLOCK = Symbol(process.env.NODE_ENV !== 'production' ? `createBlock` : ``);\nconst CREATE_ELEMENT_BLOCK = Symbol(process.env.NODE_ENV !== 'production' ? `createElementBlock` : ``);\nconst CREATE_VNODE = Symbol(process.env.NODE_ENV !== 'production' ? `createVNode` : ``);\nconst CREATE_ELEMENT_VNODE = Symbol(process.env.NODE_ENV !== 'production' ? `createElementVNode` : ``);\nconst CREATE_COMMENT = Symbol(process.env.NODE_ENV !== 'production' ? `createCommentVNode` : ``);\nconst CREATE_TEXT = Symbol(process.env.NODE_ENV !== 'production' ? `createTextVNode` : ``);\nconst CREATE_STATIC = Symbol(process.env.NODE_ENV !== 'production' ? `createStaticVNode` : ``);\nconst RESOLVE_COMPONENT = Symbol(process.env.NODE_ENV !== 'production' ? `resolveComponent` : ``);\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol(process.env.NODE_ENV !== 'production' ? `resolveDynamicComponent` : ``);\nconst RESOLVE_DIRECTIVE = Symbol(process.env.NODE_ENV !== 'production' ? `resolveDirective` : ``);\nconst RESOLVE_FILTER = Symbol(process.env.NODE_ENV !== 'production' ? `resolveFilter` : ``);\nconst WITH_DIRECTIVES = Symbol(process.env.NODE_ENV !== 'production' ? `withDirectives` : ``);\nconst RENDER_LIST = Symbol(process.env.NODE_ENV !== 'production' ? `renderList` : ``);\nconst RENDER_SLOT = Symbol(process.env.NODE_ENV !== 'production' ? `renderSlot` : ``);\nconst CREATE_SLOTS = Symbol(process.env.NODE_ENV !== 'production' ? `createSlots` : ``);\nconst TO_DISPLAY_STRING = Symbol(process.env.NODE_ENV !== 'production' ? `toDisplayString` : ``);\nconst MERGE_PROPS = Symbol(process.env.NODE_ENV !== 'production' ? `mergeProps` : ``);\nconst NORMALIZE_CLASS = Symbol(process.env.NODE_ENV !== 'production' ? `normalizeClass` : ``);\nconst NORMALIZE_STYLE = Symbol(process.env.NODE_ENV !== 'production' ? `normalizeStyle` : ``);\nconst NORMALIZE_PROPS = Symbol(process.env.NODE_ENV !== 'production' ? `normalizeProps` : ``);\nconst GUARD_REACTIVE_PROPS = Symbol(process.env.NODE_ENV !== 'production' ? `guardReactiveProps` : ``);\nconst TO_HANDLERS = Symbol(process.env.NODE_ENV !== 'production' ? `toHandlers` : ``);\nconst CAMELIZE = Symbol(process.env.NODE_ENV !== 'production' ? `camelize` : ``);\nconst CAPITALIZE = Symbol(process.env.NODE_ENV !== 'production' ? `capitalize` : ``);\nconst TO_HANDLER_KEY = Symbol(process.env.NODE_ENV !== 'production' ? `toHandlerKey` : ``);\nconst SET_BLOCK_TRACKING = Symbol(process.env.NODE_ENV !== 'production' ? `setBlockTracking` : ``);\nconst PUSH_SCOPE_ID = Symbol(process.env.NODE_ENV !== 'production' ? `pushScopeId` : ``);\nconst POP_SCOPE_ID = Symbol(process.env.NODE_ENV !== 'production' ? `popScopeId` : ``);\nconst WITH_CTX = Symbol(process.env.NODE_ENV !== 'production' ? `withCtx` : ``);\nconst UNREF = Symbol(process.env.NODE_ENV !== 'production' ? `unref` : ``);\nconst IS_REF = Symbol(process.env.NODE_ENV !== 'production' ? `isRef` : ``);\nconst WITH_MEMO = Symbol(process.env.NODE_ENV !== 'production' ? `withMemo` : ``);\nconst IS_MEMO_SAME = Symbol(process.env.NODE_ENV !== 'production' ? `isMemoSame` : ``);\n// Name mapping for runtime helpers that need to be imported from 'vue' in\n// generated code. Make sure these are correctly exported in the runtime!\nconst helperNameMap = {\n  [FRAGMENT]: `Fragment`,\n  [TELEPORT]: `Teleport`,\n  [SUSPENSE]: `Suspense`,\n  [KEEP_ALIVE]: `KeepAlive`,\n  [BASE_TRANSITION]: `BaseTransition`,\n  [OPEN_BLOCK]: `openBlock`,\n  [CREATE_BLOCK]: `createBlock`,\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\n  [CREATE_VNODE]: `createVNode`,\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\n  [CREATE_COMMENT]: `createCommentVNode`,\n  [CREATE_TEXT]: `createTextVNode`,\n  [CREATE_STATIC]: `createStaticVNode`,\n  [RESOLVE_COMPONENT]: `resolveComponent`,\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\n  [RESOLVE_FILTER]: `resolveFilter`,\n  [WITH_DIRECTIVES]: `withDirectives`,\n  [RENDER_LIST]: `renderList`,\n  [RENDER_SLOT]: `renderSlot`,\n  [CREATE_SLOTS]: `createSlots`,\n  [TO_DISPLAY_STRING]: `toDisplayString`,\n  [MERGE_PROPS]: `mergeProps`,\n  [NORMALIZE_CLASS]: `normalizeClass`,\n  [NORMALIZE_STYLE]: `normalizeStyle`,\n  [NORMALIZE_PROPS]: `normalizeProps`,\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\n  [TO_HANDLERS]: `toHandlers`,\n  [CAMELIZE]: `camelize`,\n  [CAPITALIZE]: `capitalize`,\n  [TO_HANDLER_KEY]: `toHandlerKey`,\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\n  [PUSH_SCOPE_ID]: `pushScopeId`,\n  [POP_SCOPE_ID]: `popScopeId`,\n  [WITH_CTX]: `withCtx`,\n  [UNREF]: `unref`,\n  [IS_REF]: `isRef`,\n  [WITH_MEMO]: `withMemo`,\n  [IS_MEMO_SAME]: `isMemoSame`\n};\nfunction registerRuntimeHelpers(helpers) {\n  Object.getOwnPropertySymbols(helpers).forEach(s => {\n    helperNameMap[s] = helpers[s];\n  });\n}\n\n// AST Utilities ---------------------------------------------------------------\n// Some expressions, e.g. sequence and conditional expressions, are never\n// associated with template nodes, so their source locations are just a stub.\n// Container types like CompoundExpression also don't need a real location.\nconst locStub = {\n  source: '',\n  start: {\n    line: 1,\n    column: 1,\n    offset: 0\n  },\n  end: {\n    line: 1,\n    column: 1,\n    offset: 0\n  }\n};\nfunction createRoot(children, loc = locStub) {\n  return {\n    type: 0 /* NodeTypes.ROOT */,\n    children,\n    helpers: new Set(),\n    components: [],\n    directives: [],\n    hoists: [],\n    imports: [],\n    cached: 0,\n    temps: 0,\n    codegenNode: undefined,\n    loc\n  };\n}\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\n  if (context) {\n    if (isBlock) {\n      context.helper(OPEN_BLOCK);\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\n    } else {\n      context.helper(getVNodeHelper(context.inSSR, isComponent));\n    }\n    if (directives) {\n      context.helper(WITH_DIRECTIVES);\n    }\n  }\n  return {\n    type: 13 /* NodeTypes.VNODE_CALL */,\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent,\n    loc\n  };\n}\nfunction createArrayExpression(elements, loc = locStub) {\n  return {\n    type: 17 /* NodeTypes.JS_ARRAY_EXPRESSION */,\n    loc,\n    elements\n  };\n}\nfunction createObjectExpression(properties, loc = locStub) {\n  return {\n    type: 15 /* NodeTypes.JS_OBJECT_EXPRESSION */,\n    loc,\n    properties\n  };\n}\nfunction createObjectProperty(key, value) {\n  return {\n    type: 16 /* NodeTypes.JS_PROPERTY */,\n    loc: locStub,\n    key: isString(key) ? createSimpleExpression(key, true) : key,\n    value\n  };\n}\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0 /* ConstantTypes.NOT_CONSTANT */) {\n  return {\n    type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\n    loc,\n    content,\n    isStatic,\n    constType: isStatic ? 3 /* ConstantTypes.CAN_STRINGIFY */ : constType\n  };\n}\nfunction createInterpolation(content, loc) {\n  return {\n    type: 5 /* NodeTypes.INTERPOLATION */,\n    loc,\n    content: isString(content) ? createSimpleExpression(content, false, loc) : content\n  };\n}\nfunction createCompoundExpression(children, loc = locStub) {\n  return {\n    type: 8 /* NodeTypes.COMPOUND_EXPRESSION */,\n    loc,\n    children\n  };\n}\nfunction createCallExpression(callee, args = [], loc = locStub) {\n  return {\n    type: 14 /* NodeTypes.JS_CALL_EXPRESSION */,\n    loc,\n    callee,\n    arguments: args\n  };\n}\nfunction createFunctionExpression(params, returns = undefined, newline = false, isSlot = false, loc = locStub) {\n  return {\n    type: 18 /* NodeTypes.JS_FUNCTION_EXPRESSION */,\n    params,\n    returns,\n    newline,\n    isSlot,\n    loc\n  };\n}\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\n  return {\n    type: 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */,\n    test,\n    consequent,\n    alternate,\n    newline,\n    loc: locStub\n  };\n}\nfunction createCacheExpression(index, value, isVNode = false) {\n  return {\n    type: 20 /* NodeTypes.JS_CACHE_EXPRESSION */,\n    index,\n    value,\n    isVNode,\n    loc: locStub\n  };\n}\nfunction createBlockStatement(body) {\n  return {\n    type: 21 /* NodeTypes.JS_BLOCK_STATEMENT */,\n    body,\n    loc: locStub\n  };\n}\nfunction createTemplateLiteral(elements) {\n  return {\n    type: 22 /* NodeTypes.JS_TEMPLATE_LITERAL */,\n    elements,\n    loc: locStub\n  };\n}\nfunction createIfStatement(test, consequent, alternate) {\n  return {\n    type: 23 /* NodeTypes.JS_IF_STATEMENT */,\n    test,\n    consequent,\n    alternate,\n    loc: locStub\n  };\n}\nfunction createAssignmentExpression(left, right) {\n  return {\n    type: 24 /* NodeTypes.JS_ASSIGNMENT_EXPRESSION */,\n    left,\n    right,\n    loc: locStub\n  };\n}\nfunction createSequenceExpression(expressions) {\n  return {\n    type: 25 /* NodeTypes.JS_SEQUENCE_EXPRESSION */,\n    expressions,\n    loc: locStub\n  };\n}\nfunction createReturnStatement(returns) {\n  return {\n    type: 26 /* NodeTypes.JS_RETURN_STATEMENT */,\n    returns,\n    loc: locStub\n  };\n}\nconst isStaticExp = p => p.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && p.isStatic;\nconst isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);\nfunction isCoreComponent(tag) {\n  if (isBuiltInType(tag, 'Teleport')) {\n    return TELEPORT;\n  } else if (isBuiltInType(tag, 'Suspense')) {\n    return SUSPENSE;\n  } else if (isBuiltInType(tag, 'KeepAlive')) {\n    return KEEP_ALIVE;\n  } else if (isBuiltInType(tag, 'BaseTransition')) {\n    return BASE_TRANSITION;\n  }\n}\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\nconst isSimpleIdentifier = name => !nonIdentifierRE.test(name);\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\n/**\n * Simple lexer to check if an expression is a member expression. This is\n * lax and only checks validity at the root level (i.e. does not validate exps\n * inside square brackets), but it's ok since these are only used on template\n * expressions and false positives are invalid expressions in the first place.\n */\nconst isMemberExpressionBrowser = path => {\n  // remove whitespaces around . or [ first\n  path = path.trim().replace(whitespaceRE, s => s.trim());\n  let state = 0 /* MemberExpLexState.inMemberExp */;\n  let stateStack = [];\n  let currentOpenBracketCount = 0;\n  let currentOpenParensCount = 0;\n  let currentStringType = null;\n  for (let i = 0; i < path.length; i++) {\n    const char = path.charAt(i);\n    switch (state) {\n      case 0 /* MemberExpLexState.inMemberExp */:\n        if (char === '[') {\n          stateStack.push(state);\n          state = 1 /* MemberExpLexState.inBrackets */;\n          currentOpenBracketCount++;\n        } else if (char === '(') {\n          stateStack.push(state);\n          state = 2 /* MemberExpLexState.inParens */;\n          currentOpenParensCount++;\n        } else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\n          return false;\n        }\n        break;\n      case 1 /* MemberExpLexState.inBrackets */:\n        if (char === `'` || char === `\"` || char === '`') {\n          stateStack.push(state);\n          state = 3 /* MemberExpLexState.inString */;\n          currentStringType = char;\n        } else if (char === `[`) {\n          currentOpenBracketCount++;\n        } else if (char === `]`) {\n          if (! --currentOpenBracketCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 2 /* MemberExpLexState.inParens */:\n        if (char === `'` || char === `\"` || char === '`') {\n          stateStack.push(state);\n          state = 3 /* MemberExpLexState.inString */;\n          currentStringType = char;\n        } else if (char === `(`) {\n          currentOpenParensCount++;\n        } else if (char === `)`) {\n          // if the exp ends as a call then it should not be considered valid\n          if (i === path.length - 1) {\n            return false;\n          }\n          if (! --currentOpenParensCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 3 /* MemberExpLexState.inString */:\n        if (char === currentStringType) {\n          state = stateStack.pop();\n          currentStringType = null;\n        }\n        break;\n    }\n  }\n  return !currentOpenBracketCount && !currentOpenParensCount;\n};\nconst isMemberExpressionNode = NOOP;\nconst isMemberExpression = isMemberExpressionBrowser;\nfunction getInnerRange(loc, offset, length) {\n  const source = loc.source.slice(offset, offset + length);\n  const newLoc = {\n    source,\n    start: advancePositionWithClone(loc.start, loc.source, offset),\n    end: loc.end\n  };\n  if (length != null) {\n    newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\n  }\n  return newLoc;\n}\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\n  return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);\n}\n// advance by mutation without cloning (for performance reasons), since this\n// gets called a lot in the parser\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\n  let linesCount = 0;\n  let lastNewLinePos = -1;\n  for (let i = 0; i < numberOfCharacters; i++) {\n    if (source.charCodeAt(i) === 10 /* newline char code */) {\n      linesCount++;\n      lastNewLinePos = i;\n    }\n  }\n  pos.offset += numberOfCharacters;\n  pos.line += linesCount;\n  pos.column = lastNewLinePos === -1 ? pos.column + numberOfCharacters : numberOfCharacters - lastNewLinePos;\n  return pos;\n}\nfunction assert(condition, msg) {\n  /* istanbul ignore if */\n  if (!condition) {\n    throw new Error(msg || `unexpected compiler condition`);\n  }\n}\nfunction findDir(node, name, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 7 /* NodeTypes.DIRECTIVE */ && (allowEmpty || p.exp) && (isString(name) ? p.name === name : name.test(p.name))) {\n      return p;\n    }\n  }\n}\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\n      if (dynamicOnly) continue;\n      if (p.name === name && (p.value || allowEmpty)) {\n        return p;\n      }\n    } else if (p.name === 'bind' && (p.exp || allowEmpty) && isStaticArgOf(p.arg, name)) {\n      return p;\n    }\n  }\n}\nfunction isStaticArgOf(arg, name) {\n  return !!(arg && isStaticExp(arg) && arg.content === name);\n}\nfunction hasDynamicKeyVBind(node) {\n  return node.props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'bind' && (!p.arg ||\n  // v-bind=\"obj\"\n  p.arg.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */ ||\n  // v-bind:[_ctx.foo]\n  !p.arg.isStatic) // v-bind:[foo]\n  );\n}\n\nfunction isText$1(node) {\n  return node.type === 5 /* NodeTypes.INTERPOLATION */ || node.type === 2 /* NodeTypes.TEXT */;\n}\n\nfunction isVSlot(p) {\n  return p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'slot';\n}\nfunction isTemplateNode(node) {\n  return node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 3 /* ElementTypes.TEMPLATE */;\n}\n\nfunction isSlotOutlet(node) {\n  return node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 2 /* ElementTypes.SLOT */;\n}\n\nfunction getVNodeHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\n}\nfunction getVNodeBlockHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\n}\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\nfunction getUnnormalizedProps(props, callPath = []) {\n  if (props && !isString(props) && props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\n    const callee = props.callee;\n    if (!isString(callee) && propsHelperSet.has(callee)) {\n      return getUnnormalizedProps(props.arguments[0], callPath.concat(props));\n    }\n  }\n  return [props, callPath];\n}\nfunction injectProp(node, prop, context) {\n  let propsWithInjection;\n  /**\n   * 1. mergeProps(...)\n   * 2. toHandlers(...)\n   * 3. normalizeProps(...)\n   * 4. normalizeProps(guardReactiveProps(...))\n   *\n   * we need to get the real props before normalization\n   */\n  let props = node.type === 13 /* NodeTypes.VNODE_CALL */ ? node.props : node.arguments[2];\n  let callPath = [];\n  let parentCall;\n  if (props && !isString(props) && props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\n    const ret = getUnnormalizedProps(props);\n    props = ret[0];\n    callPath = ret[1];\n    parentCall = callPath[callPath.length - 1];\n  }\n  if (props == null || isString(props)) {\n    propsWithInjection = createObjectExpression([prop]);\n  } else if (props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\n    // merged props... add ours\n    // only inject key to object literal if it's the first argument so that\n    // if doesn't override user provided keys\n    const first = props.arguments[0];\n    if (!isString(first) && first.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\n      // #6631\n      if (!hasProp(prop, first)) {\n        first.properties.unshift(prop);\n      }\n    } else {\n      if (props.callee === TO_HANDLERS) {\n        // #2366\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [createObjectExpression([prop]), props]);\n      } else {\n        props.arguments.unshift(createObjectExpression([prop]));\n      }\n    }\n    !propsWithInjection && (propsWithInjection = props);\n  } else if (props.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\n    if (!hasProp(prop, props)) {\n      props.properties.unshift(prop);\n    }\n    propsWithInjection = props;\n  } else {\n    // single v-bind with expression, return a merged replacement\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [createObjectExpression([prop]), props]);\n    // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\n    // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\n    // the `guardReactiveProps` will no longer be needed\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\n      parentCall = callPath[callPath.length - 2];\n    }\n  }\n  if (node.type === 13 /* NodeTypes.VNODE_CALL */) {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.props = propsWithInjection;\n    }\n  } else {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.arguments[2] = propsWithInjection;\n    }\n  }\n}\n// check existing key to avoid overriding user provided keys\nfunction hasProp(prop, props) {\n  let result = false;\n  if (prop.key.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n    const propKeyName = prop.key.content;\n    result = props.properties.some(p => p.key.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && p.key.content === propKeyName);\n  }\n  return result;\n}\nfunction toValidAssetId(name, type) {\n  // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\n  return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\n    return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString();\n  })}`;\n}\n// Check if a node contains expressions that reference current context scope ids\nfunction hasScopeRef(node, ids) {\n  if (!node || Object.keys(ids).length === 0) {\n    return false;\n  }\n  switch (node.type) {\n    case 1 /* NodeTypes.ELEMENT */:\n      for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 7 /* NodeTypes.DIRECTIVE */ && (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\n          return true;\n        }\n      }\n      return node.children.some(c => hasScopeRef(c, ids));\n    case 11 /* NodeTypes.FOR */:\n      if (hasScopeRef(node.source, ids)) {\n        return true;\n      }\n      return node.children.some(c => hasScopeRef(c, ids));\n    case 9 /* NodeTypes.IF */:\n      return node.branches.some(b => hasScopeRef(b, ids));\n    case 10 /* NodeTypes.IF_BRANCH */:\n      if (hasScopeRef(node.condition, ids)) {\n        return true;\n      }\n      return node.children.some(c => hasScopeRef(c, ids));\n    case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\n      return !node.isStatic && isSimpleIdentifier(node.content) && !!ids[node.content];\n    case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\n      return node.children.some(c => isObject(c) && hasScopeRef(c, ids));\n    case 5 /* NodeTypes.INTERPOLATION */:\n    case 12 /* NodeTypes.TEXT_CALL */:\n      return hasScopeRef(node.content, ids);\n    case 2 /* NodeTypes.TEXT */:\n    case 3 /* NodeTypes.COMMENT */:\n      return false;\n    default:\n      if (process.env.NODE_ENV !== 'production') ;\n      return false;\n  }\n}\nfunction getMemoedVNodeCall(node) {\n  if (node.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */ && node.callee === WITH_MEMO) {\n    return node.arguments[1].returns;\n  } else {\n    return node;\n  }\n}\nfunction makeBlock(node, {\n  helper,\n  removeHelper,\n  inSSR\n}) {\n  if (!node.isBlock) {\n    node.isBlock = true;\n    removeHelper(getVNodeHelper(inSSR, node.isComponent));\n    helper(OPEN_BLOCK);\n    helper(getVNodeBlockHelper(inSSR, node.isComponent));\n  }\n}\nconst deprecationData = {\n  [\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */]: {\n    message: `Platform-native elements with \"is\" prop will no longer be ` + `treated as components in Vue 3 unless the \"is\" value is explicitly ` + `prefixed with \"vue:\".`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\n  },\n  [\"COMPILER_V_BIND_SYNC\" /* CompilerDeprecationTypes.COMPILER_V_BIND_SYNC */]: {\n    message: key => `.sync modifier for v-bind has been removed. Use v-model with ` + `argument instead. \\`v-bind:${key}.sync\\` should be changed to ` + `\\`v-model:${key}\\`.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\n  },\n  [\"COMPILER_V_BIND_PROP\" /* CompilerDeprecationTypes.COMPILER_V_BIND_PROP */]: {\n    message: `.prop modifier for v-bind has been removed and no longer necessary. ` + `Vue 3 will automatically set a binding as DOM property when appropriate.`\n  },\n  [\"COMPILER_V_BIND_OBJECT_ORDER\" /* CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER */]: {\n    message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript ` + `object spread: it will now overwrite an existing non-mergeable attribute ` + `that appears before v-bind in the case of conflict. ` + `To retain 2.x behavior, move v-bind to make it the first attribute. ` + `You can also suppress this warning if the usage is intended.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\n  },\n  [\"COMPILER_V_ON_NATIVE\" /* CompilerDeprecationTypes.COMPILER_V_ON_NATIVE */]: {\n    message: `.native modifier for v-on has been removed as is no longer necessary.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\n  },\n  [\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE */]: {\n    message: `v-if / v-for precedence when used on the same element has changed ` + `in Vue 3: v-if now takes higher precedence and will no longer have ` + `access to v-for scope variables. It is best to avoid the ambiguity ` + `with <template> tags or use a computed property that filters v-for ` + `data source.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\n  },\n  [\"COMPILER_NATIVE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE */]: {\n    message: `<template> with no special directives will render as a native template ` + `element instead of its inner content in Vue 3.`\n  },\n  [\"COMPILER_INLINE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE */]: {\n    message: `\"inline-template\" has been removed in Vue 3.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\n  },\n  [\"COMPILER_FILTER\" /* CompilerDeprecationTypes.COMPILER_FILTERS */]: {\n    message: `filters have been removed in Vue 3. ` + `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` + `Use method calls or computed properties instead.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\n  }\n};\nfunction getCompatValue(key, context) {\n  const config = context.options ? context.options.compatConfig : context.compatConfig;\n  const value = config && config[key];\n  if (key === 'MODE') {\n    return value || 3; // compiler defaults to v3 behavior\n  } else {\n    return value;\n  }\n}\nfunction isCompatEnabled(key, context) {\n  const mode = getCompatValue('MODE', context);\n  const value = getCompatValue(key, context);\n  // in v3 mode, only enable if explicitly set to true\n  // otherwise enable for any non-false value\n  return mode === 3 ? value === true : value !== false;\n}\nfunction checkCompatEnabled(key, context, loc, ...args) {\n  const enabled = isCompatEnabled(key, context);\n  if (process.env.NODE_ENV !== 'production' && enabled) {\n    warnDeprecation(key, context, loc, ...args);\n  }\n  return enabled;\n}\nfunction warnDeprecation(key, context, loc, ...args) {\n  const val = getCompatValue(key, context);\n  if (val === 'suppress-warning') {\n    return;\n  }\n  const {\n    message,\n    link\n  } = deprecationData[key];\n  const msg = `(deprecation ${key}) ${typeof message === 'function' ? message(...args) : message}${link ? `\\n  Details: ${link}` : ``}`;\n  const err = new SyntaxError(msg);\n  err.code = key;\n  if (loc) err.loc = loc;\n  context.onWarn(err);\n}\n\n// The default decoder only provides escapes for characters reserved as part of\n// the template syntax, and is only used if the custom renderer did not provide\n// a platform-specific decoder.\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\nconst decodeMap = {\n  gt: '>',\n  lt: '<',\n  amp: '&',\n  apos: \"'\",\n  quot: '\"'\n};\nconst defaultParserOptions = {\n  delimiters: [`{{`, `}}`],\n  getNamespace: () => 0 /* Namespaces.HTML */,\n  getTextMode: () => 0 /* TextModes.DATA */,\n  isVoidTag: NO,\n  isPreTag: NO,\n  isCustomElement: NO,\n  decodeEntities: rawText => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\n  onError: defaultOnError,\n  onWarn: defaultOnWarn,\n  comments: process.env.NODE_ENV !== 'production'\n};\nfunction baseParse(content, options = {}) {\n  const context = createParserContext(content, options);\n  const start = getCursor(context);\n  return createRoot(parseChildren(context, 0 /* TextModes.DATA */, []), getSelection(context, start));\n}\nfunction createParserContext(content, rawOptions) {\n  const options = extend({}, defaultParserOptions);\n  let key;\n  for (key in rawOptions) {\n    // @ts-ignore\n    options[key] = rawOptions[key] === undefined ? defaultParserOptions[key] : rawOptions[key];\n  }\n  return {\n    options,\n    column: 1,\n    line: 1,\n    offset: 0,\n    originalSource: content,\n    source: content,\n    inPre: false,\n    inVPre: false,\n    onWarn: options.onWarn\n  };\n}\nfunction parseChildren(context, mode, ancestors) {\n  const parent = last(ancestors);\n  const ns = parent ? parent.ns : 0 /* Namespaces.HTML */;\n  const nodes = [];\n  while (!isEnd(context, mode, ancestors)) {\n    const s = context.source;\n    let node = undefined;\n    if (mode === 0 /* TextModes.DATA */ || mode === 1 /* TextModes.RCDATA */) {\n      if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\n        // '{{'\n        node = parseInterpolation(context, mode);\n      } else if (mode === 0 /* TextModes.DATA */ && s[0] === '<') {\n        // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\n        if (s.length === 1) {\n          emitError(context, 5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */, 1);\n        } else if (s[1] === '!') {\n          // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\n          if (startsWith(s, '<!--')) {\n            node = parseComment(context);\n          } else if (startsWith(s, '<!DOCTYPE')) {\n            // Ignore DOCTYPE by a limitation.\n            node = parseBogusComment(context);\n          } else if (startsWith(s, '<![CDATA[')) {\n            if (ns !== 0 /* Namespaces.HTML */) {\n              node = parseCDATA(context, ancestors);\n            } else {\n              emitError(context, 1 /* ErrorCodes.CDATA_IN_HTML_CONTENT */);\n              node = parseBogusComment(context);\n            }\n          } else {\n            emitError(context, 11 /* ErrorCodes.INCORRECTLY_OPENED_COMMENT */);\n            node = parseBogusComment(context);\n          }\n        } else if (s[1] === '/') {\n          // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\n          if (s.length === 2) {\n            emitError(context, 5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */, 2);\n          } else if (s[2] === '>') {\n            emitError(context, 14 /* ErrorCodes.MISSING_END_TAG_NAME */, 2);\n            advanceBy(context, 3);\n            continue;\n          } else if (/[a-z]/i.test(s[2])) {\n            emitError(context, 23 /* ErrorCodes.X_INVALID_END_TAG */);\n            parseTag(context, 1 /* TagType.End */, parent);\n            continue;\n          } else {\n            emitError(context, 12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 2);\n            node = parseBogusComment(context);\n          }\n        } else if (/[a-z]/i.test(s[1])) {\n          node = parseElement(context, ancestors);\n          // 2.x <template> with no directive compat\n          if (isCompatEnabled(\"COMPILER_NATIVE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE */, context) && node && node.tag === 'template' && !node.props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ && isSpecialTemplateDirective(p.name))) {\n            process.env.NODE_ENV !== 'production' && warnDeprecation(\"COMPILER_NATIVE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE */, context, node.loc);\n            node = node.children;\n          }\n        } else if (s[1] === '?') {\n          emitError(context, 21 /* ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */, 1);\n          node = parseBogusComment(context);\n        } else {\n          emitError(context, 12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 1);\n        }\n      }\n    }\n    if (!node) {\n      node = parseText(context, mode);\n    }\n    if (isArray(node)) {\n      for (let i = 0; i < node.length; i++) {\n        pushNode(nodes, node[i]);\n      }\n    } else {\n      pushNode(nodes, node);\n    }\n  }\n  // Whitespace handling strategy like v2\n  let removedWhitespace = false;\n  if (mode !== 2 /* TextModes.RAWTEXT */ && mode !== 1 /* TextModes.RCDATA */) {\n    const shouldCondense = context.options.whitespace !== 'preserve';\n    for (let i = 0; i < nodes.length; i++) {\n      const node = nodes[i];\n      if (node.type === 2 /* NodeTypes.TEXT */) {\n        if (!context.inPre) {\n          if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\n            const prev = nodes[i - 1];\n            const next = nodes[i + 1];\n            // Remove if:\n            // - the whitespace is the first or last node, or:\n            // - (condense mode) the whitespace is between twos comments, or:\n            // - (condense mode) the whitespace is between comment and element, or:\n            // - (condense mode) the whitespace is between two elements AND contains newline\n            if (!prev || !next || shouldCondense && (prev.type === 3 /* NodeTypes.COMMENT */ && next.type === 3 /* NodeTypes.COMMENT */ || prev.type === 3 /* NodeTypes.COMMENT */ && next.type === 1 /* NodeTypes.ELEMENT */ || prev.type === 1 /* NodeTypes.ELEMENT */ && next.type === 3 /* NodeTypes.COMMENT */ || prev.type === 1 /* NodeTypes.ELEMENT */ && next.type === 1 /* NodeTypes.ELEMENT */ && /[\\r\\n]/.test(node.content))) {\n              removedWhitespace = true;\n              nodes[i] = null;\n            } else {\n              // Otherwise, the whitespace is condensed into a single space\n              node.content = ' ';\n            }\n          } else if (shouldCondense) {\n            // in condense mode, consecutive whitespaces in text are condensed\n            // down to a single space.\n            node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\n          }\n        } else {\n          // #6410 normalize windows newlines in <pre>:\n          // in SSR, browsers normalize server-rendered \\r\\n into a single \\n\n          // in the DOM\n          node.content = node.content.replace(/\\r\\n/g, '\\n');\n        }\n      }\n      // Remove comment nodes if desired by configuration.\n      else if (node.type === 3 /* NodeTypes.COMMENT */ && !context.options.comments) {\n        removedWhitespace = true;\n        nodes[i] = null;\n      }\n    }\n    if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\n      // remove leading newline per html spec\n      // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\n      const first = nodes[0];\n      if (first && first.type === 2 /* NodeTypes.TEXT */) {\n        first.content = first.content.replace(/^\\r?\\n/, '');\n      }\n    }\n  }\n  return removedWhitespace ? nodes.filter(Boolean) : nodes;\n}\nfunction pushNode(nodes, node) {\n  if (node.type === 2 /* NodeTypes.TEXT */) {\n    const prev = last(nodes);\n    // Merge if both this and the previous node are text and those are\n    // consecutive. This happens for cases like \"a < b\".\n    if (prev && prev.type === 2 /* NodeTypes.TEXT */ && prev.loc.end.offset === node.loc.start.offset) {\n      prev.content += node.content;\n      prev.loc.end = node.loc.end;\n      prev.loc.source += node.loc.source;\n      return;\n    }\n  }\n  nodes.push(node);\n}\nfunction parseCDATA(context, ancestors) {\n  advanceBy(context, 9);\n  const nodes = parseChildren(context, 3 /* TextModes.CDATA */, ancestors);\n  if (context.source.length === 0) {\n    emitError(context, 6 /* ErrorCodes.EOF_IN_CDATA */);\n  } else {\n    advanceBy(context, 3);\n  }\n  return nodes;\n}\nfunction parseComment(context) {\n  const start = getCursor(context);\n  let content;\n  // Regular comment.\n  const match = /--(\\!)?>/.exec(context.source);\n  if (!match) {\n    content = context.source.slice(4);\n    advanceBy(context, context.source.length);\n    emitError(context, 7 /* ErrorCodes.EOF_IN_COMMENT */);\n  } else {\n    if (match.index <= 3) {\n      emitError(context, 0 /* ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT */);\n    }\n\n    if (match[1]) {\n      emitError(context, 10 /* ErrorCodes.INCORRECTLY_CLOSED_COMMENT */);\n    }\n\n    content = context.source.slice(4, match.index);\n    // Advancing with reporting nested comments.\n    const s = context.source.slice(0, match.index);\n    let prevIndex = 1,\n      nestedIndex = 0;\n    while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\n      advanceBy(context, nestedIndex - prevIndex + 1);\n      if (nestedIndex + 4 < s.length) {\n        emitError(context, 16 /* ErrorCodes.NESTED_COMMENT */);\n      }\n\n      prevIndex = nestedIndex + 1;\n    }\n    advanceBy(context, match.index + match[0].length - prevIndex + 1);\n  }\n  return {\n    type: 3 /* NodeTypes.COMMENT */,\n    content,\n    loc: getSelection(context, start)\n  };\n}\nfunction parseBogusComment(context) {\n  const start = getCursor(context);\n  const contentStart = context.source[1] === '?' ? 1 : 2;\n  let content;\n  const closeIndex = context.source.indexOf('>');\n  if (closeIndex === -1) {\n    content = context.source.slice(contentStart);\n    advanceBy(context, context.source.length);\n  } else {\n    content = context.source.slice(contentStart, closeIndex);\n    advanceBy(context, closeIndex + 1);\n  }\n  return {\n    type: 3 /* NodeTypes.COMMENT */,\n    content,\n    loc: getSelection(context, start)\n  };\n}\nfunction parseElement(context, ancestors) {\n  // Start tag.\n  const wasInPre = context.inPre;\n  const wasInVPre = context.inVPre;\n  const parent = last(ancestors);\n  const element = parseTag(context, 0 /* TagType.Start */, parent);\n  const isPreBoundary = context.inPre && !wasInPre;\n  const isVPreBoundary = context.inVPre && !wasInVPre;\n  if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\n    // #4030 self-closing <pre> tag\n    if (isPreBoundary) {\n      context.inPre = false;\n    }\n    if (isVPreBoundary) {\n      context.inVPre = false;\n    }\n    return element;\n  }\n  // Children.\n  ancestors.push(element);\n  const mode = context.options.getTextMode(element, parent);\n  const children = parseChildren(context, mode, ancestors);\n  ancestors.pop();\n  // 2.x inline-template compat\n  {\n    const inlineTemplateProp = element.props.find(p => p.type === 6 /* NodeTypes.ATTRIBUTE */ && p.name === 'inline-template');\n    if (inlineTemplateProp && checkCompatEnabled(\"COMPILER_INLINE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE */, context, inlineTemplateProp.loc)) {\n      const loc = getSelection(context, element.loc.end);\n      inlineTemplateProp.value = {\n        type: 2 /* NodeTypes.TEXT */,\n        content: loc.source,\n        loc\n      };\n    }\n  }\n  element.children = children;\n  // End tag.\n  if (startsWithEndTagOpen(context.source, element.tag)) {\n    parseTag(context, 1 /* TagType.End */, parent);\n  } else {\n    emitError(context, 24 /* ErrorCodes.X_MISSING_END_TAG */, 0, element.loc.start);\n    if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\n      const first = children[0];\n      if (first && startsWith(first.loc.source, '<!--')) {\n        emitError(context, 8 /* ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */);\n      }\n    }\n  }\n\n  element.loc = getSelection(context, element.loc.start);\n  if (isPreBoundary) {\n    context.inPre = false;\n  }\n  if (isVPreBoundary) {\n    context.inVPre = false;\n  }\n  return element;\n}\nconst isSpecialTemplateDirective = /*#__PURE__*/makeMap(`if,else,else-if,for,slot`);\nfunction parseTag(context, type, parent) {\n  // Tag open.\n  const start = getCursor(context);\n  const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\n  const tag = match[1];\n  const ns = context.options.getNamespace(tag, parent);\n  advanceBy(context, match[0].length);\n  advanceSpaces(context);\n  // save current state in case we need to re-parse attributes with v-pre\n  const cursor = getCursor(context);\n  const currentSource = context.source;\n  // check <pre> tag\n  if (context.options.isPreTag(tag)) {\n    context.inPre = true;\n  }\n  // Attributes.\n  let props = parseAttributes(context, type);\n  // check v-pre\n  if (type === 0 /* TagType.Start */ && !context.inVPre && props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'pre')) {\n    context.inVPre = true;\n    // reset context\n    extend(context, cursor);\n    context.source = currentSource;\n    // re-parse attrs and filter out v-pre itself\n    props = parseAttributes(context, type).filter(p => p.name !== 'v-pre');\n  }\n  // Tag close.\n  let isSelfClosing = false;\n  if (context.source.length === 0) {\n    emitError(context, 9 /* ErrorCodes.EOF_IN_TAG */);\n  } else {\n    isSelfClosing = startsWith(context.source, '/>');\n    if (type === 1 /* TagType.End */ && isSelfClosing) {\n      emitError(context, 4 /* ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS */);\n    }\n\n    advanceBy(context, isSelfClosing ? 2 : 1);\n  }\n  if (type === 1 /* TagType.End */) {\n    return;\n  }\n  // 2.x deprecation checks\n  if (process.env.NODE_ENV !== 'production' && isCompatEnabled(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE */, context)) {\n    let hasIf = false;\n    let hasFor = false;\n    for (let i = 0; i < props.length; i++) {\n      const p = props[i];\n      if (p.type === 7 /* NodeTypes.DIRECTIVE */) {\n        if (p.name === 'if') {\n          hasIf = true;\n        } else if (p.name === 'for') {\n          hasFor = true;\n        }\n      }\n      if (hasIf && hasFor) {\n        warnDeprecation(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE */, context, getSelection(context, start));\n        break;\n      }\n    }\n  }\n  let tagType = 0 /* ElementTypes.ELEMENT */;\n  if (!context.inVPre) {\n    if (tag === 'slot') {\n      tagType = 2 /* ElementTypes.SLOT */;\n    } else if (tag === 'template') {\n      if (props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ && isSpecialTemplateDirective(p.name))) {\n        tagType = 3 /* ElementTypes.TEMPLATE */;\n      }\n    } else if (isComponent(tag, props, context)) {\n      tagType = 1 /* ElementTypes.COMPONENT */;\n    }\n  }\n\n  return {\n    type: 1 /* NodeTypes.ELEMENT */,\n    ns,\n    tag,\n    tagType,\n    props,\n    isSelfClosing,\n    children: [],\n    loc: getSelection(context, start),\n    codegenNode: undefined // to be created during transform phase\n  };\n}\n\nfunction isComponent(tag, props, context) {\n  const options = context.options;\n  if (options.isCustomElement(tag)) {\n    return false;\n  }\n  if (tag === 'component' || /^[A-Z]/.test(tag) || isCoreComponent(tag) || options.isBuiltInComponent && options.isBuiltInComponent(tag) || options.isNativeTag && !options.isNativeTag(tag)) {\n    return true;\n  }\n  // at this point the tag should be a native tag, but check for potential \"is\"\n  // casting\n  for (let i = 0; i < props.length; i++) {\n    const p = props[i];\n    if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\n      if (p.name === 'is' && p.value) {\n        if (p.value.content.startsWith('vue:')) {\n          return true;\n        } else if (checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\n          return true;\n        }\n      }\n    } else {\n      // directive\n      // v-is (TODO Deprecate)\n      if (p.name === 'is') {\n        return true;\n      } else if (\n      // :is on plain element - only treat as component in compat mode\n      p.name === 'bind' && isStaticArgOf(p.arg, 'is') && true && checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\n        return true;\n      }\n    }\n  }\n}\nfunction parseAttributes(context, type) {\n  const props = [];\n  const attributeNames = new Set();\n  while (context.source.length > 0 && !startsWith(context.source, '>') && !startsWith(context.source, '/>')) {\n    if (startsWith(context.source, '/')) {\n      emitError(context, 22 /* ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG */);\n      advanceBy(context, 1);\n      advanceSpaces(context);\n      continue;\n    }\n    if (type === 1 /* TagType.End */) {\n      emitError(context, 3 /* ErrorCodes.END_TAG_WITH_ATTRIBUTES */);\n    }\n\n    const attr = parseAttribute(context, attributeNames);\n    // Trim whitespace between class\n    // https://github.com/vuejs/core/issues/4251\n    if (attr.type === 6 /* NodeTypes.ATTRIBUTE */ && attr.value && attr.name === 'class') {\n      attr.value.content = attr.value.content.replace(/\\s+/g, ' ').trim();\n    }\n    if (type === 0 /* TagType.Start */) {\n      props.push(attr);\n    }\n    if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\n      emitError(context, 15 /* ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */);\n    }\n\n    advanceSpaces(context);\n  }\n  return props;\n}\nfunction parseAttribute(context, nameSet) {\n  // Name.\n  const start = getCursor(context);\n  const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\n  const name = match[0];\n  if (nameSet.has(name)) {\n    emitError(context, 2 /* ErrorCodes.DUPLICATE_ATTRIBUTE */);\n  }\n\n  nameSet.add(name);\n  if (name[0] === '=') {\n    emitError(context, 19 /* ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */);\n  }\n\n  {\n    const pattern = /[\"'<]/g;\n    let m;\n    while (m = pattern.exec(name)) {\n      emitError(context, 17 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */, m.index);\n    }\n  }\n  advanceBy(context, name.length);\n  // Value\n  let value = undefined;\n  if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\n    advanceSpaces(context);\n    advanceBy(context, 1);\n    advanceSpaces(context);\n    value = parseAttributeValue(context);\n    if (!value) {\n      emitError(context, 13 /* ErrorCodes.MISSING_ATTRIBUTE_VALUE */);\n    }\n  }\n\n  const loc = getSelection(context, start);\n  if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\n    const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);\n    let isPropShorthand = startsWith(name, '.');\n    let dirName = match[1] || (isPropShorthand || startsWith(name, ':') ? 'bind' : startsWith(name, '@') ? 'on' : 'slot');\n    let arg;\n    if (match[2]) {\n      const isSlot = dirName === 'slot';\n      const startOffset = name.lastIndexOf(match[2]);\n      const loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match[2].length + (isSlot && match[3] || '').length));\n      let content = match[2];\n      let isStatic = true;\n      if (content.startsWith('[')) {\n        isStatic = false;\n        if (!content.endsWith(']')) {\n          emitError(context, 27 /* ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */);\n          content = content.slice(1);\n        } else {\n          content = content.slice(1, content.length - 1);\n        }\n      } else if (isSlot) {\n        // #1241 special case for v-slot: vuetify relies extensively on slot\n        // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\n        // supports such usage so we are keeping it consistent with 2.x.\n        content += match[3] || '';\n      }\n      arg = {\n        type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\n        content,\n        isStatic,\n        constType: isStatic ? 3 /* ConstantTypes.CAN_STRINGIFY */ : 0 /* ConstantTypes.NOT_CONSTANT */,\n        loc\n      };\n    }\n    if (value && value.isQuoted) {\n      const valueLoc = value.loc;\n      valueLoc.start.offset++;\n      valueLoc.start.column++;\n      valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\n      valueLoc.source = valueLoc.source.slice(1, -1);\n    }\n    const modifiers = match[3] ? match[3].slice(1).split('.') : [];\n    if (isPropShorthand) modifiers.push('prop');\n    // 2.x compat v-bind:foo.sync -> v-model:foo\n    if (dirName === 'bind' && arg) {\n      if (modifiers.includes('sync') && checkCompatEnabled(\"COMPILER_V_BIND_SYNC\" /* CompilerDeprecationTypes.COMPILER_V_BIND_SYNC */, context, loc, arg.loc.source)) {\n        dirName = 'model';\n        modifiers.splice(modifiers.indexOf('sync'), 1);\n      }\n      if (process.env.NODE_ENV !== 'production' && modifiers.includes('prop')) {\n        checkCompatEnabled(\"COMPILER_V_BIND_PROP\" /* CompilerDeprecationTypes.COMPILER_V_BIND_PROP */, context, loc);\n      }\n    }\n    return {\n      type: 7 /* NodeTypes.DIRECTIVE */,\n      name: dirName,\n      exp: value && {\n        type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\n        content: value.content,\n        isStatic: false,\n        // Treat as non-constant by default. This can be potentially set to\n        // other values by `transformExpression` to make it eligible for hoisting.\n        constType: 0 /* ConstantTypes.NOT_CONSTANT */,\n        loc: value.loc\n      },\n      arg,\n      modifiers,\n      loc\n    };\n  }\n  // missing directive name or illegal directive name\n  if (!context.inVPre && startsWith(name, 'v-')) {\n    emitError(context, 26 /* ErrorCodes.X_MISSING_DIRECTIVE_NAME */);\n  }\n\n  return {\n    type: 6 /* NodeTypes.ATTRIBUTE */,\n    name,\n    value: value && {\n      type: 2 /* NodeTypes.TEXT */,\n      content: value.content,\n      loc: value.loc\n    },\n    loc\n  };\n}\nfunction parseAttributeValue(context) {\n  const start = getCursor(context);\n  let content;\n  const quote = context.source[0];\n  const isQuoted = quote === `\"` || quote === `'`;\n  if (isQuoted) {\n    // Quoted value.\n    advanceBy(context, 1);\n    const endIndex = context.source.indexOf(quote);\n    if (endIndex === -1) {\n      content = parseTextData(context, context.source.length, 4 /* TextModes.ATTRIBUTE_VALUE */);\n    } else {\n      content = parseTextData(context, endIndex, 4 /* TextModes.ATTRIBUTE_VALUE */);\n      advanceBy(context, 1);\n    }\n  } else {\n    // Unquoted\n    const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\n    if (!match) {\n      return undefined;\n    }\n    const unexpectedChars = /[\"'<=`]/g;\n    let m;\n    while (m = unexpectedChars.exec(match[0])) {\n      emitError(context, 18 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */, m.index);\n    }\n    content = parseTextData(context, match[0].length, 4 /* TextModes.ATTRIBUTE_VALUE */);\n  }\n\n  return {\n    content,\n    isQuoted,\n    loc: getSelection(context, start)\n  };\n}\nfunction parseInterpolation(context, mode) {\n  const [open, close] = context.options.delimiters;\n  const closeIndex = context.source.indexOf(close, open.length);\n  if (closeIndex === -1) {\n    emitError(context, 25 /* ErrorCodes.X_MISSING_INTERPOLATION_END */);\n    return undefined;\n  }\n  const start = getCursor(context);\n  advanceBy(context, open.length);\n  const innerStart = getCursor(context);\n  const innerEnd = getCursor(context);\n  const rawContentLength = closeIndex - open.length;\n  const rawContent = context.source.slice(0, rawContentLength);\n  const preTrimContent = parseTextData(context, rawContentLength, mode);\n  const content = preTrimContent.trim();\n  const startOffset = preTrimContent.indexOf(content);\n  if (startOffset > 0) {\n    advancePositionWithMutation(innerStart, rawContent, startOffset);\n  }\n  const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\n  advancePositionWithMutation(innerEnd, rawContent, endOffset);\n  advanceBy(context, close.length);\n  return {\n    type: 5 /* NodeTypes.INTERPOLATION */,\n    content: {\n      type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\n      isStatic: false,\n      // Set `isConstant` to false by default and will decide in transformExpression\n      constType: 0 /* ConstantTypes.NOT_CONSTANT */,\n      content,\n      loc: getSelection(context, innerStart, innerEnd)\n    },\n    loc: getSelection(context, start)\n  };\n}\nfunction parseText(context, mode) {\n  const endTokens = mode === 3 /* TextModes.CDATA */ ? [']]>'] : ['<', context.options.delimiters[0]];\n  let endIndex = context.source.length;\n  for (let i = 0; i < endTokens.length; i++) {\n    const index = context.source.indexOf(endTokens[i], 1);\n    if (index !== -1 && endIndex > index) {\n      endIndex = index;\n    }\n  }\n  const start = getCursor(context);\n  const content = parseTextData(context, endIndex, mode);\n  return {\n    type: 2 /* NodeTypes.TEXT */,\n    content,\n    loc: getSelection(context, start)\n  };\n}\n/**\n * Get text data with a given length from the current location.\n * This translates HTML entities in the text data.\n */\nfunction parseTextData(context, length, mode) {\n  const rawText = context.source.slice(0, length);\n  advanceBy(context, length);\n  if (mode === 2 /* TextModes.RAWTEXT */ || mode === 3 /* TextModes.CDATA */ || !rawText.includes('&')) {\n    return rawText;\n  } else {\n    // DATA or RCDATA containing \"&\"\". Entity decoding required.\n    return context.options.decodeEntities(rawText, mode === 4 /* TextModes.ATTRIBUTE_VALUE */);\n  }\n}\n\nfunction getCursor(context) {\n  const {\n    column,\n    line,\n    offset\n  } = context;\n  return {\n    column,\n    line,\n    offset\n  };\n}\nfunction getSelection(context, start, end) {\n  end = end || getCursor(context);\n  return {\n    start,\n    end,\n    source: context.originalSource.slice(start.offset, end.offset)\n  };\n}\nfunction last(xs) {\n  return xs[xs.length - 1];\n}\nfunction startsWith(source, searchString) {\n  return source.startsWith(searchString);\n}\nfunction advanceBy(context, numberOfCharacters) {\n  const {\n    source\n  } = context;\n  advancePositionWithMutation(context, source, numberOfCharacters);\n  context.source = source.slice(numberOfCharacters);\n}\nfunction advanceSpaces(context) {\n  const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\n  if (match) {\n    advanceBy(context, match[0].length);\n  }\n}\nfunction getNewPosition(context, start, numberOfCharacters) {\n  return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\n}\nfunction emitError(context, code, offset, loc = getCursor(context)) {\n  if (offset) {\n    loc.offset += offset;\n    loc.column += offset;\n  }\n  context.options.onError(createCompilerError(code, {\n    start: loc,\n    end: loc,\n    source: ''\n  }));\n}\nfunction isEnd(context, mode, ancestors) {\n  const s = context.source;\n  switch (mode) {\n    case 0 /* TextModes.DATA */:\n      if (startsWith(s, '</')) {\n        // TODO: probably bad performance\n        for (let i = ancestors.length - 1; i >= 0; --i) {\n          if (startsWithEndTagOpen(s, ancestors[i].tag)) {\n            return true;\n          }\n        }\n      }\n      break;\n    case 1 /* TextModes.RCDATA */:\n    case 2 /* TextModes.RAWTEXT */:\n      {\n        const parent = last(ancestors);\n        if (parent && startsWithEndTagOpen(s, parent.tag)) {\n          return true;\n        }\n        break;\n      }\n    case 3 /* TextModes.CDATA */:\n      if (startsWith(s, ']]>')) {\n        return true;\n      }\n      break;\n  }\n  return !s;\n}\nfunction startsWithEndTagOpen(source, tag) {\n  return startsWith(source, '</') && source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() && /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>');\n}\nfunction hoistStatic(root, context) {\n  walk(root, context,\n  // Root node is unfortunately non-hoistable due to potential parent\n  // fallthrough attributes.\n  isSingleElementRoot(root, root.children[0]));\n}\nfunction isSingleElementRoot(root, child) {\n  const {\n    children\n  } = root;\n  return children.length === 1 && child.type === 1 /* NodeTypes.ELEMENT */ && !isSlotOutlet(child);\n}\nfunction walk(node, context, doNotHoistNode = false) {\n  const {\n    children\n  } = node;\n  const originalCount = children.length;\n  let hoistedCount = 0;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    // only plain elements & text calls are eligible for hoisting.\n    if (child.type === 1 /* NodeTypes.ELEMENT */ && child.tagType === 0 /* ElementTypes.ELEMENT */) {\n      const constantType = doNotHoistNode ? 0 /* ConstantTypes.NOT_CONSTANT */ : getConstantType(child, context);\n      if (constantType > 0 /* ConstantTypes.NOT_CONSTANT */) {\n        if (constantType >= 2 /* ConstantTypes.CAN_HOIST */) {\n          child.codegenNode.patchFlag = -1 /* PatchFlags.HOISTED */ + (process.env.NODE_ENV !== 'production' ? ` /* HOISTED */` : ``);\n          child.codegenNode = context.hoist(child.codegenNode);\n          hoistedCount++;\n          continue;\n        }\n      } else {\n        // node may contain dynamic children, but its props may be eligible for\n        // hoisting.\n        const codegenNode = child.codegenNode;\n        if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\n          const flag = getPatchFlag(codegenNode);\n          if ((!flag || flag === 512 /* PatchFlags.NEED_PATCH */ || flag === 1 /* PatchFlags.TEXT */) && getGeneratedPropsConstantType(child, context) >= 2 /* ConstantTypes.CAN_HOIST */) {\n            const props = getNodeProps(child);\n            if (props) {\n              codegenNode.props = context.hoist(props);\n            }\n          }\n          if (codegenNode.dynamicProps) {\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\n          }\n        }\n      }\n    }\n    // walk further\n    if (child.type === 1 /* NodeTypes.ELEMENT */) {\n      const isComponent = child.tagType === 1 /* ElementTypes.COMPONENT */;\n      if (isComponent) {\n        context.scopes.vSlot++;\n      }\n      walk(child, context);\n      if (isComponent) {\n        context.scopes.vSlot--;\n      }\n    } else if (child.type === 11 /* NodeTypes.FOR */) {\n      // Do not hoist v-for single child because it has to be a block\n      walk(child, context, child.children.length === 1);\n    } else if (child.type === 9 /* NodeTypes.IF */) {\n      for (let i = 0; i < child.branches.length; i++) {\n        // Do not hoist v-if single child because it has to be a block\n        walk(child.branches[i], context, child.branches[i].children.length === 1);\n      }\n    }\n  }\n  if (hoistedCount && context.transformHoist) {\n    context.transformHoist(children, context, node);\n  }\n  // all children were hoisted - the entire children array is hoistable.\n  if (hoistedCount && hoistedCount === originalCount && node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 0 /* ElementTypes.ELEMENT */ && node.codegenNode && node.codegenNode.type === 13 /* NodeTypes.VNODE_CALL */ && isArray(node.codegenNode.children)) {\n    node.codegenNode.children = context.hoist(createArrayExpression(node.codegenNode.children));\n  }\n}\nfunction getConstantType(node, context) {\n  const {\n    constantCache\n  } = context;\n  switch (node.type) {\n    case 1 /* NodeTypes.ELEMENT */:\n      if (node.tagType !== 0 /* ElementTypes.ELEMENT */) {\n        return 0 /* ConstantTypes.NOT_CONSTANT */;\n      }\n\n      const cached = constantCache.get(node);\n      if (cached !== undefined) {\n        return cached;\n      }\n      const codegenNode = node.codegenNode;\n      if (codegenNode.type !== 13 /* NodeTypes.VNODE_CALL */) {\n        return 0 /* ConstantTypes.NOT_CONSTANT */;\n      }\n\n      if (codegenNode.isBlock && node.tag !== 'svg' && node.tag !== 'foreignObject') {\n        return 0 /* ConstantTypes.NOT_CONSTANT */;\n      }\n\n      const flag = getPatchFlag(codegenNode);\n      if (!flag) {\n        let returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\n        // Element itself has no patch flag. However we still need to check:\n        // 1. Even for a node with no patch flag, it is possible for it to contain\n        // non-hoistable expressions that refers to scope variables, e.g. compiler\n        // injected keys or cached event handlers. Therefore we need to always\n        // check the codegenNode's props to be sure.\n        const generatedPropsType = getGeneratedPropsConstantType(node, context);\n        if (generatedPropsType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n          constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\n          return 0 /* ConstantTypes.NOT_CONSTANT */;\n        }\n\n        if (generatedPropsType < returnType) {\n          returnType = generatedPropsType;\n        }\n        // 2. its children.\n        for (let i = 0; i < node.children.length; i++) {\n          const childType = getConstantType(node.children[i], context);\n          if (childType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n            constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\n            return 0 /* ConstantTypes.NOT_CONSTANT */;\n          }\n\n          if (childType < returnType) {\n            returnType = childType;\n          }\n        }\n        // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\n        // type, check if any of the props can cause the type to be lowered\n        // we can skip can_patch because it's guaranteed by the absence of a\n        // patchFlag.\n        if (returnType > 1 /* ConstantTypes.CAN_SKIP_PATCH */) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'bind' && p.exp) {\n              const expType = getConstantType(p.exp, context);\n              if (expType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n                constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\n              }\n\n              if (expType < returnType) {\n                returnType = expType;\n              }\n            }\n          }\n        }\n        // only svg/foreignObject could be block here, however if they are\n        // static then they don't need to be blocks since there will be no\n        // nested updates.\n        if (codegenNode.isBlock) {\n          // except set custom directives.\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7 /* NodeTypes.DIRECTIVE */) {\n              constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\n              return 0 /* ConstantTypes.NOT_CONSTANT */;\n            }\n          }\n\n          context.removeHelper(OPEN_BLOCK);\n          context.removeHelper(getVNodeBlockHelper(context.inSSR, codegenNode.isComponent));\n          codegenNode.isBlock = false;\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\n        }\n        constantCache.set(node, returnType);\n        return returnType;\n      } else {\n        constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\n        return 0 /* ConstantTypes.NOT_CONSTANT */;\n      }\n\n    case 2 /* NodeTypes.TEXT */:\n    case 3 /* NodeTypes.COMMENT */:\n      return 3 /* ConstantTypes.CAN_STRINGIFY */;\n    case 9 /* NodeTypes.IF */:\n    case 11 /* NodeTypes.FOR */:\n    case 10 /* NodeTypes.IF_BRANCH */:\n      return 0 /* ConstantTypes.NOT_CONSTANT */;\n    case 5 /* NodeTypes.INTERPOLATION */:\n    case 12 /* NodeTypes.TEXT_CALL */:\n      return getConstantType(node.content, context);\n    case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\n      return node.constType;\n    case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\n      let returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        if (isString(child) || isSymbol(child)) {\n          continue;\n        }\n        const childType = getConstantType(child, context);\n        if (childType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n          return 0 /* ConstantTypes.NOT_CONSTANT */;\n        } else if (childType < returnType) {\n          returnType = childType;\n        }\n      }\n      return returnType;\n    default:\n      if (process.env.NODE_ENV !== 'production') ;\n      return 0 /* ConstantTypes.NOT_CONSTANT */;\n  }\n}\n\nconst allowHoistedHelperSet = new Set([NORMALIZE_CLASS, NORMALIZE_STYLE, NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\nfunction getConstantTypeOfHelperCall(value, context) {\n  if (value.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */ && !isString(value.callee) && allowHoistedHelperSet.has(value.callee)) {\n    const arg = value.arguments[0];\n    if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n      return getConstantType(arg, context);\n    } else if (arg.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\n      // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\n      return getConstantTypeOfHelperCall(arg, context);\n    }\n  }\n  return 0 /* ConstantTypes.NOT_CONSTANT */;\n}\n\nfunction getGeneratedPropsConstantType(node, context) {\n  let returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\n  const props = getNodeProps(node);\n  if (props && props.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\n    const {\n      properties\n    } = props;\n    for (let i = 0; i < properties.length; i++) {\n      const {\n        key,\n        value\n      } = properties[i];\n      const keyType = getConstantType(key, context);\n      if (keyType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n        return keyType;\n      }\n      if (keyType < returnType) {\n        returnType = keyType;\n      }\n      let valueType;\n      if (value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n        valueType = getConstantType(value, context);\n      } else if (value.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\n        // some helper calls can be hoisted,\n        // such as the `normalizeProps` generated by the compiler for pre-normalize class,\n        // in this case we need to respect the ConstantType of the helper's arguments\n        valueType = getConstantTypeOfHelperCall(value, context);\n      } else {\n        valueType = 0 /* ConstantTypes.NOT_CONSTANT */;\n      }\n\n      if (valueType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n        return valueType;\n      }\n      if (valueType < returnType) {\n        returnType = valueType;\n      }\n    }\n  }\n  return returnType;\n}\nfunction getNodeProps(node) {\n  const codegenNode = node.codegenNode;\n  if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\n    return codegenNode.props;\n  }\n}\nfunction getPatchFlag(node) {\n  const flag = node.patchFlag;\n  return flag ? parseInt(flag, 10) : undefined;\n}\nfunction createTransformContext(root, {\n  filename = '',\n  prefixIdentifiers = false,\n  hoistStatic = false,\n  cacheHandlers = false,\n  nodeTransforms = [],\n  directiveTransforms = {},\n  transformHoist = null,\n  isBuiltInComponent = NOOP,\n  isCustomElement = NOOP,\n  expressionPlugins = [],\n  scopeId = null,\n  slotted = true,\n  ssr = false,\n  inSSR = false,\n  ssrCssVars = ``,\n  bindingMetadata = EMPTY_OBJ,\n  inline = false,\n  isTS = false,\n  onError = defaultOnError,\n  onWarn = defaultOnWarn,\n  compatConfig\n}) {\n  const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/);\n  const context = {\n    // options\n    selfName: nameMatch && capitalize(camelize$1(nameMatch[1])),\n    prefixIdentifiers,\n    hoistStatic,\n    cacheHandlers,\n    nodeTransforms,\n    directiveTransforms,\n    transformHoist,\n    isBuiltInComponent,\n    isCustomElement,\n    expressionPlugins,\n    scopeId,\n    slotted,\n    ssr,\n    inSSR,\n    ssrCssVars,\n    bindingMetadata,\n    inline,\n    isTS,\n    onError,\n    onWarn,\n    compatConfig,\n    // state\n    root,\n    helpers: new Map(),\n    components: new Set(),\n    directives: new Set(),\n    hoists: [],\n    imports: [],\n    constantCache: new Map(),\n    temps: 0,\n    cached: 0,\n    identifiers: Object.create(null),\n    scopes: {\n      vFor: 0,\n      vSlot: 0,\n      vPre: 0,\n      vOnce: 0\n    },\n    parent: null,\n    currentNode: root,\n    childIndex: 0,\n    inVOnce: false,\n    // methods\n    helper(name) {\n      const count = context.helpers.get(name) || 0;\n      context.helpers.set(name, count + 1);\n      return name;\n    },\n    removeHelper(name) {\n      const count = context.helpers.get(name);\n      if (count) {\n        const currentCount = count - 1;\n        if (!currentCount) {\n          context.helpers.delete(name);\n        } else {\n          context.helpers.set(name, currentCount);\n        }\n      }\n    },\n    helperString(name) {\n      return `_${helperNameMap[context.helper(name)]}`;\n    },\n    replaceNode(node) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        if (!context.currentNode) {\n          throw new Error(`Node being replaced is already removed.`);\n        }\n        if (!context.parent) {\n          throw new Error(`Cannot replace root node.`);\n        }\n      }\n      context.parent.children[context.childIndex] = context.currentNode = node;\n    },\n    removeNode(node) {\n      if (process.env.NODE_ENV !== 'production' && !context.parent) {\n        throw new Error(`Cannot remove root node.`);\n      }\n      const list = context.parent.children;\n      const removalIndex = node ? list.indexOf(node) : context.currentNode ? context.childIndex : -1;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && removalIndex < 0) {\n        throw new Error(`node being removed is not a child of current parent`);\n      }\n      if (!node || node === context.currentNode) {\n        // current node removed\n        context.currentNode = null;\n        context.onNodeRemoved();\n      } else {\n        // sibling node removed\n        if (context.childIndex > removalIndex) {\n          context.childIndex--;\n          context.onNodeRemoved();\n        }\n      }\n      context.parent.children.splice(removalIndex, 1);\n    },\n    onNodeRemoved: () => {},\n    addIdentifiers(exp) {},\n    removeIdentifiers(exp) {},\n    hoist(exp) {\n      if (isString(exp)) exp = createSimpleExpression(exp);\n      context.hoists.push(exp);\n      const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, 2 /* ConstantTypes.CAN_HOIST */);\n      identifier.hoisted = exp;\n      return identifier;\n    },\n    cache(exp, isVNode = false) {\n      return createCacheExpression(context.cached++, exp, isVNode);\n    }\n  };\n  {\n    context.filters = new Set();\n  }\n  return context;\n}\nfunction transform(root, options) {\n  const context = createTransformContext(root, options);\n  traverseNode(root, context);\n  if (options.hoistStatic) {\n    hoistStatic(root, context);\n  }\n  if (!options.ssr) {\n    createRootCodegen(root, context);\n  }\n  // finalize meta information\n  root.helpers = new Set([...context.helpers.keys()]);\n  root.components = [...context.components];\n  root.directives = [...context.directives];\n  root.imports = context.imports;\n  root.hoists = context.hoists;\n  root.temps = context.temps;\n  root.cached = context.cached;\n  {\n    root.filters = [...context.filters];\n  }\n}\nfunction createRootCodegen(root, context) {\n  const {\n    helper\n  } = context;\n  const {\n    children\n  } = root;\n  if (children.length === 1) {\n    const child = children[0];\n    // if the single child is an element, turn it into a block.\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\n      // single element root is never hoisted so codegenNode will never be\n      // SimpleExpressionNode\n      const codegenNode = child.codegenNode;\n      if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\n        makeBlock(codegenNode, context);\n      }\n      root.codegenNode = codegenNode;\n    } else {\n      // - single <slot/>, IfNode, ForNode: already blocks.\n      // - single text node: always patched.\n      // root codegen falls through via genNode()\n      root.codegenNode = child;\n    }\n  } else if (children.length > 1) {\n    // root has multiple nodes - return a fragment block.\n    let patchFlag = 64 /* PatchFlags.STABLE_FRAGMENT */;\n    let patchFlagText = PatchFlagNames[64 /* PatchFlags.STABLE_FRAGMENT */];\n    // check if the fragment actually contains a single valid child with\n    // the rest being comments\n    if (process.env.NODE_ENV !== 'production' && children.filter(c => c.type !== 3 /* NodeTypes.COMMENT */).length === 1) {\n      patchFlag |= 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */;\n      patchFlagText += `, ${PatchFlagNames[2048 /* PatchFlags.DEV_ROOT_FRAGMENT */]}`;\n    }\n    root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, patchFlag + (process.env.NODE_ENV !== 'production' ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, undefined, false /* isComponent */);\n  } else ;\n}\nfunction traverseChildren(parent, context) {\n  let i = 0;\n  const nodeRemoved = () => {\n    i--;\n  };\n  for (; i < parent.children.length; i++) {\n    const child = parent.children[i];\n    if (isString(child)) continue;\n    context.parent = parent;\n    context.childIndex = i;\n    context.onNodeRemoved = nodeRemoved;\n    traverseNode(child, context);\n  }\n}\nfunction traverseNode(node, context) {\n  context.currentNode = node;\n  // apply transform plugins\n  const {\n    nodeTransforms\n  } = context;\n  const exitFns = [];\n  for (let i = 0; i < nodeTransforms.length; i++) {\n    const onExit = nodeTransforms[i](node, context);\n    if (onExit) {\n      if (isArray(onExit)) {\n        exitFns.push(...onExit);\n      } else {\n        exitFns.push(onExit);\n      }\n    }\n    if (!context.currentNode) {\n      // node was removed\n      return;\n    } else {\n      // node may have been replaced\n      node = context.currentNode;\n    }\n  }\n  switch (node.type) {\n    case 3 /* NodeTypes.COMMENT */:\n      if (!context.ssr) {\n        // inject import for the Comment symbol, which is needed for creating\n        // comment nodes with `createVNode`\n        context.helper(CREATE_COMMENT);\n      }\n      break;\n    case 5 /* NodeTypes.INTERPOLATION */:\n      // no need to traverse, but we need to inject toString helper\n      if (!context.ssr) {\n        context.helper(TO_DISPLAY_STRING);\n      }\n      break;\n    // for container types, further traverse downwards\n    case 9 /* NodeTypes.IF */:\n      for (let i = 0; i < node.branches.length; i++) {\n        traverseNode(node.branches[i], context);\n      }\n      break;\n    case 10 /* NodeTypes.IF_BRANCH */:\n    case 11 /* NodeTypes.FOR */:\n    case 1 /* NodeTypes.ELEMENT */:\n    case 0 /* NodeTypes.ROOT */:\n      traverseChildren(node, context);\n      break;\n  }\n  // exit transforms\n  context.currentNode = node;\n  let i = exitFns.length;\n  while (i--) {\n    exitFns[i]();\n  }\n}\nfunction createStructuralDirectiveTransform(name, fn) {\n  const matches = isString(name) ? n => n === name : n => name.test(n);\n  return (node, context) => {\n    if (node.type === 1 /* NodeTypes.ELEMENT */) {\n      const {\n        props\n      } = node;\n      // structural directive transforms are not concerned with slots\n      // as they are handled separately in vSlot.ts\n      if (node.tagType === 3 /* ElementTypes.TEMPLATE */ && props.some(isVSlot)) {\n        return;\n      }\n      const exitFns = [];\n      for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n        if (prop.type === 7 /* NodeTypes.DIRECTIVE */ && matches(prop.name)) {\n          // structural directives are removed to avoid infinite recursion\n          // also we remove them *before* applying so that it can further\n          // traverse itself in case it moves the node around\n          props.splice(i, 1);\n          i--;\n          const onExit = fn(node, prop, context);\n          if (onExit) exitFns.push(onExit);\n        }\n      }\n      return exitFns;\n    }\n  };\n}\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\nconst aliasHelper = s => `${helperNameMap[s]}: _${helperNameMap[s]}`;\nfunction createCodegenContext(ast, {\n  mode = 'function',\n  prefixIdentifiers = mode === 'module',\n  sourceMap = false,\n  filename = `template.vue.html`,\n  scopeId = null,\n  optimizeImports = false,\n  runtimeGlobalName = `Vue`,\n  runtimeModuleName = `vue`,\n  ssrRuntimeModuleName = 'vue/server-renderer',\n  ssr = false,\n  isTS = false,\n  inSSR = false\n}) {\n  const context = {\n    mode,\n    prefixIdentifiers,\n    sourceMap,\n    filename,\n    scopeId,\n    optimizeImports,\n    runtimeGlobalName,\n    runtimeModuleName,\n    ssrRuntimeModuleName,\n    ssr,\n    isTS,\n    inSSR,\n    source: ast.loc.source,\n    code: ``,\n    column: 1,\n    line: 1,\n    offset: 0,\n    indentLevel: 0,\n    pure: false,\n    map: undefined,\n    helper(key) {\n      return `_${helperNameMap[key]}`;\n    },\n    push(code, node) {\n      context.code += code;\n    },\n    indent() {\n      newline(++context.indentLevel);\n    },\n    deindent(withoutNewLine = false) {\n      if (withoutNewLine) {\n        --context.indentLevel;\n      } else {\n        newline(--context.indentLevel);\n      }\n    },\n    newline() {\n      newline(context.indentLevel);\n    }\n  };\n  function newline(n) {\n    context.push('\\n' + `  `.repeat(n));\n  }\n  return context;\n}\nfunction generate(ast, options = {}) {\n  const context = createCodegenContext(ast, options);\n  if (options.onContextCreated) options.onContextCreated(context);\n  const {\n    mode,\n    push,\n    prefixIdentifiers,\n    indent,\n    deindent,\n    newline,\n    scopeId,\n    ssr\n  } = context;\n  const helpers = Array.from(ast.helpers);\n  const hasHelpers = helpers.length > 0;\n  const useWithBlock = !prefixIdentifiers && mode !== 'module';\n  const isSetupInlined = !true;\n  // preambles\n  // in setup() inline mode, the preamble is generated in a sub context\n  // and returned separately.\n  const preambleContext = isSetupInlined ? createCodegenContext(ast, options) : context;\n  {\n    genFunctionPreamble(ast, preambleContext);\n  }\n  // enter render function\n  const functionName = ssr ? `ssrRender` : `render`;\n  const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache'];\n  const signature = args.join(', ');\n  {\n    push(`function ${functionName}(${signature}) {`);\n  }\n  indent();\n  if (useWithBlock) {\n    push(`with (_ctx) {`);\n    indent();\n    // function mode const declarations should be inside with block\n    // also they should be renamed to avoid collision with user properties\n    if (hasHelpers) {\n      push(`const { ${helpers.map(aliasHelper).join(', ')} } = _Vue`);\n      push(`\\n`);\n      newline();\n    }\n  }\n  // generate asset resolution statements\n  if (ast.components.length) {\n    genAssets(ast.components, 'component', context);\n    if (ast.directives.length || ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.directives.length) {\n    genAssets(ast.directives, 'directive', context);\n    if (ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.filters && ast.filters.length) {\n    newline();\n    genAssets(ast.filters, 'filter', context);\n    newline();\n  }\n  if (ast.temps > 0) {\n    push(`let `);\n    for (let i = 0; i < ast.temps; i++) {\n      push(`${i > 0 ? `, ` : ``}_temp${i}`);\n    }\n  }\n  if (ast.components.length || ast.directives.length || ast.temps) {\n    push(`\\n`);\n    newline();\n  }\n  // generate the VNode tree expression\n  if (!ssr) {\n    push(`return `);\n  }\n  if (ast.codegenNode) {\n    genNode(ast.codegenNode, context);\n  } else {\n    push(`null`);\n  }\n  if (useWithBlock) {\n    deindent();\n    push(`}`);\n  }\n  deindent();\n  push(`}`);\n  return {\n    ast,\n    code: context.code,\n    preamble: isSetupInlined ? preambleContext.code : ``,\n    // SourceMapGenerator does have toJSON() method but it's not in the types\n    map: context.map ? context.map.toJSON() : undefined\n  };\n}\nfunction genFunctionPreamble(ast, context) {\n  const {\n    ssr,\n    prefixIdentifiers,\n    push,\n    newline,\n    runtimeModuleName,\n    runtimeGlobalName,\n    ssrRuntimeModuleName\n  } = context;\n  const VueBinding = runtimeGlobalName;\n  // Generate const declaration for helpers\n  // In prefix mode, we place the const declaration at top so it's done\n  // only once; But if we not prefixing, we place the declaration inside the\n  // with block so it doesn't incur the `in` check cost for every helper access.\n  const helpers = Array.from(ast.helpers);\n  if (helpers.length > 0) {\n    {\n      // \"with\" mode.\n      // save Vue in a separate variable to avoid collision\n      push(`const _Vue = ${VueBinding}\\n`);\n      // in \"with\" mode, helpers are declared inside the with block to avoid\n      // has check cost, but hoists are lifted out of the function - we need\n      // to provide the helper here.\n      if (ast.hoists.length) {\n        const staticHelpers = [CREATE_VNODE, CREATE_ELEMENT_VNODE, CREATE_COMMENT, CREATE_TEXT, CREATE_STATIC].filter(helper => helpers.includes(helper)).map(aliasHelper).join(', ');\n        push(`const { ${staticHelpers} } = _Vue\\n`);\n      }\n    }\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  push(`return `);\n}\nfunction genAssets(assets, type, {\n  helper,\n  push,\n  newline,\n  isTS\n}) {\n  const resolver = helper(type === 'filter' ? RESOLVE_FILTER : type === 'component' ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE);\n  for (let i = 0; i < assets.length; i++) {\n    let id = assets[i];\n    // potential component implicit self-reference inferred from SFC filename\n    const maybeSelfReference = id.endsWith('__self');\n    if (maybeSelfReference) {\n      id = id.slice(0, -6);\n    }\n    push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`);\n    if (i < assets.length - 1) {\n      newline();\n    }\n  }\n}\nfunction genHoists(hoists, context) {\n  if (!hoists.length) {\n    return;\n  }\n  context.pure = true;\n  const {\n    push,\n    newline,\n    helper,\n    scopeId,\n    mode\n  } = context;\n  newline();\n  for (let i = 0; i < hoists.length; i++) {\n    const exp = hoists[i];\n    if (exp) {\n      push(`const _hoisted_${i + 1} = ${``}`);\n      genNode(exp, context);\n      newline();\n    }\n  }\n  context.pure = false;\n}\nfunction isText(n) {\n  return isString(n) || n.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ || n.type === 2 /* NodeTypes.TEXT */ || n.type === 5 /* NodeTypes.INTERPOLATION */ || n.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */;\n}\n\nfunction genNodeListAsArray(nodes, context) {\n  const multilines = nodes.length > 3 || process.env.NODE_ENV !== 'production' && nodes.some(n => isArray(n) || !isText(n));\n  context.push(`[`);\n  multilines && context.indent();\n  genNodeList(nodes, context, multilines);\n  multilines && context.deindent();\n  context.push(`]`);\n}\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\n  const {\n    push,\n    newline\n  } = context;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (isString(node)) {\n      push(node);\n    } else if (isArray(node)) {\n      genNodeListAsArray(node, context);\n    } else {\n      genNode(node, context);\n    }\n    if (i < nodes.length - 1) {\n      if (multilines) {\n        comma && push(',');\n        newline();\n      } else {\n        comma && push(', ');\n      }\n    }\n  }\n}\nfunction genNode(node, context) {\n  if (isString(node)) {\n    context.push(node);\n    return;\n  }\n  if (isSymbol(node)) {\n    context.push(context.helper(node));\n    return;\n  }\n  switch (node.type) {\n    case 1 /* NodeTypes.ELEMENT */:\n    case 9 /* NodeTypes.IF */:\n    case 11 /* NodeTypes.FOR */:\n      process.env.NODE_ENV !== 'production' && assert(node.codegenNode != null, `Codegen node is missing for element/if/for node. ` + `Apply appropriate transforms first.`);\n      genNode(node.codegenNode, context);\n      break;\n    case 2 /* NodeTypes.TEXT */:\n      genText(node, context);\n      break;\n    case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\n      genExpression(node, context);\n      break;\n    case 5 /* NodeTypes.INTERPOLATION */:\n      genInterpolation(node, context);\n      break;\n    case 12 /* NodeTypes.TEXT_CALL */:\n      genNode(node.codegenNode, context);\n      break;\n    case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\n      genCompoundExpression(node, context);\n      break;\n    case 3 /* NodeTypes.COMMENT */:\n      genComment(node, context);\n      break;\n    case 13 /* NodeTypes.VNODE_CALL */:\n      genVNodeCall(node, context);\n      break;\n    case 14 /* NodeTypes.JS_CALL_EXPRESSION */:\n      genCallExpression(node, context);\n      break;\n    case 15 /* NodeTypes.JS_OBJECT_EXPRESSION */:\n      genObjectExpression(node, context);\n      break;\n    case 17 /* NodeTypes.JS_ARRAY_EXPRESSION */:\n      genArrayExpression(node, context);\n      break;\n    case 18 /* NodeTypes.JS_FUNCTION_EXPRESSION */:\n      genFunctionExpression(node, context);\n      break;\n    case 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */:\n      genConditionalExpression(node, context);\n      break;\n    case 20 /* NodeTypes.JS_CACHE_EXPRESSION */:\n      genCacheExpression(node, context);\n      break;\n    case 21 /* NodeTypes.JS_BLOCK_STATEMENT */:\n      genNodeList(node.body, context, true, false);\n      break;\n    // SSR only types\n    case 22 /* NodeTypes.JS_TEMPLATE_LITERAL */:\n      break;\n    case 23 /* NodeTypes.JS_IF_STATEMENT */:\n      break;\n    case 24 /* NodeTypes.JS_ASSIGNMENT_EXPRESSION */:\n      break;\n    case 25 /* NodeTypes.JS_SEQUENCE_EXPRESSION */:\n      break;\n    case 26 /* NodeTypes.JS_RETURN_STATEMENT */:\n      break;\n    /* istanbul ignore next */\n    case 10 /* NodeTypes.IF_BRANCH */:\n      // noop\n      break;\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, `unhandled codegen node type: ${node.type}`);\n        // make sure we exhaust all possible types\n        const exhaustiveCheck = node;\n        return exhaustiveCheck;\n      }\n  }\n}\nfunction genText(node, context) {\n  context.push(JSON.stringify(node.content), node);\n}\nfunction genExpression(node, context) {\n  const {\n    content,\n    isStatic\n  } = node;\n  context.push(isStatic ? JSON.stringify(content) : content, node);\n}\nfunction genInterpolation(node, context) {\n  const {\n    push,\n    helper,\n    pure\n  } = context;\n  if (pure) push(PURE_ANNOTATION);\n  push(`${helper(TO_DISPLAY_STRING)}(`);\n  genNode(node.content, context);\n  push(`)`);\n}\nfunction genCompoundExpression(node, context) {\n  for (let i = 0; i < node.children.length; i++) {\n    const child = node.children[i];\n    if (isString(child)) {\n      context.push(child);\n    } else {\n      genNode(child, context);\n    }\n  }\n}\nfunction genExpressionAsPropertyKey(node, context) {\n  const {\n    push\n  } = context;\n  if (node.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) {\n    push(`[`);\n    genCompoundExpression(node, context);\n    push(`]`);\n  } else if (node.isStatic) {\n    // only quote keys if necessary\n    const text = isSimpleIdentifier(node.content) ? node.content : JSON.stringify(node.content);\n    push(text, node);\n  } else {\n    push(`[${node.content}]`, node);\n  }\n}\nfunction genComment(node, context) {\n  const {\n    push,\n    helper,\n    pure\n  } = context;\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\n}\nfunction genVNodeCall(node, context) {\n  const {\n    push,\n    helper,\n    pure\n  } = context;\n  const {\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent\n  } = node;\n  if (directives) {\n    push(helper(WITH_DIRECTIVES) + `(`);\n  }\n  if (isBlock) {\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\n  }\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  const callHelper = isBlock ? getVNodeBlockHelper(context.inSSR, isComponent) : getVNodeHelper(context.inSSR, isComponent);\n  push(helper(callHelper) + `(`, node);\n  genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\n  push(`)`);\n  if (isBlock) {\n    push(`)`);\n  }\n  if (directives) {\n    push(`, `);\n    genNode(directives, context);\n    push(`)`);\n  }\n}\nfunction genNullableArgs(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i] != null) break;\n  }\n  return args.slice(0, i + 1).map(arg => arg || `null`);\n}\n// JavaScript\nfunction genCallExpression(node, context) {\n  const {\n    push,\n    helper,\n    pure\n  } = context;\n  const callee = isString(node.callee) ? node.callee : helper(node.callee);\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(callee + `(`, node);\n  genNodeList(node.arguments, context);\n  push(`)`);\n}\nfunction genObjectExpression(node, context) {\n  const {\n    push,\n    indent,\n    deindent,\n    newline\n  } = context;\n  const {\n    properties\n  } = node;\n  if (!properties.length) {\n    push(`{}`, node);\n    return;\n  }\n  const multilines = properties.length > 1 || process.env.NODE_ENV !== 'production' && properties.some(p => p.value.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */);\n  push(multilines ? `{` : `{ `);\n  multilines && indent();\n  for (let i = 0; i < properties.length; i++) {\n    const {\n      key,\n      value\n    } = properties[i];\n    // key\n    genExpressionAsPropertyKey(key, context);\n    push(`: `);\n    // value\n    genNode(value, context);\n    if (i < properties.length - 1) {\n      // will only reach this if it's multilines\n      push(`,`);\n      newline();\n    }\n  }\n  multilines && deindent();\n  push(multilines ? `}` : ` }`);\n}\nfunction genArrayExpression(node, context) {\n  genNodeListAsArray(node.elements, context);\n}\nfunction genFunctionExpression(node, context) {\n  const {\n    push,\n    indent,\n    deindent\n  } = context;\n  const {\n    params,\n    returns,\n    body,\n    newline,\n    isSlot\n  } = node;\n  if (isSlot) {\n    // wrap slot functions with owner context\n    push(`_${helperNameMap[WITH_CTX]}(`);\n  }\n  push(`(`, node);\n  if (isArray(params)) {\n    genNodeList(params, context);\n  } else if (params) {\n    genNode(params, context);\n  }\n  push(`) => `);\n  if (newline || body) {\n    push(`{`);\n    indent();\n  }\n  if (returns) {\n    if (newline) {\n      push(`return `);\n    }\n    if (isArray(returns)) {\n      genNodeListAsArray(returns, context);\n    } else {\n      genNode(returns, context);\n    }\n  } else if (body) {\n    genNode(body, context);\n  }\n  if (newline || body) {\n    deindent();\n    push(`}`);\n  }\n  if (isSlot) {\n    if (node.isNonScopedSlot) {\n      push(`, undefined, true`);\n    }\n    push(`)`);\n  }\n}\nfunction genConditionalExpression(node, context) {\n  const {\n    test,\n    consequent,\n    alternate,\n    newline: needNewline\n  } = node;\n  const {\n    push,\n    indent,\n    deindent,\n    newline\n  } = context;\n  if (test.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n    const needsParens = !isSimpleIdentifier(test.content);\n    needsParens && push(`(`);\n    genExpression(test, context);\n    needsParens && push(`)`);\n  } else {\n    push(`(`);\n    genNode(test, context);\n    push(`)`);\n  }\n  needNewline && indent();\n  context.indentLevel++;\n  needNewline || push(` `);\n  push(`? `);\n  genNode(consequent, context);\n  context.indentLevel--;\n  needNewline && newline();\n  needNewline || push(` `);\n  push(`: `);\n  const isNested = alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */;\n  if (!isNested) {\n    context.indentLevel++;\n  }\n  genNode(alternate, context);\n  if (!isNested) {\n    context.indentLevel--;\n  }\n  needNewline && deindent(true /* without newline */);\n}\n\nfunction genCacheExpression(node, context) {\n  const {\n    push,\n    helper,\n    indent,\n    deindent,\n    newline\n  } = context;\n  push(`_cache[${node.index}] || (`);\n  if (node.isVNode) {\n    indent();\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\n    newline();\n  }\n  push(`_cache[${node.index}] = `);\n  genNode(node.value, context);\n  if (node.isVNode) {\n    push(`,`);\n    newline();\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`);\n    newline();\n    push(`_cache[${node.index}]`);\n    deindent();\n  }\n  push(`)`);\n}\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = Object.create(null)) {\n  {\n    return;\n  }\n}\nfunction isReferencedIdentifier(id, parent, parentStack) {\n  {\n    return false;\n  }\n}\nfunction isInDestructureAssignment(parent, parentStack) {\n  if (parent && (parent.type === 'ObjectProperty' || parent.type === 'ArrayPattern')) {\n    let i = parentStack.length;\n    while (i--) {\n      const p = parentStack[i];\n      if (p.type === 'AssignmentExpression') {\n        return true;\n      } else if (p.type !== 'ObjectProperty' && !p.type.endsWith('Pattern')) {\n        break;\n      }\n    }\n  }\n  return false;\n}\nfunction walkFunctionParams(node, onIdent) {\n  for (const p of node.params) {\n    for (const id of extractIdentifiers(p)) {\n      onIdent(id);\n    }\n  }\n}\nfunction walkBlockDeclarations(block, onIdent) {\n  for (const stmt of block.body) {\n    if (stmt.type === 'VariableDeclaration') {\n      if (stmt.declare) continue;\n      for (const decl of stmt.declarations) {\n        for (const id of extractIdentifiers(decl.id)) {\n          onIdent(id);\n        }\n      }\n    } else if (stmt.type === 'FunctionDeclaration' || stmt.type === 'ClassDeclaration') {\n      if (stmt.declare || !stmt.id) continue;\n      onIdent(stmt.id);\n    }\n  }\n}\nfunction extractIdentifiers(param, nodes = []) {\n  switch (param.type) {\n    case 'Identifier':\n      nodes.push(param);\n      break;\n    case 'MemberExpression':\n      let object = param;\n      while (object.type === 'MemberExpression') {\n        object = object.object;\n      }\n      nodes.push(object);\n      break;\n    case 'ObjectPattern':\n      for (const prop of param.properties) {\n        if (prop.type === 'RestElement') {\n          extractIdentifiers(prop.argument, nodes);\n        } else {\n          extractIdentifiers(prop.value, nodes);\n        }\n      }\n      break;\n    case 'ArrayPattern':\n      param.elements.forEach(element => {\n        if (element) extractIdentifiers(element, nodes);\n      });\n      break;\n    case 'RestElement':\n      extractIdentifiers(param.argument, nodes);\n      break;\n    case 'AssignmentPattern':\n      extractIdentifiers(param.left, nodes);\n      break;\n  }\n  return nodes;\n}\nconst isFunctionType = node => {\n  return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\n};\nconst isStaticProperty = node => node && (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') && !node.computed;\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\n\n// these keywords should not appear inside expressions, but operators like\n// 'typeof', 'instanceof', and 'in' are allowed\nconst prohibitedKeywordRE = new RegExp('\\\\b' + ('arguments,await,break,case,catch,class,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,import,let,new,' + 'return,super,switch,throw,try,var,void,while,with,yield').split(',').join('\\\\b|\\\\b') + '\\\\b');\n// strip strings in expressions\nconst stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n/**\n * Validate a non-prefixed expression.\n * This is only called when using the in-browser runtime compiler since it\n * doesn't prefix expressions.\n */\nfunction validateBrowserExpression(node, context, asParams = false, asRawStatements = false) {\n  const exp = node.content;\n  // empty expressions are validated per-directive since some directives\n  // do allow empty expressions.\n  if (!exp.trim()) {\n    return;\n  }\n  try {\n    new Function(asRawStatements ? ` ${exp} ` : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`);\n  } catch (e) {\n    let message = e.message;\n    const keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      message = `avoid using JavaScript keyword as property name: \"${keywordMatch[0]}\"`;\n    }\n    context.onError(createCompilerError(45 /* ErrorCodes.X_INVALID_EXPRESSION */, node.loc, undefined, message));\n  }\n}\nconst transformExpression = (node, context) => {\n  if (node.type === 5 /* NodeTypes.INTERPOLATION */) {\n    node.content = processExpression(node.content, context);\n  } else if (node.type === 1 /* NodeTypes.ELEMENT */) {\n    // handle directives on element\n    for (let i = 0; i < node.props.length; i++) {\n      const dir = node.props[i];\n      // do not process for v-on & v-for since they are special handled\n      if (dir.type === 7 /* NodeTypes.DIRECTIVE */ && dir.name !== 'for') {\n        const exp = dir.exp;\n        const arg = dir.arg;\n        // do not process exp if this is v-on:arg - we need special handling\n        // for wrapping inline statements.\n        if (exp && exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && !(dir.name === 'on' && arg)) {\n          dir.exp = processExpression(exp, context,\n          // slot args must be processed as function params\n          dir.name === 'slot');\n        }\n        if (arg && arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && !arg.isStatic) {\n          dir.arg = processExpression(arg, context);\n        }\n      }\n    }\n  }\n};\n// Important: since this function uses Node.js only dependencies, it should\n// always be used with a leading !true check so that it can be\n// tree-shaken from the browser build.\nfunction processExpression(node, context,\n// some expressions like v-slot props & v-for aliases should be parsed as\n// function params\nasParams = false,\n// v-on handler values may contain multiple statements\nasRawStatements = false, localVars = Object.create(context.identifiers)) {\n  {\n    if (process.env.NODE_ENV !== 'production') {\n      // simple in-browser validation (same logic in 2.x)\n      validateBrowserExpression(node, context, asParams, asRawStatements);\n    }\n    return node;\n  }\n}\nfunction stringifyExpression(exp) {\n  if (isString(exp)) {\n    return exp;\n  } else if (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n    return exp.content;\n  } else {\n    return exp.children.map(stringifyExpression).join('');\n  }\n}\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\n  return processIf(node, dir, context, (ifNode, branch, isRoot) => {\n    // #1587: We need to dynamically increment the key based on the current\n    // node's sibling nodes, since chained v-if/else branches are\n    // rendered at the same depth\n    const siblings = context.parent.children;\n    let i = siblings.indexOf(ifNode);\n    let key = 0;\n    while (i-- >= 0) {\n      const sibling = siblings[i];\n      if (sibling && sibling.type === 9 /* NodeTypes.IF */) {\n        key += sibling.branches.length;\n      }\n    }\n    // Exit callback. Complete the codegenNode when all children have been\n    // transformed.\n    return () => {\n      if (isRoot) {\n        ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\n      } else {\n        // attach this branch's codegen node to the v-if root.\n        const parentCondition = getParentCondition(ifNode.codegenNode);\n        parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\n      }\n    };\n  });\n});\n// target-agnostic transform used for both Client and SSR\nfunction processIf(node, dir, context, processCodegen) {\n  if (dir.name !== 'else' && (!dir.exp || !dir.exp.content.trim())) {\n    const loc = dir.exp ? dir.exp.loc : node.loc;\n    context.onError(createCompilerError(28 /* ErrorCodes.X_V_IF_NO_EXPRESSION */, dir.loc));\n    dir.exp = createSimpleExpression(`true`, false, loc);\n  }\n  if (process.env.NODE_ENV !== 'production' && true && dir.exp) {\n    validateBrowserExpression(dir.exp, context);\n  }\n  if (dir.name === 'if') {\n    const branch = createIfBranch(node, dir);\n    const ifNode = {\n      type: 9 /* NodeTypes.IF */,\n      loc: node.loc,\n      branches: [branch]\n    };\n    context.replaceNode(ifNode);\n    if (processCodegen) {\n      return processCodegen(ifNode, branch, true);\n    }\n  } else {\n    // locate the adjacent v-if\n    const siblings = context.parent.children;\n    const comments = [];\n    let i = siblings.indexOf(node);\n    while (i-- >= -1) {\n      const sibling = siblings[i];\n      if (sibling && sibling.type === 3 /* NodeTypes.COMMENT */) {\n        context.removeNode(sibling);\n        process.env.NODE_ENV !== 'production' && comments.unshift(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 2 /* NodeTypes.TEXT */ && !sibling.content.trim().length) {\n        context.removeNode(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 9 /* NodeTypes.IF */) {\n        // Check if v-else was followed by v-else-if\n        if (dir.name === 'else-if' && sibling.branches[sibling.branches.length - 1].condition === undefined) {\n          context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, node.loc));\n        }\n        // move the node to the if node's branches\n        context.removeNode();\n        const branch = createIfBranch(node, dir);\n        if (process.env.NODE_ENV !== 'production' && comments.length &&\n        // #3619 ignore comments if the v-if is direct child of <transition>\n        !(context.parent && context.parent.type === 1 /* NodeTypes.ELEMENT */ && isBuiltInType(context.parent.tag, 'transition'))) {\n          branch.children = [...comments, ...branch.children];\n        }\n        // check if user is forcing same key on different branches\n        if (process.env.NODE_ENV !== 'production' || !true) {\n          const key = branch.userKey;\n          if (key) {\n            sibling.branches.forEach(({\n              userKey\n            }) => {\n              if (isSameKey(userKey, key)) {\n                context.onError(createCompilerError(29 /* ErrorCodes.X_V_IF_SAME_KEY */, branch.userKey.loc));\n              }\n            });\n          }\n        }\n        sibling.branches.push(branch);\n        const onExit = processCodegen && processCodegen(sibling, branch, false);\n        // since the branch was removed, it will not be traversed.\n        // make sure to traverse here.\n        traverseNode(branch, context);\n        // call on exit\n        if (onExit) onExit();\n        // make sure to reset currentNode after traversal to indicate this\n        // node has been removed.\n        context.currentNode = null;\n      } else {\n        context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, node.loc));\n      }\n      break;\n    }\n  }\n}\nfunction createIfBranch(node, dir) {\n  const isTemplateIf = node.tagType === 3 /* ElementTypes.TEMPLATE */;\n  return {\n    type: 10 /* NodeTypes.IF_BRANCH */,\n    loc: node.loc,\n    condition: dir.name === 'else' ? undefined : dir.exp,\n    children: isTemplateIf && !findDir(node, 'for') ? node.children : [node],\n    userKey: findProp(node, `key`),\n    isTemplateIf\n  };\n}\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\n  if (branch.condition) {\n    return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context),\n    // make sure to pass in asBlock: true so that the comment node call\n    // closes the current block.\n    createCallExpression(context.helper(CREATE_COMMENT), [process.env.NODE_ENV !== 'production' ? '\"v-if\"' : '\"\"', 'true']));\n  } else {\n    return createChildrenCodegenNode(branch, keyIndex, context);\n  }\n}\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\n  const {\n    helper\n  } = context;\n  const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2 /* ConstantTypes.CAN_HOIST */));\n  const {\n    children\n  } = branch;\n  const firstChild = children[0];\n  const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1 /* NodeTypes.ELEMENT */;\n  if (needFragmentWrapper) {\n    if (children.length === 1 && firstChild.type === 11 /* NodeTypes.FOR */) {\n      // optimize away nested fragments when child is a ForNode\n      const vnodeCall = firstChild.codegenNode;\n      injectProp(vnodeCall, keyProperty, context);\n      return vnodeCall;\n    } else {\n      let patchFlag = 64 /* PatchFlags.STABLE_FRAGMENT */;\n      let patchFlagText = PatchFlagNames[64 /* PatchFlags.STABLE_FRAGMENT */];\n      // check if the fragment actually contains a single valid child with\n      // the rest being comments\n      if (process.env.NODE_ENV !== 'production' && !branch.isTemplateIf && children.filter(c => c.type !== 3 /* NodeTypes.COMMENT */).length === 1) {\n        patchFlag |= 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */;\n        patchFlagText += `, ${PatchFlagNames[2048 /* PatchFlags.DEV_ROOT_FRAGMENT */]}`;\n      }\n      return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + (process.env.NODE_ENV !== 'production' ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, false, false /* isComponent */, branch.loc);\n    }\n  } else {\n    const ret = firstChild.codegenNode;\n    const vnodeCall = getMemoedVNodeCall(ret);\n    // Change createVNode to createBlock.\n    if (vnodeCall.type === 13 /* NodeTypes.VNODE_CALL */) {\n      makeBlock(vnodeCall, context);\n    }\n    // inject branch key\n    injectProp(vnodeCall, keyProperty, context);\n    return ret;\n  }\n}\nfunction isSameKey(a, b) {\n  if (!a || a.type !== b.type) {\n    return false;\n  }\n  if (a.type === 6 /* NodeTypes.ATTRIBUTE */) {\n    if (a.value.content !== b.value.content) {\n      return false;\n    }\n  } else {\n    // directive\n    const exp = a.exp;\n    const branchExp = b.exp;\n    if (exp.type !== branchExp.type) {\n      return false;\n    }\n    if (exp.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */ || exp.isStatic !== branchExp.isStatic || exp.content !== branchExp.content) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getParentCondition(node) {\n  while (true) {\n    if (node.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\n      if (node.alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\n        node = node.alternate;\n      } else {\n        return node;\n      }\n    } else if (node.type === 20 /* NodeTypes.JS_CACHE_EXPRESSION */) {\n      node = node.value;\n    }\n  }\n}\nconst transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\n  const {\n    helper,\n    removeHelper\n  } = context;\n  return processFor(node, dir, context, forNode => {\n    // create the loop render function expression now, and add the\n    // iterator on exit after all children have been traversed\n    const renderExp = createCallExpression(helper(RENDER_LIST), [forNode.source]);\n    const isTemplate = isTemplateNode(node);\n    const memo = findDir(node, 'memo');\n    const keyProp = findProp(node, `key`);\n    const keyExp = keyProp && (keyProp.type === 6 /* NodeTypes.ATTRIBUTE */ ? createSimpleExpression(keyProp.value.content, true) : keyProp.exp);\n    const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\n    const isStableFragment = forNode.source.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && forNode.source.constType > 0 /* ConstantTypes.NOT_CONSTANT */;\n    const fragmentFlag = isStableFragment ? 64 /* PatchFlags.STABLE_FRAGMENT */ : keyProp ? 128 /* PatchFlags.KEYED_FRAGMENT */ : 256 /* PatchFlags.UNKEYED_FRAGMENT */;\n    forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, fragmentFlag + (process.env.NODE_ENV !== 'production' ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``), undefined, undefined, true /* isBlock */, !isStableFragment /* disableTracking */, false /* isComponent */, node.loc);\n    return () => {\n      // finish the codegen now that all children have been traversed\n      let childBlock;\n      const {\n        children\n      } = forNode;\n      // check <template v-for> key placement\n      if ((process.env.NODE_ENV !== 'production' || !true) && isTemplate) {\n        node.children.some(c => {\n          if (c.type === 1 /* NodeTypes.ELEMENT */) {\n            const key = findProp(c, 'key');\n            if (key) {\n              context.onError(createCompilerError(33 /* ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT */, key.loc));\n              return true;\n            }\n          }\n        });\n      }\n      const needFragmentWrapper = children.length !== 1 || children[0].type !== 1 /* NodeTypes.ELEMENT */;\n      const slotOutlet = isSlotOutlet(node) ? node : isTemplate && node.children.length === 1 && isSlotOutlet(node.children[0]) ? node.children[0] // api-extractor somehow fails to infer this\n      : null;\n      if (slotOutlet) {\n        // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\n        childBlock = slotOutlet.codegenNode;\n        if (isTemplate && keyProperty) {\n          // <template v-for=\"...\" :key=\"...\"><slot/></template>\n          // we need to inject the key to the renderSlot() call.\n          // the props for renderSlot is passed as the 3rd argument.\n          injectProp(childBlock, keyProperty, context);\n        }\n      } else if (needFragmentWrapper) {\n        // <template v-for=\"...\"> with text or multi-elements\n        // should generate a fragment block for each loop\n        childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, 64 /* PatchFlags.STABLE_FRAGMENT */ + (process.env.NODE_ENV !== 'production' ? ` /* ${PatchFlagNames[64 /* PatchFlags.STABLE_FRAGMENT */]} */` : ``), undefined, undefined, true, undefined, false /* isComponent */);\n      } else {\n        // Normal element v-for. Directly use the child's codegenNode\n        // but mark it as a block.\n        childBlock = children[0].codegenNode;\n        if (isTemplate && keyProperty) {\n          injectProp(childBlock, keyProperty, context);\n        }\n        if (childBlock.isBlock !== !isStableFragment) {\n          if (childBlock.isBlock) {\n            // switch from block to vnode\n            removeHelper(OPEN_BLOCK);\n            removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n          } else {\n            // switch from vnode to block\n            removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n          }\n        }\n        childBlock.isBlock = !isStableFragment;\n        if (childBlock.isBlock) {\n          helper(OPEN_BLOCK);\n          helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n        } else {\n          helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n        }\n      }\n      if (memo) {\n        const loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [createSimpleExpression(`_cached`)]));\n        loop.body = createBlockStatement([createCompoundExpression([`const _memo = (`, memo.exp, `)`]), createCompoundExpression([`if (_cached`, ...(keyExp ? [` && _cached.key === `, keyExp] : []), ` && ${context.helperString(IS_MEMO_SAME)}(_cached, _memo)) return _cached`]), createCompoundExpression([`const _item = `, childBlock]), createSimpleExpression(`_item.memo = _memo`), createSimpleExpression(`return _item`)]);\n        renderExp.arguments.push(loop, createSimpleExpression(`_cache`), createSimpleExpression(String(context.cached++)));\n      } else {\n        renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true /* force newline */));\n      }\n    };\n  });\n});\n// target-agnostic transform used for both Client and SSR\nfunction processFor(node, dir, context, processCodegen) {\n  if (!dir.exp) {\n    context.onError(createCompilerError(31 /* ErrorCodes.X_V_FOR_NO_EXPRESSION */, dir.loc));\n    return;\n  }\n  const parseResult = parseForExpression(\n  // can only be simple expression because vFor transform is applied\n  // before expression transform.\n  dir.exp, context);\n  if (!parseResult) {\n    context.onError(createCompilerError(32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */, dir.loc));\n    return;\n  }\n  const {\n    addIdentifiers,\n    removeIdentifiers,\n    scopes\n  } = context;\n  const {\n    source,\n    value,\n    key,\n    index\n  } = parseResult;\n  const forNode = {\n    type: 11 /* NodeTypes.FOR */,\n    loc: dir.loc,\n    source,\n    valueAlias: value,\n    keyAlias: key,\n    objectIndexAlias: index,\n    parseResult,\n    children: isTemplateNode(node) ? node.children : [node]\n  };\n  context.replaceNode(forNode);\n  // bookkeeping\n  scopes.vFor++;\n  const onExit = processCodegen && processCodegen(forNode);\n  return () => {\n    scopes.vFor--;\n    if (onExit) onExit();\n  };\n}\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n// This regex doesn't cover the case if key or index aliases have destructuring,\n// but those do not make sense in the first place, so this works in practice.\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nconst stripParensRE = /^\\(|\\)$/g;\nfunction parseForExpression(input, context) {\n  const loc = input.loc;\n  const exp = input.content;\n  const inMatch = exp.match(forAliasRE);\n  if (!inMatch) return;\n  const [, LHS, RHS] = inMatch;\n  const result = {\n    source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\n    value: undefined,\n    key: undefined,\n    index: undefined\n  };\n  if (process.env.NODE_ENV !== 'production' && true) {\n    validateBrowserExpression(result.source, context);\n  }\n  let valueContent = LHS.trim().replace(stripParensRE, '').trim();\n  const trimmedOffset = LHS.indexOf(valueContent);\n  const iteratorMatch = valueContent.match(forIteratorRE);\n  if (iteratorMatch) {\n    valueContent = valueContent.replace(forIteratorRE, '').trim();\n    const keyContent = iteratorMatch[1].trim();\n    let keyOffset;\n    if (keyContent) {\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\n      result.key = createAliasExpression(loc, keyContent, keyOffset);\n      if (process.env.NODE_ENV !== 'production' && true) {\n        validateBrowserExpression(result.key, context, true);\n      }\n    }\n    if (iteratorMatch[2]) {\n      const indexContent = iteratorMatch[2].trim();\n      if (indexContent) {\n        result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key ? keyOffset + keyContent.length : trimmedOffset + valueContent.length));\n        if (process.env.NODE_ENV !== 'production' && true) {\n          validateBrowserExpression(result.index, context, true);\n        }\n      }\n    }\n  }\n  if (valueContent) {\n    result.value = createAliasExpression(loc, valueContent, trimmedOffset);\n    if (process.env.NODE_ENV !== 'production' && true) {\n      validateBrowserExpression(result.value, context, true);\n    }\n  }\n  return result;\n}\nfunction createAliasExpression(range, content, offset) {\n  return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\n}\nfunction createForLoopParams({\n  value,\n  key,\n  index\n}, memoArgs = []) {\n  return createParamsList([value, key, index, ...memoArgs]);\n}\nfunction createParamsList(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i]) break;\n  }\n  return args.slice(0, i + 1).map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false));\n}\nconst defaultFallback = createSimpleExpression(`undefined`, false);\n// A NodeTransform that:\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\n//    by transformExpression. This is only applied in non-browser builds with\n//    { prefixIdentifiers: true }.\n// 2. Track v-slot depths so that we know a slot is inside another slot.\n//    Note the exit callback is executed before buildSlots() on the same node,\n//    so only nested slots see positive numbers.\nconst trackSlotScopes = (node, context) => {\n  if (node.type === 1 /* NodeTypes.ELEMENT */ && (node.tagType === 1 /* ElementTypes.COMPONENT */ || node.tagType === 3 /* ElementTypes.TEMPLATE */)) {\n    // We are only checking non-empty v-slot here\n    // since we only care about slots that introduce scope variables.\n    const vSlot = findDir(node, 'slot');\n    if (vSlot) {\n      vSlot.exp;\n      context.scopes.vSlot++;\n      return () => {\n        context.scopes.vSlot--;\n      };\n    }\n  }\n};\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\nconst trackVForSlotScopes = (node, context) => {\n  let vFor;\n  if (isTemplateNode(node) && node.props.some(isVSlot) && (vFor = findDir(node, 'for'))) {\n    const result = vFor.parseResult = parseForExpression(vFor.exp, context);\n    if (result) {\n      const {\n        value,\n        key,\n        index\n      } = result;\n      const {\n        addIdentifiers,\n        removeIdentifiers\n      } = context;\n      value && addIdentifiers(value);\n      key && addIdentifiers(key);\n      index && addIdentifiers(index);\n      return () => {\n        value && removeIdentifiers(value);\n        key && removeIdentifiers(key);\n        index && removeIdentifiers(index);\n      };\n    }\n  }\n};\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false /* newline */, true /* isSlot */, children.length ? children[0].loc : loc);\n// Instead of being a DirectiveTransform, v-slot processing is called during\n// transformElement to build the slots object for a component.\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\n  context.helper(WITH_CTX);\n  const {\n    children,\n    loc\n  } = node;\n  const slotsProperties = [];\n  const dynamicSlots = [];\n  // If the slot is inside a v-for or another v-slot, force it to be dynamic\n  // since it likely uses a scope variable.\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\n  // 1. Check for slot with slotProps on component itself.\n  //    <Comp v-slot=\"{ prop }\"/>\n  const onComponentSlot = findDir(node, 'slot', true);\n  if (onComponentSlot) {\n    const {\n      arg,\n      exp\n    } = onComponentSlot;\n    if (arg && !isStaticExp(arg)) {\n      hasDynamicSlots = true;\n    }\n    slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\n  }\n  // 2. Iterate through children and check for template slots\n  //    <template v-slot:foo=\"{ prop }\">\n  let hasTemplateSlots = false;\n  let hasNamedDefaultSlot = false;\n  const implicitDefaultChildren = [];\n  const seenSlotNames = new Set();\n  let conditionalBranchIndex = 0;\n  for (let i = 0; i < children.length; i++) {\n    const slotElement = children[i];\n    let slotDir;\n    if (!isTemplateNode(slotElement) || !(slotDir = findDir(slotElement, 'slot', true))) {\n      // not a <template v-slot>, skip.\n      if (slotElement.type !== 3 /* NodeTypes.COMMENT */) {\n        implicitDefaultChildren.push(slotElement);\n      }\n      continue;\n    }\n    if (onComponentSlot) {\n      // already has on-component slot - this is incorrect usage.\n      context.onError(createCompilerError(37 /* ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE */, slotDir.loc));\n      break;\n    }\n    hasTemplateSlots = true;\n    const {\n      children: slotChildren,\n      loc: slotLoc\n    } = slotElement;\n    const {\n      arg: slotName = createSimpleExpression(`default`, true),\n      exp: slotProps,\n      loc: dirLoc\n    } = slotDir;\n    // check if name is dynamic.\n    let staticSlotName;\n    if (isStaticExp(slotName)) {\n      staticSlotName = slotName ? slotName.content : `default`;\n    } else {\n      hasDynamicSlots = true;\n    }\n    const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\n    // check if this slot is conditional (v-if/v-for)\n    let vIf;\n    let vElse;\n    let vFor;\n    if (vIf = findDir(slotElement, 'if')) {\n      hasDynamicSlots = true;\n      dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback));\n    } else if (vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */)) {\n      // find adjacent v-if\n      let j = i;\n      let prev;\n      while (j--) {\n        prev = children[j];\n        if (prev.type !== 3 /* NodeTypes.COMMENT */) {\n          break;\n        }\n      }\n      if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\n        // remove node\n        children.splice(i, 1);\n        i--;\n        // attach this slot to previous conditional\n        let conditional = dynamicSlots[dynamicSlots.length - 1];\n        while (conditional.alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\n          conditional = conditional.alternate;\n        }\n        conditional.alternate = vElse.exp ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback) : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);\n      } else {\n        context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, vElse.loc));\n      }\n    } else if (vFor = findDir(slotElement, 'for')) {\n      hasDynamicSlots = true;\n      const parseResult = vFor.parseResult || parseForExpression(vFor.exp, context);\n      if (parseResult) {\n        // Render the dynamic slots as an array and add it to the createSlot()\n        // args. The runtime knows how to handle it appropriately.\n        dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [parseResult.source, createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true /* force newline */)]));\n      } else {\n        context.onError(createCompilerError(32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */, vFor.loc));\n      }\n    } else {\n      // check duplicate static names\n      if (staticSlotName) {\n        if (seenSlotNames.has(staticSlotName)) {\n          context.onError(createCompilerError(38 /* ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES */, dirLoc));\n          continue;\n        }\n        seenSlotNames.add(staticSlotName);\n        if (staticSlotName === 'default') {\n          hasNamedDefaultSlot = true;\n        }\n      }\n      slotsProperties.push(createObjectProperty(slotName, slotFunction));\n    }\n  }\n  if (!onComponentSlot) {\n    const buildDefaultSlotProperty = (props, children) => {\n      const fn = buildSlotFn(props, children, loc);\n      if (context.compatConfig) {\n        fn.isNonScopedSlot = true;\n      }\n      return createObjectProperty(`default`, fn);\n    };\n    if (!hasTemplateSlots) {\n      // implicit default slot (on component)\n      slotsProperties.push(buildDefaultSlotProperty(undefined, children));\n    } else if (implicitDefaultChildren.length &&\n    // #3766\n    // with whitespace: 'preserve', whitespaces between slots will end up in\n    // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\n    implicitDefaultChildren.some(node => isNonWhitespaceContent(node))) {\n      // implicit default slot (mixed with named slots)\n      if (hasNamedDefaultSlot) {\n        context.onError(createCompilerError(39 /* ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, implicitDefaultChildren[0].loc));\n      } else {\n        slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\n      }\n    }\n  }\n  const slotFlag = hasDynamicSlots ? 2 /* SlotFlags.DYNAMIC */ : hasForwardedSlots(node.children) ? 3 /* SlotFlags.FORWARDED */ : 1 /* SlotFlags.STABLE */;\n  let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`,\n  // 2 = compiled but dynamic = can skip normalization, but must run diff\n  // 1 = compiled and static = can skip normalization AND diff as optimized\n  createSimpleExpression(slotFlag + (process.env.NODE_ENV !== 'production' ? ` /* ${slotFlagsText[slotFlag]} */` : ``), false))), loc);\n  if (dynamicSlots.length) {\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [slots, createArrayExpression(dynamicSlots)]);\n  }\n  return {\n    slots,\n    hasDynamicSlots\n  };\n}\nfunction buildDynamicSlot(name, fn, index) {\n  const props = [createObjectProperty(`name`, name), createObjectProperty(`fn`, fn)];\n  if (index != null) {\n    props.push(createObjectProperty(`key`, createSimpleExpression(String(index), true)));\n  }\n  return createObjectExpression(props);\n}\nfunction hasForwardedSlots(children) {\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    switch (child.type) {\n      case 1 /* NodeTypes.ELEMENT */:\n        if (child.tagType === 2 /* ElementTypes.SLOT */ || hasForwardedSlots(child.children)) {\n          return true;\n        }\n        break;\n      case 9 /* NodeTypes.IF */:\n        if (hasForwardedSlots(child.branches)) return true;\n        break;\n      case 10 /* NodeTypes.IF_BRANCH */:\n      case 11 /* NodeTypes.FOR */:\n        if (hasForwardedSlots(child.children)) return true;\n        break;\n    }\n  }\n  return false;\n}\nfunction isNonWhitespaceContent(node) {\n  if (node.type !== 2 /* NodeTypes.TEXT */ && node.type !== 12 /* NodeTypes.TEXT_CALL */) return true;\n  return node.type === 2 /* NodeTypes.TEXT */ ? !!node.content.trim() : isNonWhitespaceContent(node.content);\n}\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\n// import, which should be used instead of a resolveDirective call.\nconst directiveImportMap = new WeakMap();\n// generate a JavaScript AST for this element's codegen\nconst transformElement = (node, context) => {\n  // perform the work on exit, after all child expressions have been\n  // processed and merged.\n  return function postTransformElement() {\n    node = context.currentNode;\n    if (!(node.type === 1 /* NodeTypes.ELEMENT */ && (node.tagType === 0 /* ElementTypes.ELEMENT */ || node.tagType === 1 /* ElementTypes.COMPONENT */))) {\n      return;\n    }\n    const {\n      tag,\n      props\n    } = node;\n    const isComponent = node.tagType === 1 /* ElementTypes.COMPONENT */;\n    // The goal of the transform is to create a codegenNode implementing the\n    // VNodeCall interface.\n    let vnodeTag = isComponent ? resolveComponentType(node, context) : `\"${tag}\"`;\n    const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\n    let vnodeProps;\n    let vnodeChildren;\n    let vnodePatchFlag;\n    let patchFlag = 0;\n    let vnodeDynamicProps;\n    let dynamicPropNames;\n    let vnodeDirectives;\n    let shouldUseBlock =\n    // dynamic component may resolve to plain elements\n    isDynamicComponent || vnodeTag === TELEPORT || vnodeTag === SUSPENSE || !isComponent && (\n    // <svg> and <foreignObject> must be forced into blocks so that block\n    // updates inside get proper isSVG flag at runtime. (#639, #643)\n    // This is technically web-specific, but splitting the logic out of core\n    // leads to too much unnecessary complexity.\n    tag === 'svg' || tag === 'foreignObject');\n    // props\n    if (props.length > 0) {\n      const propsBuildResult = buildProps(node, context, undefined, isComponent, isDynamicComponent);\n      vnodeProps = propsBuildResult.props;\n      patchFlag = propsBuildResult.patchFlag;\n      dynamicPropNames = propsBuildResult.dynamicPropNames;\n      const directives = propsBuildResult.directives;\n      vnodeDirectives = directives && directives.length ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context))) : undefined;\n      if (propsBuildResult.shouldUseBlock) {\n        shouldUseBlock = true;\n      }\n    }\n    // children\n    if (node.children.length > 0) {\n      if (vnodeTag === KEEP_ALIVE) {\n        // Although a built-in component, we compile KeepAlive with raw children\n        // instead of slot functions so that it can be used inside Transition\n        // or other Transition-wrapping HOCs.\n        // To ensure correct updates with block optimizations, we need to:\n        // 1. Force keep-alive into a block. This avoids its children being\n        //    collected by a parent block.\n        shouldUseBlock = true;\n        // 2. Force keep-alive to always be updated, since it uses raw children.\n        patchFlag |= 1024 /* PatchFlags.DYNAMIC_SLOTS */;\n        if (process.env.NODE_ENV !== 'production' && node.children.length > 1) {\n          context.onError(createCompilerError(46 /* ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN */, {\n            start: node.children[0].loc.start,\n            end: node.children[node.children.length - 1].loc.end,\n            source: ''\n          }));\n        }\n      }\n      const shouldBuildAsSlots = isComponent &&\n      // Teleport is not a real component and has dedicated runtime handling\n      vnodeTag !== TELEPORT &&\n      // explained above.\n      vnodeTag !== KEEP_ALIVE;\n      if (shouldBuildAsSlots) {\n        const {\n          slots,\n          hasDynamicSlots\n        } = buildSlots(node, context);\n        vnodeChildren = slots;\n        if (hasDynamicSlots) {\n          patchFlag |= 1024 /* PatchFlags.DYNAMIC_SLOTS */;\n        }\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\n        const child = node.children[0];\n        const type = child.type;\n        // check for dynamic text children\n        const hasDynamicTextChild = type === 5 /* NodeTypes.INTERPOLATION */ || type === 8 /* NodeTypes.COMPOUND_EXPRESSION */;\n        if (hasDynamicTextChild && getConstantType(child, context) === 0 /* ConstantTypes.NOT_CONSTANT */) {\n          patchFlag |= 1 /* PatchFlags.TEXT */;\n        }\n        // pass directly if the only child is a text node\n        // (plain / interpolation / expression)\n        if (hasDynamicTextChild || type === 2 /* NodeTypes.TEXT */) {\n          vnodeChildren = child;\n        } else {\n          vnodeChildren = node.children;\n        }\n      } else {\n        vnodeChildren = node.children;\n      }\n    }\n    // patchFlag & dynamicPropNames\n    if (patchFlag !== 0) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (patchFlag < 0) {\n          // special flags (negative and mutually exclusive)\n          vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;\n        } else {\n          // bitwise flags\n          const flagNames = Object.keys(PatchFlagNames).map(Number).filter(n => n > 0 && patchFlag & n).map(n => PatchFlagNames[n]).join(`, `);\n          vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\n        }\n      } else {\n        vnodePatchFlag = String(patchFlag);\n      }\n      if (dynamicPropNames && dynamicPropNames.length) {\n        vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\n      }\n    }\n    node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false /* disableTracking */, isComponent, node.loc);\n  };\n};\nfunction resolveComponentType(node, context, ssr = false) {\n  let {\n    tag\n  } = node;\n  // 1. dynamic component\n  const isExplicitDynamic = isComponentTag(tag);\n  const isProp = findProp(node, 'is');\n  if (isProp) {\n    if (isExplicitDynamic || isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context)) {\n      const exp = isProp.type === 6 /* NodeTypes.ATTRIBUTE */ ? isProp.value && createSimpleExpression(isProp.value.content, true) : isProp.exp;\n      if (exp) {\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [exp]);\n      }\n    } else if (isProp.type === 6 /* NodeTypes.ATTRIBUTE */ && isProp.value.content.startsWith('vue:')) {\n      // <button is=\"vue:xxx\">\n      // if not <component>, only is value that starts with \"vue:\" will be\n      // treated as component by the parse phase and reach here, unless it's\n      // compat mode where all is values are considered components\n      tag = isProp.value.content.slice(4);\n    }\n  }\n  // 1.5 v-is (TODO: Deprecate)\n  const isDir = !isExplicitDynamic && findDir(node, 'is');\n  if (isDir && isDir.exp) {\n    return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [isDir.exp]);\n  }\n  // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\n  if (builtIn) {\n    // built-ins are simply fallthroughs / have special handling during ssr\n    // so we don't need to import their runtime equivalents\n    if (!ssr) context.helper(builtIn);\n    return builtIn;\n  }\n  // 5. user component (resolve)\n  context.helper(RESOLVE_COMPONENT);\n  context.components.add(tag);\n  return toValidAssetId(tag, `component`);\n}\nfunction buildProps(node, context, props = node.props, isComponent, isDynamicComponent, ssr = false) {\n  const {\n    tag,\n    loc: elementLoc,\n    children\n  } = node;\n  let properties = [];\n  const mergeArgs = [];\n  const runtimeDirectives = [];\n  const hasChildren = children.length > 0;\n  let shouldUseBlock = false;\n  // patchFlag analysis\n  let patchFlag = 0;\n  let hasRef = false;\n  let hasClassBinding = false;\n  let hasStyleBinding = false;\n  let hasHydrationEventBinding = false;\n  let hasDynamicKeys = false;\n  let hasVnodeHook = false;\n  const dynamicPropNames = [];\n  const pushMergeArg = arg => {\n    if (properties.length) {\n      mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\n      properties = [];\n    }\n    if (arg) mergeArgs.push(arg);\n  };\n  const analyzePatchFlag = ({\n    key,\n    value\n  }) => {\n    if (isStaticExp(key)) {\n      const name = key.content;\n      const isEventHandler = isOn(name);\n      if (isEventHandler && (!isComponent || isDynamicComponent) &&\n      // omit the flag for click handlers because hydration gives click\n      // dedicated fast path.\n      name.toLowerCase() !== 'onclick' &&\n      // omit v-model handlers\n      name !== 'onUpdate:modelValue' &&\n      // omit onVnodeXXX hooks\n      !isReservedProp(name)) {\n        hasHydrationEventBinding = true;\n      }\n      if (isEventHandler && isReservedProp(name)) {\n        hasVnodeHook = true;\n      }\n      if (value.type === 20 /* NodeTypes.JS_CACHE_EXPRESSION */ || (value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ || value.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) && getConstantType(value, context) > 0) {\n        // skip if the prop is a cached handler or has constant value\n        return;\n      }\n      if (name === 'ref') {\n        hasRef = true;\n      } else if (name === 'class') {\n        hasClassBinding = true;\n      } else if (name === 'style') {\n        hasStyleBinding = true;\n      } else if (name !== 'key' && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n      // treat the dynamic class and style binding of the component as dynamic props\n      if (isComponent && (name === 'class' || name === 'style') && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n    } else {\n      hasDynamicKeys = true;\n    }\n  };\n  for (let i = 0; i < props.length; i++) {\n    // static attribute\n    const prop = props[i];\n    if (prop.type === 6 /* NodeTypes.ATTRIBUTE */) {\n      const {\n        loc,\n        name,\n        value\n      } = prop;\n      let isStatic = true;\n      if (name === 'ref') {\n        hasRef = true;\n        if (context.scopes.vFor > 0) {\n          properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\n        }\n      }\n      // skip is on <component>, or is=\"vue:xxx\"\n      if (name === 'is' && (isComponentTag(tag) || value && value.content.startsWith('vue:') || isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context))) {\n        continue;\n      }\n      properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : '', isStatic, value ? value.loc : loc)));\n    } else {\n      // directives\n      const {\n        name,\n        arg,\n        exp,\n        loc\n      } = prop;\n      const isVBind = name === 'bind';\n      const isVOn = name === 'on';\n      // skip v-slot - it is handled by its dedicated transform.\n      if (name === 'slot') {\n        if (!isComponent) {\n          context.onError(createCompilerError(40 /* ErrorCodes.X_V_SLOT_MISPLACED */, loc));\n        }\n        continue;\n      }\n      // skip v-once/v-memo - they are handled by dedicated transforms.\n      if (name === 'once' || name === 'memo') {\n        continue;\n      }\n      // skip v-is and :is on <component>\n      if (name === 'is' || isVBind && isStaticArgOf(arg, 'is') && (isComponentTag(tag) || isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context))) {\n        continue;\n      }\n      // skip v-on in SSR compilation\n      if (isVOn && ssr) {\n        continue;\n      }\n      if (\n      // #938: elements with dynamic keys should be forced into blocks\n      isVBind && isStaticArgOf(arg, 'key') ||\n      // inline before-update hooks need to force block so that it is invoked\n      // before children\n      isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update')) {\n        shouldUseBlock = true;\n      }\n      if (isVBind && isStaticArgOf(arg, 'ref') && context.scopes.vFor > 0) {\n        properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\n      }\n      // special case for v-bind and v-on with no argument\n      if (!arg && (isVBind || isVOn)) {\n        hasDynamicKeys = true;\n        if (exp) {\n          if (isVBind) {\n            // have to merge early for compat build check\n            pushMergeArg();\n            {\n              // 2.x v-bind object order compat\n              if (process.env.NODE_ENV !== 'production') {\n                const hasOverridableKeys = mergeArgs.some(arg => {\n                  if (arg.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\n                    return arg.properties.some(({\n                      key\n                    }) => {\n                      if (key.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */ || !key.isStatic) {\n                        return true;\n                      }\n                      return key.content !== 'class' && key.content !== 'style' && !isOn(key.content);\n                    });\n                  } else {\n                    // dynamic expression\n                    return true;\n                  }\n                });\n                if (hasOverridableKeys) {\n                  checkCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER */, context, loc);\n                }\n              }\n              if (isCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER */, context)) {\n                mergeArgs.unshift(exp);\n                continue;\n              }\n            }\n            mergeArgs.push(exp);\n          } else {\n            // v-on=\"obj\" -> toHandlers(obj)\n            pushMergeArg({\n              type: 14 /* NodeTypes.JS_CALL_EXPRESSION */,\n              loc,\n              callee: context.helper(TO_HANDLERS),\n              arguments: isComponent ? [exp] : [exp, `true`]\n            });\n          }\n        } else {\n          context.onError(createCompilerError(isVBind ? 34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */ : 35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */, loc));\n        }\n        continue;\n      }\n      const directiveTransform = context.directiveTransforms[name];\n      if (directiveTransform) {\n        // has built-in directive transform.\n        const {\n          props,\n          needRuntime\n        } = directiveTransform(prop, node, context);\n        !ssr && props.forEach(analyzePatchFlag);\n        if (isVOn && arg && !isStaticExp(arg)) {\n          pushMergeArg(createObjectExpression(props, elementLoc));\n        } else {\n          properties.push(...props);\n        }\n        if (needRuntime) {\n          runtimeDirectives.push(prop);\n          if (isSymbol(needRuntime)) {\n            directiveImportMap.set(prop, needRuntime);\n          }\n        }\n      } else if (!isBuiltInDirective(name)) {\n        // no built-in transform, this is a user custom directive.\n        runtimeDirectives.push(prop);\n        // custom dirs may use beforeUpdate so they need to force blocks\n        // to ensure before-update gets called before children update\n        if (hasChildren) {\n          shouldUseBlock = true;\n        }\n      }\n    }\n  }\n  let propsExpression = undefined;\n  // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\n  if (mergeArgs.length) {\n    // close up any not-yet-merged props\n    pushMergeArg();\n    if (mergeArgs.length > 1) {\n      propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\n    } else {\n      // single v-bind with nothing else - no need for a mergeProps call\n      propsExpression = mergeArgs[0];\n    }\n  } else if (properties.length) {\n    propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\n  }\n  // patchFlag analysis\n  if (hasDynamicKeys) {\n    patchFlag |= 16 /* PatchFlags.FULL_PROPS */;\n  } else {\n    if (hasClassBinding && !isComponent) {\n      patchFlag |= 2 /* PatchFlags.CLASS */;\n    }\n\n    if (hasStyleBinding && !isComponent) {\n      patchFlag |= 4 /* PatchFlags.STYLE */;\n    }\n\n    if (dynamicPropNames.length) {\n      patchFlag |= 8 /* PatchFlags.PROPS */;\n    }\n\n    if (hasHydrationEventBinding) {\n      patchFlag |= 32 /* PatchFlags.HYDRATE_EVENTS */;\n    }\n  }\n\n  if (!shouldUseBlock && (patchFlag === 0 || patchFlag === 32 /* PatchFlags.HYDRATE_EVENTS */) && (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\n    patchFlag |= 512 /* PatchFlags.NEED_PATCH */;\n  }\n  // pre-normalize props, SSR is skipped for now\n  if (!context.inSSR && propsExpression) {\n    switch (propsExpression.type) {\n      case 15 /* NodeTypes.JS_OBJECT_EXPRESSION */:\n        // means that there is no v-bind,\n        // but still need to deal with dynamic key binding\n        let classKeyIndex = -1;\n        let styleKeyIndex = -1;\n        let hasDynamicKey = false;\n        for (let i = 0; i < propsExpression.properties.length; i++) {\n          const key = propsExpression.properties[i].key;\n          if (isStaticExp(key)) {\n            if (key.content === 'class') {\n              classKeyIndex = i;\n            } else if (key.content === 'style') {\n              styleKeyIndex = i;\n            }\n          } else if (!key.isHandlerKey) {\n            hasDynamicKey = true;\n          }\n        }\n        const classProp = propsExpression.properties[classKeyIndex];\n        const styleProp = propsExpression.properties[styleKeyIndex];\n        // no dynamic key\n        if (!hasDynamicKey) {\n          if (classProp && !isStaticExp(classProp.value)) {\n            classProp.value = createCallExpression(context.helper(NORMALIZE_CLASS), [classProp.value]);\n          }\n          if (styleProp && (\n          // the static style is compiled into an object,\n          // so use `hasStyleBinding` to ensure that it is a dynamic style binding\n          hasStyleBinding || styleProp.value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && styleProp.value.content.trim()[0] === `[` ||\n          // v-bind:style and style both exist,\n          // v-bind:style with static literal object\n          styleProp.value.type === 17 /* NodeTypes.JS_ARRAY_EXPRESSION */)) {\n            styleProp.value = createCallExpression(context.helper(NORMALIZE_STYLE), [styleProp.value]);\n          }\n        } else {\n          // dynamic key binding, wrap with `normalizeProps`\n          propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [propsExpression]);\n        }\n        break;\n      case 14 /* NodeTypes.JS_CALL_EXPRESSION */:\n        // mergeProps call, do nothing\n        break;\n      default:\n        // single v-bind\n        propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [propsExpression])]);\n        break;\n    }\n  }\n  return {\n    props: propsExpression,\n    directives: runtimeDirectives,\n    patchFlag,\n    dynamicPropNames,\n    shouldUseBlock\n  };\n}\n// Dedupe props in an object literal.\n// Literal duplicated attributes would have been warned during the parse phase,\n// however, it's possible to encounter duplicated `onXXX` handlers with different\n// modifiers. We also need to merge static and dynamic class / style attributes.\n// - onXXX handlers / style: merge into array\n// - class: merge into single expression with concatenation\nfunction dedupeProperties(properties) {\n  const knownProps = new Map();\n  const deduped = [];\n  for (let i = 0; i < properties.length; i++) {\n    const prop = properties[i];\n    // dynamic keys are always allowed\n    if (prop.key.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */ || !prop.key.isStatic) {\n      deduped.push(prop);\n      continue;\n    }\n    const name = prop.key.content;\n    const existing = knownProps.get(name);\n    if (existing) {\n      if (name === 'style' || name === 'class' || isOn(name)) {\n        mergeAsArray(existing, prop);\n      }\n      // unexpected duplicate, should have emitted error during parse\n    } else {\n      knownProps.set(name, prop);\n      deduped.push(prop);\n    }\n  }\n  return deduped;\n}\nfunction mergeAsArray(existing, incoming) {\n  if (existing.value.type === 17 /* NodeTypes.JS_ARRAY_EXPRESSION */) {\n    existing.value.elements.push(incoming.value);\n  } else {\n    existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\n  }\n}\nfunction buildDirectiveArgs(dir, context) {\n  const dirArgs = [];\n  const runtime = directiveImportMap.get(dir);\n  if (runtime) {\n    // built-in directive with runtime\n    dirArgs.push(context.helperString(runtime));\n  } else {\n    {\n      // inject statement for resolving directive\n      context.helper(RESOLVE_DIRECTIVE);\n      context.directives.add(dir.name);\n      dirArgs.push(toValidAssetId(dir.name, `directive`));\n    }\n  }\n  const {\n    loc\n  } = dir;\n  if (dir.exp) dirArgs.push(dir.exp);\n  if (dir.arg) {\n    if (!dir.exp) {\n      dirArgs.push(`void 0`);\n    }\n    dirArgs.push(dir.arg);\n  }\n  if (Object.keys(dir.modifiers).length) {\n    if (!dir.arg) {\n      if (!dir.exp) {\n        dirArgs.push(`void 0`);\n      }\n      dirArgs.push(`void 0`);\n    }\n    const trueExpression = createSimpleExpression(`true`, false, loc);\n    dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\n  }\n  return createArrayExpression(dirArgs, dir.loc);\n}\nfunction stringifyDynamicPropNames(props) {\n  let propsNamesString = `[`;\n  for (let i = 0, l = props.length; i < l; i++) {\n    propsNamesString += JSON.stringify(props[i]);\n    if (i < l - 1) propsNamesString += ', ';\n  }\n  return propsNamesString + `]`;\n}\nfunction isComponentTag(tag) {\n  return tag === 'component' || tag === 'Component';\n}\nprocess.env.NODE_ENV !== 'production' ? Object.freeze({}) : {};\nprocess.env.NODE_ENV !== 'production' ? Object.freeze([]) : [];\nconst cacheStringFunction = fn => {\n  const cache = Object.create(null);\n  return str => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n};\nconst camelizeRE = /-(\\w)/g;\n/**\n * @private\n */\nconst camelize = cacheStringFunction(str => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : '');\n});\nconst transformSlotOutlet = (node, context) => {\n  if (isSlotOutlet(node)) {\n    const {\n      children,\n      loc\n    } = node;\n    const {\n      slotName,\n      slotProps\n    } = processSlotOutlet(node, context);\n    const slotArgs = [context.prefixIdentifiers ? `_ctx.$slots` : `$slots`, slotName, '{}', 'undefined', 'true'];\n    let expectedLen = 2;\n    if (slotProps) {\n      slotArgs[2] = slotProps;\n      expectedLen = 3;\n    }\n    if (children.length) {\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc);\n      expectedLen = 4;\n    }\n    if (context.scopeId && !context.slotted) {\n      expectedLen = 5;\n    }\n    slotArgs.splice(expectedLen); // remove unused arguments\n    node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\n  }\n};\nfunction processSlotOutlet(node, context) {\n  let slotName = `\"default\"`;\n  let slotProps = undefined;\n  const nonNameProps = [];\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\n      if (p.value) {\n        if (p.name === 'name') {\n          slotName = JSON.stringify(p.value.content);\n        } else {\n          p.name = camelize(p.name);\n          nonNameProps.push(p);\n        }\n      }\n    } else {\n      if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\n        if (p.exp) slotName = p.exp;\n      } else {\n        if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\n          p.arg.content = camelize(p.arg.content);\n        }\n        nonNameProps.push(p);\n      }\n    }\n  }\n  if (nonNameProps.length > 0) {\n    const {\n      props,\n      directives\n    } = buildProps(node, context, nonNameProps, false, false);\n    slotProps = props;\n    if (directives.length) {\n      context.onError(createCompilerError(36 /* ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */, directives[0].loc));\n    }\n  }\n  return {\n    slotName,\n    slotProps\n  };\n}\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*(:[^=]+)?=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\nconst transformOn = (dir, node, context, augmentor) => {\n  const {\n    loc,\n    modifiers,\n    arg\n  } = dir;\n  if (!dir.exp && !modifiers.length) {\n    context.onError(createCompilerError(35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */, loc));\n  }\n  let eventName;\n  if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n    if (arg.isStatic) {\n      let rawName = arg.content;\n      // TODO deprecate @vnodeXXX usage\n      if (rawName.startsWith('vue:')) {\n        rawName = `vnode-${rawName.slice(4)}`;\n      }\n      const eventString = node.tagType !== 0 /* ElementTypes.ELEMENT */ || rawName.startsWith('vnode') || !/[A-Z]/.test(rawName) ?\n      // for non-element and vnode lifecycle event listeners, auto convert\n      // it to camelCase. See issue #2249\n      toHandlerKey(camelize$1(rawName)) :\n      // preserve case for plain element listeners that have uppercase\n      // letters, as these may be custom elements' custom events\n      `on:${rawName}`;\n      eventName = createSimpleExpression(eventString, true, arg.loc);\n    } else {\n      // #2388\n      eventName = createCompoundExpression([`${context.helperString(TO_HANDLER_KEY)}(`, arg, `)`]);\n    }\n  } else {\n    // already a compound expression.\n    eventName = arg;\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\n    eventName.children.push(`)`);\n  }\n  // handler processing\n  let exp = dir.exp;\n  if (exp && !exp.content.trim()) {\n    exp = undefined;\n  }\n  let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\n  if (exp) {\n    const isMemberExp = isMemberExpression(exp.content);\n    const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\n    const hasMultipleStatements = exp.content.includes(`;`);\n    if (process.env.NODE_ENV !== 'production' && true) {\n      validateBrowserExpression(exp, context, false, hasMultipleStatements);\n    }\n    if (isInlineStatement || shouldCache && isMemberExp) {\n      // wrap inline statement in a function expression\n      exp = createCompoundExpression([`${isInlineStatement ? `$event` : `${``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`, exp, hasMultipleStatements ? `}` : `)`]);\n    }\n  }\n  let ret = {\n    props: [createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))]\n  };\n  // apply extended compiler augmentor\n  if (augmentor) {\n    ret = augmentor(ret);\n  }\n  if (shouldCache) {\n    // cache handlers so that it's always the same handler being passed down.\n    // this avoids unnecessary re-renders when users use inline handlers on\n    // components.\n    ret.props[0].value = context.cache(ret.props[0].value);\n  }\n  // mark the key as handler for props normalization check\n  ret.props.forEach(p => p.key.isHandlerKey = true);\n  return ret;\n};\n\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\n// codegen for the entire props object. This transform here is only for v-bind\n// *with* args.\nconst transformBind = (dir, _node, context) => {\n  const {\n    exp,\n    modifiers,\n    loc\n  } = dir;\n  const arg = dir.arg;\n  if (arg.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n    arg.children.unshift(`(`);\n    arg.children.push(`) || \"\"`);\n  } else if (!arg.isStatic) {\n    arg.content = `${arg.content} || \"\"`;\n  }\n  // .sync is replaced by v-model:arg\n  if (modifiers.includes('camel')) {\n    if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n      if (arg.isStatic) {\n        arg.content = camelize$1(arg.content);\n      } else {\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\n      }\n    } else {\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\n      arg.children.push(`)`);\n    }\n  }\n  if (!context.inSSR) {\n    if (modifiers.includes('prop')) {\n      injectPrefix(arg, '.');\n    }\n    if (modifiers.includes('attr')) {\n      injectPrefix(arg, '^');\n    }\n  }\n  if (!exp || exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && !exp.content.trim()) {\n    context.onError(createCompilerError(34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */, loc));\n    return {\n      props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\n    };\n  }\n  return {\n    props: [createObjectProperty(arg, exp)]\n  };\n};\nconst injectPrefix = (arg, prefix) => {\n  if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n    if (arg.isStatic) {\n      arg.content = prefix + arg.content;\n    } else {\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``;\n    }\n  } else {\n    arg.children.unshift(`'${prefix}' + (`);\n    arg.children.push(`)`);\n  }\n};\n\n// Merge adjacent text nodes and expressions into a single expression\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\nconst transformText = (node, context) => {\n  if (node.type === 0 /* NodeTypes.ROOT */ || node.type === 1 /* NodeTypes.ELEMENT */ || node.type === 11 /* NodeTypes.FOR */ || node.type === 10 /* NodeTypes.IF_BRANCH */) {\n    // perform the transform on node exit so that all expressions have already\n    // been processed.\n    return () => {\n      const children = node.children;\n      let currentContainer = undefined;\n      let hasText = false;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child)) {\n          hasText = true;\n          for (let j = i + 1; j < children.length; j++) {\n            const next = children[j];\n            if (isText$1(next)) {\n              if (!currentContainer) {\n                currentContainer = children[i] = createCompoundExpression([child], child.loc);\n              }\n              // merge adjacent text node into current\n              currentContainer.children.push(` + `, next);\n              children.splice(j, 1);\n              j--;\n            } else {\n              currentContainer = undefined;\n              break;\n            }\n          }\n        }\n      }\n      if (!hasText ||\n      // if this is a plain element with a single text child, leave it\n      // as-is since the runtime has dedicated fast path for this by directly\n      // setting textContent of the element.\n      // for component root it's always normalized anyway.\n      children.length === 1 && (node.type === 0 /* NodeTypes.ROOT */ || node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 0 /* ElementTypes.ELEMENT */ &&\n      // #3756\n      // custom directives can potentially add DOM elements arbitrarily,\n      // we need to avoid setting textContent of the element at runtime\n      // to avoid accidentally overwriting the DOM elements added\n      // by the user through custom directives.\n      !node.props.find(p => p.type === 7 /* NodeTypes.DIRECTIVE */ && !context.directiveTransforms[p.name]) &&\n      // in compat mode, <template> tags with no special directives\n      // will be rendered as a fragment so its children must be\n      // converted into vnodes.\n      !(node.tag === 'template'))) {\n        return;\n      }\n      // pre-convert text nodes into createTextVNode(text) calls to avoid\n      // runtime normalization.\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child) || child.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) {\n          const callArgs = [];\n          // createTextVNode defaults to single whitespace, so if it is a\n          // single space the code could be an empty call to save bytes.\n          if (child.type !== 2 /* NodeTypes.TEXT */ || child.content !== ' ') {\n            callArgs.push(child);\n          }\n          // mark dynamic text with flag so it gets patched inside a block\n          if (!context.ssr && getConstantType(child, context) === 0 /* ConstantTypes.NOT_CONSTANT */) {\n            callArgs.push(1 /* PatchFlags.TEXT */ + (process.env.NODE_ENV !== 'production' ? ` /* ${PatchFlagNames[1 /* PatchFlags.TEXT */]} */` : ``));\n          }\n          children[i] = {\n            type: 12 /* NodeTypes.TEXT_CALL */,\n            content: child,\n            loc: child.loc,\n            codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\n          };\n        }\n      }\n    };\n  }\n};\nconst seen$1 = new WeakSet();\nconst transformOnce = (node, context) => {\n  if (node.type === 1 /* NodeTypes.ELEMENT */ && findDir(node, 'once', true)) {\n    if (seen$1.has(node) || context.inVOnce) {\n      return;\n    }\n    seen$1.add(node);\n    context.inVOnce = true;\n    context.helper(SET_BLOCK_TRACKING);\n    return () => {\n      context.inVOnce = false;\n      const cur = context.currentNode;\n      if (cur.codegenNode) {\n        cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */);\n      }\n    };\n  }\n};\n\nconst transformModel = (dir, node, context) => {\n  const {\n    exp,\n    arg\n  } = dir;\n  if (!exp) {\n    context.onError(createCompilerError(41 /* ErrorCodes.X_V_MODEL_NO_EXPRESSION */, dir.loc));\n    return createTransformProps();\n  }\n  const rawExp = exp.loc.source;\n  const expString = exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ ? exp.content : rawExp;\n  // im SFC <script setup> inline mode, the exp may have been transformed into\n  // _unref(exp)\n  const bindingType = context.bindingMetadata[rawExp];\n  // check props\n  if (bindingType === \"props\" /* BindingTypes.PROPS */ || bindingType === \"props-aliased\" /* BindingTypes.PROPS_ALIASED */) {\n    context.onError(createCompilerError(44 /* ErrorCodes.X_V_MODEL_ON_PROPS */, exp.loc));\n    return createTransformProps();\n  }\n  const maybeRef = !true;\n  if (!expString.trim() || !isMemberExpression(expString) && !maybeRef) {\n    context.onError(createCompilerError(42 /* ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION */, exp.loc));\n    return createTransformProps();\n  }\n  const propName = arg ? arg : createSimpleExpression('modelValue', true);\n  const eventName = arg ? isStaticExp(arg) ? `onUpdate:${camelize$1(arg.content)}` : createCompoundExpression(['\"onUpdate:\" + ', arg]) : `onUpdate:modelValue`;\n  let assignmentExp;\n  const eventArg = context.isTS ? `($event: any)` : `$event`;\n  {\n    assignmentExp = createCompoundExpression([`${eventArg} => ((`, exp, `) = $event)`]);\n  }\n  const props = [\n  // modelValue: foo\n  createObjectProperty(propName, dir.exp),\n  // \"onUpdate:modelValue\": $event => (foo = $event)\n  createObjectProperty(eventName, assignmentExp)];\n  // modelModifiers: { foo: true, \"bar-baz\": true }\n  if (dir.modifiers.length && node.tagType === 1 /* ElementTypes.COMPONENT */) {\n    const modifiers = dir.modifiers.map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`).join(`, `);\n    const modifiersKey = arg ? isStaticExp(arg) ? `${arg.content}Modifiers` : createCompoundExpression([arg, ' + \"Modifiers\"']) : `modelModifiers`;\n    props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, 2 /* ConstantTypes.CAN_HOIST */)));\n  }\n\n  return createTransformProps(props);\n};\nfunction createTransformProps(props = []) {\n  return {\n    props\n  };\n}\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\nconst transformFilter = (node, context) => {\n  if (!isCompatEnabled(\"COMPILER_FILTER\" /* CompilerDeprecationTypes.COMPILER_FILTERS */, context)) {\n    return;\n  }\n  if (node.type === 5 /* NodeTypes.INTERPOLATION */) {\n    // filter rewrite is applied before expression transform so only\n    // simple expressions are possible at this stage\n    rewriteFilter(node.content, context);\n  }\n  if (node.type === 1 /* NodeTypes.ELEMENT */) {\n    node.props.forEach(prop => {\n      if (prop.type === 7 /* NodeTypes.DIRECTIVE */ && prop.name !== 'for' && prop.exp) {\n        rewriteFilter(prop.exp, context);\n      }\n    });\n  }\n};\nfunction rewriteFilter(node, context) {\n  if (node.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n    parseFilter(node, context);\n  } else {\n    for (let i = 0; i < node.children.length; i++) {\n      const child = node.children[i];\n      if (typeof child !== 'object') continue;\n      if (child.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n        parseFilter(child, context);\n      } else if (child.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) {\n        rewriteFilter(node, context);\n      } else if (child.type === 5 /* NodeTypes.INTERPOLATION */) {\n        rewriteFilter(child.content, context);\n      }\n    }\n  }\n}\nfunction parseFilter(node, context) {\n  const exp = node.content;\n  let inSingle = false;\n  let inDouble = false;\n  let inTemplateString = false;\n  let inRegex = false;\n  let curly = 0;\n  let square = 0;\n  let paren = 0;\n  let lastFilterIndex = 0;\n  let c,\n    prev,\n    i,\n    expression,\n    filters = [];\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5c) inSingle = false;\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5c) inDouble = false;\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5c) inTemplateString = false;\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5c) inRegex = false;\n    } else if (c === 0x7c &&\n    // pipe\n    exp.charCodeAt(i + 1) !== 0x7c && exp.charCodeAt(i - 1) !== 0x7c && !curly && !square && !paren) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;\n          break;\n        // \"\n        case 0x27:\n          inSingle = true;\n          break;\n        // '\n        case 0x60:\n          inTemplateString = true;\n          break;\n        // `\n        case 0x28:\n          paren++;\n          break;\n        // (\n        case 0x29:\n          paren--;\n          break;\n        // )\n        case 0x5b:\n          square++;\n          break;\n        // [\n        case 0x5d:\n          square--;\n          break;\n        // ]\n        case 0x7b:\n          curly++;\n          break;\n        // {\n        case 0x7d:\n          curly--;\n          break;\n        // }\n      }\n\n      if (c === 0x2f) {\n        // /\n        let j = i - 1;\n        let p;\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') break;\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n  function pushFilter() {\n    filters.push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n  if (filters.length) {\n    process.env.NODE_ENV !== 'production' && warnDeprecation(\"COMPILER_FILTER\" /* CompilerDeprecationTypes.COMPILER_FILTERS */, context, node.loc);\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i], context);\n    }\n    node.content = expression;\n  }\n}\nfunction wrapFilter(exp, filter, context) {\n  context.helper(RESOLVE_FILTER);\n  const i = filter.indexOf('(');\n  if (i < 0) {\n    context.filters.add(filter);\n    return `${toValidAssetId(filter, 'filter')}(${exp})`;\n  } else {\n    const name = filter.slice(0, i);\n    const args = filter.slice(i + 1);\n    context.filters.add(name);\n    return `${toValidAssetId(name, 'filter')}(${exp}${args !== ')' ? ',' + args : args}`;\n  }\n}\nconst seen = new WeakSet();\nconst transformMemo = (node, context) => {\n  if (node.type === 1 /* NodeTypes.ELEMENT */) {\n    const dir = findDir(node, 'memo');\n    if (!dir || seen.has(node)) {\n      return;\n    }\n    seen.add(node);\n    return () => {\n      const codegenNode = node.codegenNode || context.currentNode.codegenNode;\n      if (codegenNode && codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\n        // non-component sub tree should be turned into a block\n        if (node.tagType !== 1 /* ElementTypes.COMPONENT */) {\n          makeBlock(codegenNode, context);\n        }\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [dir.exp, createFunctionExpression(undefined, codegenNode), `_cache`, String(context.cached++)]);\n      }\n    };\n  }\n};\nfunction getBaseTransformPreset(prefixIdentifiers) {\n  return [[transformOnce, transformIf, transformMemo, transformFor, ...[transformFilter], ...(process.env.NODE_ENV !== 'production' ? [transformExpression] : []), transformSlotOutlet, transformElement, trackSlotScopes, transformText], {\n    on: transformOn,\n    bind: transformBind,\n    model: transformModel\n  }];\n}\n// we name it `baseCompile` so that higher order compilers like\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\nfunction baseCompile(template, options = {}) {\n  const onError = options.onError || defaultOnError;\n  const isModuleMode = options.mode === 'module';\n  /* istanbul ignore if */\n  {\n    if (options.prefixIdentifiers === true) {\n      onError(createCompilerError(47 /* ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED */));\n    } else if (isModuleMode) {\n      onError(createCompilerError(48 /* ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED */));\n    }\n  }\n\n  const prefixIdentifiers = !true;\n  if (options.cacheHandlers) {\n    onError(createCompilerError(49 /* ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED */));\n  }\n\n  if (options.scopeId && !isModuleMode) {\n    onError(createCompilerError(50 /* ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED */));\n  }\n\n  const ast = isString(template) ? baseParse(template, options) : template;\n  const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();\n  transform(ast, extend({}, options, {\n    prefixIdentifiers,\n    nodeTransforms: [...nodeTransforms, ...(options.nodeTransforms || []) // user transforms\n    ],\n\n    directiveTransforms: extend({}, directiveTransforms, options.directiveTransforms || {} // user transforms\n    )\n  }));\n\n  return generate(ast, extend({}, options, {\n    prefixIdentifiers\n  }));\n}\nconst noopDirectiveTransform = () => ({\n  props: []\n});\nexport { BASE_TRANSITION, CAMELIZE, CAPITALIZE, CREATE_BLOCK, CREATE_COMMENT, CREATE_ELEMENT_BLOCK, CREATE_ELEMENT_VNODE, CREATE_SLOTS, CREATE_STATIC, CREATE_TEXT, CREATE_VNODE, FRAGMENT, GUARD_REACTIVE_PROPS, IS_MEMO_SAME, IS_REF, KEEP_ALIVE, MERGE_PROPS, NORMALIZE_CLASS, NORMALIZE_PROPS, NORMALIZE_STYLE, OPEN_BLOCK, POP_SCOPE_ID, PUSH_SCOPE_ID, RENDER_LIST, RENDER_SLOT, RESOLVE_COMPONENT, RESOLVE_DIRECTIVE, RESOLVE_DYNAMIC_COMPONENT, RESOLVE_FILTER, SET_BLOCK_TRACKING, SUSPENSE, TELEPORT, TO_DISPLAY_STRING, TO_HANDLERS, TO_HANDLER_KEY, UNREF, WITH_CTX, WITH_DIRECTIVES, WITH_MEMO, advancePositionWithClone, advancePositionWithMutation, assert, baseCompile, baseParse, buildDirectiveArgs, buildProps, buildSlots, checkCompatEnabled, createArrayExpression, createAssignmentExpression, createBlockStatement, createCacheExpression, createCallExpression, createCompilerError, createCompoundExpression, createConditionalExpression, createForLoopParams, createFunctionExpression, createIfStatement, createInterpolation, createObjectExpression, createObjectProperty, createReturnStatement, createRoot, createSequenceExpression, createSimpleExpression, createStructuralDirectiveTransform, createTemplateLiteral, createTransformContext, createVNodeCall, extractIdentifiers, findDir, findProp, generate, getBaseTransformPreset, getConstantType, getInnerRange, getMemoedVNodeCall, getVNodeBlockHelper, getVNodeHelper, hasDynamicKeyVBind, hasScopeRef, helperNameMap, injectProp, isBuiltInType, isCoreComponent, isFunctionType, isInDestructureAssignment, isMemberExpression, isMemberExpressionBrowser, isMemberExpressionNode, isReferencedIdentifier, isSimpleIdentifier, isSlotOutlet, isStaticArgOf, isStaticExp, isStaticProperty, isStaticPropertyKey, isTemplateNode, isText$1 as isText, isVSlot, locStub, makeBlock, noopDirectiveTransform, processExpression, processFor, processIf, processSlotOutlet, registerRuntimeHelpers, resolveComponentType, stringifyExpression, toValidAssetId, trackSlotScopes, trackVForSlotScopes, transform, transformBind, transformElement, transformExpression, transformModel, transformOn, traverseNode, walkBlockDeclarations, walkFunctionParams, walkIdentifiers, warnDeprecation };","map":{"version":3,"names":["isString","hyphenate","NOOP","extend","isObject","NO","isArray","makeMap","isSymbol","capitalize","camelize","camelize$1","EMPTY_OBJ","PatchFlagNames","slotFlagsText","isOn","isBuiltInDirective","isReservedProp","toHandlerKey","generateCodeFrame","defaultOnError","error","defaultOnWarn","msg","process","env","NODE_ENV","console","warn","message","createCompilerError","code","loc","messages","additionalMessage","errorMessages","SyntaxError","String","FRAGMENT","Symbol","TELEPORT","SUSPENSE","KEEP_ALIVE","BASE_TRANSITION","OPEN_BLOCK","CREATE_BLOCK","CREATE_ELEMENT_BLOCK","CREATE_VNODE","CREATE_ELEMENT_VNODE","CREATE_COMMENT","CREATE_TEXT","CREATE_STATIC","RESOLVE_COMPONENT","RESOLVE_DYNAMIC_COMPONENT","RESOLVE_DIRECTIVE","RESOLVE_FILTER","WITH_DIRECTIVES","RENDER_LIST","RENDER_SLOT","CREATE_SLOTS","TO_DISPLAY_STRING","MERGE_PROPS","NORMALIZE_CLASS","NORMALIZE_STYLE","NORMALIZE_PROPS","GUARD_REACTIVE_PROPS","TO_HANDLERS","CAMELIZE","CAPITALIZE","TO_HANDLER_KEY","SET_BLOCK_TRACKING","PUSH_SCOPE_ID","POP_SCOPE_ID","WITH_CTX","UNREF","IS_REF","WITH_MEMO","IS_MEMO_SAME","helperNameMap","registerRuntimeHelpers","helpers","Object","getOwnPropertySymbols","forEach","s","locStub","source","start","line","column","offset","end","createRoot","children","type","Set","components","directives","hoists","imports","cached","temps","codegenNode","undefined","createVNodeCall","context","tag","props","patchFlag","dynamicProps","isBlock","disableTracking","isComponent","helper","getVNodeBlockHelper","inSSR","getVNodeHelper","createArrayExpression","elements","createObjectExpression","properties","createObjectProperty","key","value","createSimpleExpression","content","isStatic","constType","createInterpolation","createCompoundExpression","createCallExpression","callee","args","arguments","createFunctionExpression","params","returns","newline","isSlot","createConditionalExpression","test","consequent","alternate","createCacheExpression","index","isVNode","createBlockStatement","body","createTemplateLiteral","createIfStatement","createAssignmentExpression","left","right","createSequenceExpression","expressions","createReturnStatement","isStaticExp","p","isBuiltInType","expected","isCoreComponent","nonIdentifierRE","isSimpleIdentifier","name","validFirstIdentCharRE","validIdentCharRE","whitespaceRE","isMemberExpressionBrowser","path","trim","replace","state","stateStack","currentOpenBracketCount","currentOpenParensCount","currentStringType","i","length","char","charAt","push","pop","isMemberExpressionNode","isMemberExpression","getInnerRange","slice","newLoc","advancePositionWithClone","pos","numberOfCharacters","advancePositionWithMutation","linesCount","lastNewLinePos","charCodeAt","assert","condition","Error","findDir","node","allowEmpty","exp","findProp","dynamicOnly","isStaticArgOf","arg","hasDynamicKeyVBind","some","isText$1","isVSlot","isTemplateNode","tagType","isSlotOutlet","ssr","propsHelperSet","getUnnormalizedProps","callPath","has","concat","injectProp","prop","propsWithInjection","parentCall","ret","first","hasProp","unshift","result","propKeyName","toValidAssetId","searchValue","replaceValue","toString","hasScopeRef","ids","keys","c","branches","b","getMemoedVNodeCall","makeBlock","removeHelper","deprecationData","link","getCompatValue","config","options","compatConfig","isCompatEnabled","mode","checkCompatEnabled","enabled","warnDeprecation","val","err","onWarn","decodeRE","decodeMap","gt","lt","amp","apos","quot","defaultParserOptions","delimiters","getNamespace","getTextMode","isVoidTag","isPreTag","isCustomElement","decodeEntities","rawText","_","p1","onError","comments","baseParse","createParserContext","getCursor","parseChildren","getSelection","rawOptions","originalSource","inPre","inVPre","ancestors","parent","last","ns","nodes","isEnd","startsWith","parseInterpolation","emitError","parseComment","parseBogusComment","parseCDATA","advanceBy","parseTag","parseElement","isSpecialTemplateDirective","parseText","pushNode","removedWhitespace","shouldCondense","whitespace","prev","next","filter","Boolean","match","exec","prevIndex","nestedIndex","indexOf","contentStart","closeIndex","wasInPre","wasInVPre","element","isPreBoundary","isVPreBoundary","isSelfClosing","inlineTemplateProp","find","startsWithEndTagOpen","toLowerCase","advanceSpaces","cursor","currentSource","parseAttributes","hasIf","hasFor","isBuiltInComponent","isNativeTag","attributeNames","attr","parseAttribute","nameSet","add","pattern","m","parseAttributeValue","isPropShorthand","dirName","startOffset","lastIndexOf","getNewPosition","endsWith","isQuoted","valueLoc","modifiers","split","includes","splice","quote","endIndex","parseTextData","unexpectedChars","open","close","innerStart","innerEnd","rawContentLength","rawContent","preTrimContent","endOffset","endTokens","xs","searchString","hoistStatic","root","walk","isSingleElementRoot","child","doNotHoistNode","originalCount","hoistedCount","constantType","getConstantType","hoist","flag","getPatchFlag","getGeneratedPropsConstantType","getNodeProps","scopes","vSlot","transformHoist","constantCache","get","returnType","generatedPropsType","set","childType","expType","allowHoistedHelperSet","getConstantTypeOfHelperCall","keyType","valueType","parseInt","createTransformContext","filename","prefixIdentifiers","cacheHandlers","nodeTransforms","directiveTransforms","expressionPlugins","scopeId","slotted","ssrCssVars","bindingMetadata","inline","isTS","nameMatch","selfName","Map","identifiers","create","vFor","vPre","vOnce","currentNode","childIndex","inVOnce","count","currentCount","delete","helperString","replaceNode","removeNode","list","removalIndex","onNodeRemoved","addIdentifiers","removeIdentifiers","identifier","hoisted","cache","filters","transform","traverseNode","createRootCodegen","patchFlagText","traverseChildren","nodeRemoved","exitFns","onExit","createStructuralDirectiveTransform","fn","matches","n","PURE_ANNOTATION","aliasHelper","createCodegenContext","ast","sourceMap","optimizeImports","runtimeGlobalName","runtimeModuleName","ssrRuntimeModuleName","indentLevel","pure","map","indent","deindent","withoutNewLine","repeat","generate","onContextCreated","Array","from","hasHelpers","useWithBlock","isSetupInlined","preambleContext","genFunctionPreamble","functionName","signature","join","genAssets","genNode","preamble","toJSON","VueBinding","staticHelpers","genHoists","assets","resolver","id","maybeSelfReference","JSON","stringify","isText","genNodeListAsArray","multilines","genNodeList","comma","genText","genExpression","genInterpolation","genCompoundExpression","genComment","genVNodeCall","genCallExpression","genObjectExpression","genArrayExpression","genFunctionExpression","genConditionalExpression","genCacheExpression","exhaustiveCheck","genExpressionAsPropertyKey","text","callHelper","genNullableArgs","isNonScopedSlot","needNewline","needsParens","isNested","walkIdentifiers","onIdentifier","includeAll","parentStack","knownIds","isReferencedIdentifier","isInDestructureAssignment","walkFunctionParams","onIdent","extractIdentifiers","walkBlockDeclarations","block","stmt","declare","decl","declarations","param","object","argument","isFunctionType","isStaticProperty","computed","isStaticPropertyKey","prohibitedKeywordRE","RegExp","stripStringRE","validateBrowserExpression","asParams","asRawStatements","Function","e","keywordMatch","transformExpression","processExpression","dir","localVars","stringifyExpression","transformIf","processIf","ifNode","branch","isRoot","siblings","sibling","createCodegenNodeForBranch","parentCondition","getParentCondition","processCodegen","createIfBranch","userKey","isSameKey","isTemplateIf","keyIndex","createChildrenCodegenNode","keyProperty","firstChild","needFragmentWrapper","vnodeCall","a","branchExp","transformFor","processFor","forNode","renderExp","isTemplate","memo","keyProp","keyExp","isStableFragment","fragmentFlag","childBlock","slotOutlet","loop","createForLoopParams","parseResult","parseForExpression","valueAlias","keyAlias","objectIndexAlias","forAliasRE","forIteratorRE","stripParensRE","input","inMatch","LHS","RHS","createAliasExpression","valueContent","trimmedOffset","iteratorMatch","keyContent","keyOffset","indexContent","range","memoArgs","createParamsList","defaultFallback","trackSlotScopes","trackVForSlotScopes","buildClientSlotFn","buildSlots","buildSlotFn","slotsProperties","dynamicSlots","hasDynamicSlots","onComponentSlot","hasTemplateSlots","hasNamedDefaultSlot","implicitDefaultChildren","seenSlotNames","conditionalBranchIndex","slotElement","slotDir","slotChildren","slotLoc","slotName","slotProps","dirLoc","staticSlotName","slotFunction","vIf","vElse","buildDynamicSlot","j","conditional","buildDefaultSlotProperty","isNonWhitespaceContent","slotFlag","hasForwardedSlots","slots","directiveImportMap","WeakMap","transformElement","postTransformElement","vnodeTag","resolveComponentType","isDynamicComponent","vnodeProps","vnodeChildren","vnodePatchFlag","vnodeDynamicProps","dynamicPropNames","vnodeDirectives","shouldUseBlock","propsBuildResult","buildProps","buildDirectiveArgs","shouldBuildAsSlots","hasDynamicTextChild","flagNames","Number","stringifyDynamicPropNames","isExplicitDynamic","isComponentTag","isProp","isDir","builtIn","elementLoc","mergeArgs","runtimeDirectives","hasChildren","hasRef","hasClassBinding","hasStyleBinding","hasHydrationEventBinding","hasDynamicKeys","hasVnodeHook","pushMergeArg","dedupeProperties","analyzePatchFlag","isEventHandler","isVBind","isVOn","hasOverridableKeys","directiveTransform","needRuntime","propsExpression","classKeyIndex","styleKeyIndex","hasDynamicKey","isHandlerKey","classProp","styleProp","knownProps","deduped","existing","mergeAsArray","incoming","dirArgs","runtime","trueExpression","modifier","propsNamesString","l","freeze","cacheStringFunction","str","hit","camelizeRE","toUpperCase","transformSlotOutlet","processSlotOutlet","slotArgs","expectedLen","nonNameProps","fnExpRE","transformOn","augmentor","eventName","rawName","eventString","shouldCache","isMemberExp","isInlineStatement","hasMultipleStatements","transformBind","_node","injectPrefix","prefix","transformText","currentContainer","hasText","callArgs","seen$1","WeakSet","transformOnce","cur","transformModel","createTransformProps","rawExp","expString","bindingType","maybeRef","propName","assignmentExp","eventArg","modifiersKey","validDivisionCharRE","transformFilter","rewriteFilter","parseFilter","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","expression","pushFilter","wrapFilter","seen","transformMemo","getBaseTransformPreset","on","bind","model","baseCompile","template","isModuleMode","noopDirectiveTransform"],"sources":["C:/Users/ElyseeLAB/Desktop/Vuejs BootCamp/firstproject/node_modules/@vue/compiler-core/dist/compiler-core.esm-bundler.js"],"sourcesContent":["import { isString, hyphenate, NOOP, extend, isObject, NO, isArray, makeMap, isSymbol, capitalize, camelize as camelize$1, EMPTY_OBJ, PatchFlagNames, slotFlagsText, isOn, isBuiltInDirective, isReservedProp, toHandlerKey } from '@vue/shared';\nexport { generateCodeFrame } from '@vue/shared';\n\nfunction defaultOnError(error) {\n    throw error;\n}\nfunction defaultOnWarn(msg) {\n    (process.env.NODE_ENV !== 'production') && console.warn(`[Vue warn] ${msg.message}`);\n}\nfunction createCompilerError(code, loc, messages, additionalMessage) {\n    const msg = (process.env.NODE_ENV !== 'production') || !true\n        ? (messages || errorMessages)[code] + (additionalMessage || ``)\n        : code;\n    const error = new SyntaxError(String(msg));\n    error.code = code;\n    error.loc = loc;\n    return error;\n}\nconst errorMessages = {\n    // parse errors\n    [0 /* ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT */]: 'Illegal comment.',\n    [1 /* ErrorCodes.CDATA_IN_HTML_CONTENT */]: 'CDATA section is allowed only in XML context.',\n    [2 /* ErrorCodes.DUPLICATE_ATTRIBUTE */]: 'Duplicate attribute.',\n    [3 /* ErrorCodes.END_TAG_WITH_ATTRIBUTES */]: 'End tag cannot have attributes.',\n    [4 /* ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS */]: \"Illegal '/' in tags.\",\n    [5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */]: 'Unexpected EOF in tag.',\n    [6 /* ErrorCodes.EOF_IN_CDATA */]: 'Unexpected EOF in CDATA section.',\n    [7 /* ErrorCodes.EOF_IN_COMMENT */]: 'Unexpected EOF in comment.',\n    [8 /* ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */]: 'Unexpected EOF in script.',\n    [9 /* ErrorCodes.EOF_IN_TAG */]: 'Unexpected EOF in tag.',\n    [10 /* ErrorCodes.INCORRECTLY_CLOSED_COMMENT */]: 'Incorrectly closed comment.',\n    [11 /* ErrorCodes.INCORRECTLY_OPENED_COMMENT */]: 'Incorrectly opened comment.',\n    [12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */]: \"Illegal tag name. Use '&lt;' to print '<'.\",\n    [13 /* ErrorCodes.MISSING_ATTRIBUTE_VALUE */]: 'Attribute value was expected.',\n    [14 /* ErrorCodes.MISSING_END_TAG_NAME */]: 'End tag name was expected.',\n    [15 /* ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */]: 'Whitespace was expected.',\n    [16 /* ErrorCodes.NESTED_COMMENT */]: \"Unexpected '<!--' in comment.\",\n    [17 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */]: 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\n    [18 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */]: 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\n    [19 /* ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */]: \"Attribute name cannot start with '='.\",\n    [21 /* ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */]: \"'<?' is allowed only in XML context.\",\n    [20 /* ErrorCodes.UNEXPECTED_NULL_CHARACTER */]: `Unexpected null character.`,\n    [22 /* ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG */]: \"Illegal '/' in tags.\",\n    // Vue-specific parse errors\n    [23 /* ErrorCodes.X_INVALID_END_TAG */]: 'Invalid end tag.',\n    [24 /* ErrorCodes.X_MISSING_END_TAG */]: 'Element is missing end tag.',\n    [25 /* ErrorCodes.X_MISSING_INTERPOLATION_END */]: 'Interpolation end sign was not found.',\n    [27 /* ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */]: 'End bracket for dynamic directive argument was not found. ' +\n        'Note that dynamic directive argument cannot contain spaces.',\n    [26 /* ErrorCodes.X_MISSING_DIRECTIVE_NAME */]: 'Legal directive name was expected.',\n    // transform errors\n    [28 /* ErrorCodes.X_V_IF_NO_EXPRESSION */]: `v-if/v-else-if is missing expression.`,\n    [29 /* ErrorCodes.X_V_IF_SAME_KEY */]: `v-if/else branches must use unique keys.`,\n    [30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\n    [31 /* ErrorCodes.X_V_FOR_NO_EXPRESSION */]: `v-for is missing expression.`,\n    [32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */]: `v-for has invalid expression.`,\n    [33 /* ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT */]: `<template v-for> key should be placed on the <template> tag.`,\n    [34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */]: `v-bind is missing expression.`,\n    [35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */]: `v-on is missing expression.`,\n    [36 /* ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */]: `Unexpected custom directive on <slot> outlet.`,\n    [37 /* ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE */]: `Mixed v-slot usage on both the component and nested <template>. ` +\n        `When there are multiple named slots, all slots should use <template> ` +\n        `syntax to avoid scope ambiguity.`,\n    [38 /* ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES */]: `Duplicate slot names found. `,\n    [39 /* ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */]: `Extraneous children found when component already has explicitly named ` +\n        `default slot. These children will be ignored.`,\n    [40 /* ErrorCodes.X_V_SLOT_MISPLACED */]: `v-slot can only be used on components or <template> tags.`,\n    [41 /* ErrorCodes.X_V_MODEL_NO_EXPRESSION */]: `v-model is missing expression.`,\n    [42 /* ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION */]: `v-model value must be a valid JavaScript member expression.`,\n    [43 /* ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE */]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\n    [44 /* ErrorCodes.X_V_MODEL_ON_PROPS */]: `v-model cannot be used on a prop, because local prop bindings are not writable.\\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.`,\n    [45 /* ErrorCodes.X_INVALID_EXPRESSION */]: `Error parsing JavaScript expression: `,\n    [46 /* ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN */]: `<KeepAlive> expects exactly one child component.`,\n    // generic errors\n    [47 /* ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED */]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\n    [48 /* ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED */]: `ES module mode is not supported in this build of compiler.`,\n    [49 /* ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED */]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\n    [50 /* ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED */]: `\"scopeId\" option is only supported in module mode.`,\n    // just to fulfill types\n    [51 /* ErrorCodes.__EXTEND_POINT__ */]: ``\n};\n\nconst FRAGMENT = Symbol((process.env.NODE_ENV !== 'production') ? `Fragment` : ``);\nconst TELEPORT = Symbol((process.env.NODE_ENV !== 'production') ? `Teleport` : ``);\nconst SUSPENSE = Symbol((process.env.NODE_ENV !== 'production') ? `Suspense` : ``);\nconst KEEP_ALIVE = Symbol((process.env.NODE_ENV !== 'production') ? `KeepAlive` : ``);\nconst BASE_TRANSITION = Symbol((process.env.NODE_ENV !== 'production') ? `BaseTransition` : ``);\nconst OPEN_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `openBlock` : ``);\nconst CREATE_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createBlock` : ``);\nconst CREATE_ELEMENT_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createElementBlock` : ``);\nconst CREATE_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createVNode` : ``);\nconst CREATE_ELEMENT_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createElementVNode` : ``);\nconst CREATE_COMMENT = Symbol((process.env.NODE_ENV !== 'production') ? `createCommentVNode` : ``);\nconst CREATE_TEXT = Symbol((process.env.NODE_ENV !== 'production') ? `createTextVNode` : ``);\nconst CREATE_STATIC = Symbol((process.env.NODE_ENV !== 'production') ? `createStaticVNode` : ``);\nconst RESOLVE_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveComponent` : ``);\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDynamicComponent` : ``);\nconst RESOLVE_DIRECTIVE = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDirective` : ``);\nconst RESOLVE_FILTER = Symbol((process.env.NODE_ENV !== 'production') ? `resolveFilter` : ``);\nconst WITH_DIRECTIVES = Symbol((process.env.NODE_ENV !== 'production') ? `withDirectives` : ``);\nconst RENDER_LIST = Symbol((process.env.NODE_ENV !== 'production') ? `renderList` : ``);\nconst RENDER_SLOT = Symbol((process.env.NODE_ENV !== 'production') ? `renderSlot` : ``);\nconst CREATE_SLOTS = Symbol((process.env.NODE_ENV !== 'production') ? `createSlots` : ``);\nconst TO_DISPLAY_STRING = Symbol((process.env.NODE_ENV !== 'production') ? `toDisplayString` : ``);\nconst MERGE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `mergeProps` : ``);\nconst NORMALIZE_CLASS = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeClass` : ``);\nconst NORMALIZE_STYLE = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeStyle` : ``);\nconst NORMALIZE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeProps` : ``);\nconst GUARD_REACTIVE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `guardReactiveProps` : ``);\nconst TO_HANDLERS = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlers` : ``);\nconst CAMELIZE = Symbol((process.env.NODE_ENV !== 'production') ? `camelize` : ``);\nconst CAPITALIZE = Symbol((process.env.NODE_ENV !== 'production') ? `capitalize` : ``);\nconst TO_HANDLER_KEY = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlerKey` : ``);\nconst SET_BLOCK_TRACKING = Symbol((process.env.NODE_ENV !== 'production') ? `setBlockTracking` : ``);\nconst PUSH_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `pushScopeId` : ``);\nconst POP_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `popScopeId` : ``);\nconst WITH_CTX = Symbol((process.env.NODE_ENV !== 'production') ? `withCtx` : ``);\nconst UNREF = Symbol((process.env.NODE_ENV !== 'production') ? `unref` : ``);\nconst IS_REF = Symbol((process.env.NODE_ENV !== 'production') ? `isRef` : ``);\nconst WITH_MEMO = Symbol((process.env.NODE_ENV !== 'production') ? `withMemo` : ``);\nconst IS_MEMO_SAME = Symbol((process.env.NODE_ENV !== 'production') ? `isMemoSame` : ``);\n// Name mapping for runtime helpers that need to be imported from 'vue' in\n// generated code. Make sure these are correctly exported in the runtime!\nconst helperNameMap = {\n    [FRAGMENT]: `Fragment`,\n    [TELEPORT]: `Teleport`,\n    [SUSPENSE]: `Suspense`,\n    [KEEP_ALIVE]: `KeepAlive`,\n    [BASE_TRANSITION]: `BaseTransition`,\n    [OPEN_BLOCK]: `openBlock`,\n    [CREATE_BLOCK]: `createBlock`,\n    [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\n    [CREATE_VNODE]: `createVNode`,\n    [CREATE_ELEMENT_VNODE]: `createElementVNode`,\n    [CREATE_COMMENT]: `createCommentVNode`,\n    [CREATE_TEXT]: `createTextVNode`,\n    [CREATE_STATIC]: `createStaticVNode`,\n    [RESOLVE_COMPONENT]: `resolveComponent`,\n    [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\n    [RESOLVE_DIRECTIVE]: `resolveDirective`,\n    [RESOLVE_FILTER]: `resolveFilter`,\n    [WITH_DIRECTIVES]: `withDirectives`,\n    [RENDER_LIST]: `renderList`,\n    [RENDER_SLOT]: `renderSlot`,\n    [CREATE_SLOTS]: `createSlots`,\n    [TO_DISPLAY_STRING]: `toDisplayString`,\n    [MERGE_PROPS]: `mergeProps`,\n    [NORMALIZE_CLASS]: `normalizeClass`,\n    [NORMALIZE_STYLE]: `normalizeStyle`,\n    [NORMALIZE_PROPS]: `normalizeProps`,\n    [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\n    [TO_HANDLERS]: `toHandlers`,\n    [CAMELIZE]: `camelize`,\n    [CAPITALIZE]: `capitalize`,\n    [TO_HANDLER_KEY]: `toHandlerKey`,\n    [SET_BLOCK_TRACKING]: `setBlockTracking`,\n    [PUSH_SCOPE_ID]: `pushScopeId`,\n    [POP_SCOPE_ID]: `popScopeId`,\n    [WITH_CTX]: `withCtx`,\n    [UNREF]: `unref`,\n    [IS_REF]: `isRef`,\n    [WITH_MEMO]: `withMemo`,\n    [IS_MEMO_SAME]: `isMemoSame`\n};\nfunction registerRuntimeHelpers(helpers) {\n    Object.getOwnPropertySymbols(helpers).forEach(s => {\n        helperNameMap[s] = helpers[s];\n    });\n}\n\n// AST Utilities ---------------------------------------------------------------\n// Some expressions, e.g. sequence and conditional expressions, are never\n// associated with template nodes, so their source locations are just a stub.\n// Container types like CompoundExpression also don't need a real location.\nconst locStub = {\n    source: '',\n    start: { line: 1, column: 1, offset: 0 },\n    end: { line: 1, column: 1, offset: 0 }\n};\nfunction createRoot(children, loc = locStub) {\n    return {\n        type: 0 /* NodeTypes.ROOT */,\n        children,\n        helpers: new Set(),\n        components: [],\n        directives: [],\n        hoists: [],\n        imports: [],\n        cached: 0,\n        temps: 0,\n        codegenNode: undefined,\n        loc\n    };\n}\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\n    if (context) {\n        if (isBlock) {\n            context.helper(OPEN_BLOCK);\n            context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\n        }\n        else {\n            context.helper(getVNodeHelper(context.inSSR, isComponent));\n        }\n        if (directives) {\n            context.helper(WITH_DIRECTIVES);\n        }\n    }\n    return {\n        type: 13 /* NodeTypes.VNODE_CALL */,\n        tag,\n        props,\n        children,\n        patchFlag,\n        dynamicProps,\n        directives,\n        isBlock,\n        disableTracking,\n        isComponent,\n        loc\n    };\n}\nfunction createArrayExpression(elements, loc = locStub) {\n    return {\n        type: 17 /* NodeTypes.JS_ARRAY_EXPRESSION */,\n        loc,\n        elements\n    };\n}\nfunction createObjectExpression(properties, loc = locStub) {\n    return {\n        type: 15 /* NodeTypes.JS_OBJECT_EXPRESSION */,\n        loc,\n        properties\n    };\n}\nfunction createObjectProperty(key, value) {\n    return {\n        type: 16 /* NodeTypes.JS_PROPERTY */,\n        loc: locStub,\n        key: isString(key) ? createSimpleExpression(key, true) : key,\n        value\n    };\n}\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0 /* ConstantTypes.NOT_CONSTANT */) {\n    return {\n        type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\n        loc,\n        content,\n        isStatic,\n        constType: isStatic ? 3 /* ConstantTypes.CAN_STRINGIFY */ : constType\n    };\n}\nfunction createInterpolation(content, loc) {\n    return {\n        type: 5 /* NodeTypes.INTERPOLATION */,\n        loc,\n        content: isString(content)\n            ? createSimpleExpression(content, false, loc)\n            : content\n    };\n}\nfunction createCompoundExpression(children, loc = locStub) {\n    return {\n        type: 8 /* NodeTypes.COMPOUND_EXPRESSION */,\n        loc,\n        children\n    };\n}\nfunction createCallExpression(callee, args = [], loc = locStub) {\n    return {\n        type: 14 /* NodeTypes.JS_CALL_EXPRESSION */,\n        loc,\n        callee,\n        arguments: args\n    };\n}\nfunction createFunctionExpression(params, returns = undefined, newline = false, isSlot = false, loc = locStub) {\n    return {\n        type: 18 /* NodeTypes.JS_FUNCTION_EXPRESSION */,\n        params,\n        returns,\n        newline,\n        isSlot,\n        loc\n    };\n}\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\n    return {\n        type: 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */,\n        test,\n        consequent,\n        alternate,\n        newline,\n        loc: locStub\n    };\n}\nfunction createCacheExpression(index, value, isVNode = false) {\n    return {\n        type: 20 /* NodeTypes.JS_CACHE_EXPRESSION */,\n        index,\n        value,\n        isVNode,\n        loc: locStub\n    };\n}\nfunction createBlockStatement(body) {\n    return {\n        type: 21 /* NodeTypes.JS_BLOCK_STATEMENT */,\n        body,\n        loc: locStub\n    };\n}\nfunction createTemplateLiteral(elements) {\n    return {\n        type: 22 /* NodeTypes.JS_TEMPLATE_LITERAL */,\n        elements,\n        loc: locStub\n    };\n}\nfunction createIfStatement(test, consequent, alternate) {\n    return {\n        type: 23 /* NodeTypes.JS_IF_STATEMENT */,\n        test,\n        consequent,\n        alternate,\n        loc: locStub\n    };\n}\nfunction createAssignmentExpression(left, right) {\n    return {\n        type: 24 /* NodeTypes.JS_ASSIGNMENT_EXPRESSION */,\n        left,\n        right,\n        loc: locStub\n    };\n}\nfunction createSequenceExpression(expressions) {\n    return {\n        type: 25 /* NodeTypes.JS_SEQUENCE_EXPRESSION */,\n        expressions,\n        loc: locStub\n    };\n}\nfunction createReturnStatement(returns) {\n    return {\n        type: 26 /* NodeTypes.JS_RETURN_STATEMENT */,\n        returns,\n        loc: locStub\n    };\n}\n\nconst isStaticExp = (p) => p.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && p.isStatic;\nconst isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);\nfunction isCoreComponent(tag) {\n    if (isBuiltInType(tag, 'Teleport')) {\n        return TELEPORT;\n    }\n    else if (isBuiltInType(tag, 'Suspense')) {\n        return SUSPENSE;\n    }\n    else if (isBuiltInType(tag, 'KeepAlive')) {\n        return KEEP_ALIVE;\n    }\n    else if (isBuiltInType(tag, 'BaseTransition')) {\n        return BASE_TRANSITION;\n    }\n}\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\n/**\n * Simple lexer to check if an expression is a member expression. This is\n * lax and only checks validity at the root level (i.e. does not validate exps\n * inside square brackets), but it's ok since these are only used on template\n * expressions and false positives are invalid expressions in the first place.\n */\nconst isMemberExpressionBrowser = (path) => {\n    // remove whitespaces around . or [ first\n    path = path.trim().replace(whitespaceRE, s => s.trim());\n    let state = 0 /* MemberExpLexState.inMemberExp */;\n    let stateStack = [];\n    let currentOpenBracketCount = 0;\n    let currentOpenParensCount = 0;\n    let currentStringType = null;\n    for (let i = 0; i < path.length; i++) {\n        const char = path.charAt(i);\n        switch (state) {\n            case 0 /* MemberExpLexState.inMemberExp */:\n                if (char === '[') {\n                    stateStack.push(state);\n                    state = 1 /* MemberExpLexState.inBrackets */;\n                    currentOpenBracketCount++;\n                }\n                else if (char === '(') {\n                    stateStack.push(state);\n                    state = 2 /* MemberExpLexState.inParens */;\n                    currentOpenParensCount++;\n                }\n                else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\n                    return false;\n                }\n                break;\n            case 1 /* MemberExpLexState.inBrackets */:\n                if (char === `'` || char === `\"` || char === '`') {\n                    stateStack.push(state);\n                    state = 3 /* MemberExpLexState.inString */;\n                    currentStringType = char;\n                }\n                else if (char === `[`) {\n                    currentOpenBracketCount++;\n                }\n                else if (char === `]`) {\n                    if (!--currentOpenBracketCount) {\n                        state = stateStack.pop();\n                    }\n                }\n                break;\n            case 2 /* MemberExpLexState.inParens */:\n                if (char === `'` || char === `\"` || char === '`') {\n                    stateStack.push(state);\n                    state = 3 /* MemberExpLexState.inString */;\n                    currentStringType = char;\n                }\n                else if (char === `(`) {\n                    currentOpenParensCount++;\n                }\n                else if (char === `)`) {\n                    // if the exp ends as a call then it should not be considered valid\n                    if (i === path.length - 1) {\n                        return false;\n                    }\n                    if (!--currentOpenParensCount) {\n                        state = stateStack.pop();\n                    }\n                }\n                break;\n            case 3 /* MemberExpLexState.inString */:\n                if (char === currentStringType) {\n                    state = stateStack.pop();\n                    currentStringType = null;\n                }\n                break;\n        }\n    }\n    return !currentOpenBracketCount && !currentOpenParensCount;\n};\nconst isMemberExpressionNode = NOOP\n    ;\nconst isMemberExpression = isMemberExpressionBrowser\n    ;\nfunction getInnerRange(loc, offset, length) {\n    const source = loc.source.slice(offset, offset + length);\n    const newLoc = {\n        source,\n        start: advancePositionWithClone(loc.start, loc.source, offset),\n        end: loc.end\n    };\n    if (length != null) {\n        newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\n    }\n    return newLoc;\n}\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\n    return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);\n}\n// advance by mutation without cloning (for performance reasons), since this\n// gets called a lot in the parser\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\n    let linesCount = 0;\n    let lastNewLinePos = -1;\n    for (let i = 0; i < numberOfCharacters; i++) {\n        if (source.charCodeAt(i) === 10 /* newline char code */) {\n            linesCount++;\n            lastNewLinePos = i;\n        }\n    }\n    pos.offset += numberOfCharacters;\n    pos.line += linesCount;\n    pos.column =\n        lastNewLinePos === -1\n            ? pos.column + numberOfCharacters\n            : numberOfCharacters - lastNewLinePos;\n    return pos;\n}\nfunction assert(condition, msg) {\n    /* istanbul ignore if */\n    if (!condition) {\n        throw new Error(msg || `unexpected compiler condition`);\n    }\n}\nfunction findDir(node, name, allowEmpty = false) {\n    for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 7 /* NodeTypes.DIRECTIVE */ &&\n            (allowEmpty || p.exp) &&\n            (isString(name) ? p.name === name : name.test(p.name))) {\n            return p;\n        }\n    }\n}\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\n    for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\n            if (dynamicOnly)\n                continue;\n            if (p.name === name && (p.value || allowEmpty)) {\n                return p;\n            }\n        }\n        else if (p.name === 'bind' &&\n            (p.exp || allowEmpty) &&\n            isStaticArgOf(p.arg, name)) {\n            return p;\n        }\n    }\n}\nfunction isStaticArgOf(arg, name) {\n    return !!(arg && isStaticExp(arg) && arg.content === name);\n}\nfunction hasDynamicKeyVBind(node) {\n    return node.props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ &&\n        p.name === 'bind' &&\n        (!p.arg || // v-bind=\"obj\"\n            p.arg.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */ || // v-bind:[_ctx.foo]\n            !p.arg.isStatic) // v-bind:[foo]\n    );\n}\nfunction isText$1(node) {\n    return node.type === 5 /* NodeTypes.INTERPOLATION */ || node.type === 2 /* NodeTypes.TEXT */;\n}\nfunction isVSlot(p) {\n    return p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'slot';\n}\nfunction isTemplateNode(node) {\n    return (node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 3 /* ElementTypes.TEMPLATE */);\n}\nfunction isSlotOutlet(node) {\n    return node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 2 /* ElementTypes.SLOT */;\n}\nfunction getVNodeHelper(ssr, isComponent) {\n    return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\n}\nfunction getVNodeBlockHelper(ssr, isComponent) {\n    return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\n}\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\nfunction getUnnormalizedProps(props, callPath = []) {\n    if (props &&\n        !isString(props) &&\n        props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\n        const callee = props.callee;\n        if (!isString(callee) && propsHelperSet.has(callee)) {\n            return getUnnormalizedProps(props.arguments[0], callPath.concat(props));\n        }\n    }\n    return [props, callPath];\n}\nfunction injectProp(node, prop, context) {\n    let propsWithInjection;\n    /**\n     * 1. mergeProps(...)\n     * 2. toHandlers(...)\n     * 3. normalizeProps(...)\n     * 4. normalizeProps(guardReactiveProps(...))\n     *\n     * we need to get the real props before normalization\n     */\n    let props = node.type === 13 /* NodeTypes.VNODE_CALL */ ? node.props : node.arguments[2];\n    let callPath = [];\n    let parentCall;\n    if (props &&\n        !isString(props) &&\n        props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\n        const ret = getUnnormalizedProps(props);\n        props = ret[0];\n        callPath = ret[1];\n        parentCall = callPath[callPath.length - 1];\n    }\n    if (props == null || isString(props)) {\n        propsWithInjection = createObjectExpression([prop]);\n    }\n    else if (props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\n        // merged props... add ours\n        // only inject key to object literal if it's the first argument so that\n        // if doesn't override user provided keys\n        const first = props.arguments[0];\n        if (!isString(first) && first.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\n            // #6631\n            if (!hasProp(prop, first)) {\n                first.properties.unshift(prop);\n            }\n        }\n        else {\n            if (props.callee === TO_HANDLERS) {\n                // #2366\n                propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n                    createObjectExpression([prop]),\n                    props\n                ]);\n            }\n            else {\n                props.arguments.unshift(createObjectExpression([prop]));\n            }\n        }\n        !propsWithInjection && (propsWithInjection = props);\n    }\n    else if (props.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\n        if (!hasProp(prop, props)) {\n            props.properties.unshift(prop);\n        }\n        propsWithInjection = props;\n    }\n    else {\n        // single v-bind with expression, return a merged replacement\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n            createObjectExpression([prop]),\n            props\n        ]);\n        // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\n        // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\n        // the `guardReactiveProps` will no longer be needed\n        if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\n            parentCall = callPath[callPath.length - 2];\n        }\n    }\n    if (node.type === 13 /* NodeTypes.VNODE_CALL */) {\n        if (parentCall) {\n            parentCall.arguments[0] = propsWithInjection;\n        }\n        else {\n            node.props = propsWithInjection;\n        }\n    }\n    else {\n        if (parentCall) {\n            parentCall.arguments[0] = propsWithInjection;\n        }\n        else {\n            node.arguments[2] = propsWithInjection;\n        }\n    }\n}\n// check existing key to avoid overriding user provided keys\nfunction hasProp(prop, props) {\n    let result = false;\n    if (prop.key.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n        const propKeyName = prop.key.content;\n        result = props.properties.some(p => p.key.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\n            p.key.content === propKeyName);\n    }\n    return result;\n}\nfunction toValidAssetId(name, type) {\n    // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\n    return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\n        return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString();\n    })}`;\n}\n// Check if a node contains expressions that reference current context scope ids\nfunction hasScopeRef(node, ids) {\n    if (!node || Object.keys(ids).length === 0) {\n        return false;\n    }\n    switch (node.type) {\n        case 1 /* NodeTypes.ELEMENT */:\n            for (let i = 0; i < node.props.length; i++) {\n                const p = node.props[i];\n                if (p.type === 7 /* NodeTypes.DIRECTIVE */ &&\n                    (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\n                    return true;\n                }\n            }\n            return node.children.some(c => hasScopeRef(c, ids));\n        case 11 /* NodeTypes.FOR */:\n            if (hasScopeRef(node.source, ids)) {\n                return true;\n            }\n            return node.children.some(c => hasScopeRef(c, ids));\n        case 9 /* NodeTypes.IF */:\n            return node.branches.some(b => hasScopeRef(b, ids));\n        case 10 /* NodeTypes.IF_BRANCH */:\n            if (hasScopeRef(node.condition, ids)) {\n                return true;\n            }\n            return node.children.some(c => hasScopeRef(c, ids));\n        case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\n            return (!node.isStatic &&\n                isSimpleIdentifier(node.content) &&\n                !!ids[node.content]);\n        case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\n            return node.children.some(c => isObject(c) && hasScopeRef(c, ids));\n        case 5 /* NodeTypes.INTERPOLATION */:\n        case 12 /* NodeTypes.TEXT_CALL */:\n            return hasScopeRef(node.content, ids);\n        case 2 /* NodeTypes.TEXT */:\n        case 3 /* NodeTypes.COMMENT */:\n            return false;\n        default:\n            if ((process.env.NODE_ENV !== 'production')) ;\n            return false;\n    }\n}\nfunction getMemoedVNodeCall(node) {\n    if (node.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */ && node.callee === WITH_MEMO) {\n        return node.arguments[1].returns;\n    }\n    else {\n        return node;\n    }\n}\nfunction makeBlock(node, { helper, removeHelper, inSSR }) {\n    if (!node.isBlock) {\n        node.isBlock = true;\n        removeHelper(getVNodeHelper(inSSR, node.isComponent));\n        helper(OPEN_BLOCK);\n        helper(getVNodeBlockHelper(inSSR, node.isComponent));\n    }\n}\n\nconst deprecationData = {\n    [\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */]: {\n        message: `Platform-native elements with \"is\" prop will no longer be ` +\n            `treated as components in Vue 3 unless the \"is\" value is explicitly ` +\n            `prefixed with \"vue:\".`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\n    },\n    [\"COMPILER_V_BIND_SYNC\" /* CompilerDeprecationTypes.COMPILER_V_BIND_SYNC */]: {\n        message: key => `.sync modifier for v-bind has been removed. Use v-model with ` +\n            `argument instead. \\`v-bind:${key}.sync\\` should be changed to ` +\n            `\\`v-model:${key}\\`.`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\n    },\n    [\"COMPILER_V_BIND_PROP\" /* CompilerDeprecationTypes.COMPILER_V_BIND_PROP */]: {\n        message: `.prop modifier for v-bind has been removed and no longer necessary. ` +\n            `Vue 3 will automatically set a binding as DOM property when appropriate.`\n    },\n    [\"COMPILER_V_BIND_OBJECT_ORDER\" /* CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER */]: {\n        message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript ` +\n            `object spread: it will now overwrite an existing non-mergeable attribute ` +\n            `that appears before v-bind in the case of conflict. ` +\n            `To retain 2.x behavior, move v-bind to make it the first attribute. ` +\n            `You can also suppress this warning if the usage is intended.`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\n    },\n    [\"COMPILER_V_ON_NATIVE\" /* CompilerDeprecationTypes.COMPILER_V_ON_NATIVE */]: {\n        message: `.native modifier for v-on has been removed as is no longer necessary.`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\n    },\n    [\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE */]: {\n        message: `v-if / v-for precedence when used on the same element has changed ` +\n            `in Vue 3: v-if now takes higher precedence and will no longer have ` +\n            `access to v-for scope variables. It is best to avoid the ambiguity ` +\n            `with <template> tags or use a computed property that filters v-for ` +\n            `data source.`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\n    },\n    [\"COMPILER_NATIVE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE */]: {\n        message: `<template> with no special directives will render as a native template ` +\n            `element instead of its inner content in Vue 3.`\n    },\n    [\"COMPILER_INLINE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE */]: {\n        message: `\"inline-template\" has been removed in Vue 3.`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\n    },\n    [\"COMPILER_FILTER\" /* CompilerDeprecationTypes.COMPILER_FILTERS */]: {\n        message: `filters have been removed in Vue 3. ` +\n            `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` +\n            `Use method calls or computed properties instead.`,\n        link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\n    }\n};\nfunction getCompatValue(key, context) {\n    const config = context.options\n        ? context.options.compatConfig\n        : context.compatConfig;\n    const value = config && config[key];\n    if (key === 'MODE') {\n        return value || 3; // compiler defaults to v3 behavior\n    }\n    else {\n        return value;\n    }\n}\nfunction isCompatEnabled(key, context) {\n    const mode = getCompatValue('MODE', context);\n    const value = getCompatValue(key, context);\n    // in v3 mode, only enable if explicitly set to true\n    // otherwise enable for any non-false value\n    return mode === 3 ? value === true : value !== false;\n}\nfunction checkCompatEnabled(key, context, loc, ...args) {\n    const enabled = isCompatEnabled(key, context);\n    if ((process.env.NODE_ENV !== 'production') && enabled) {\n        warnDeprecation(key, context, loc, ...args);\n    }\n    return enabled;\n}\nfunction warnDeprecation(key, context, loc, ...args) {\n    const val = getCompatValue(key, context);\n    if (val === 'suppress-warning') {\n        return;\n    }\n    const { message, link } = deprecationData[key];\n    const msg = `(deprecation ${key}) ${typeof message === 'function' ? message(...args) : message}${link ? `\\n  Details: ${link}` : ``}`;\n    const err = new SyntaxError(msg);\n    err.code = key;\n    if (loc)\n        err.loc = loc;\n    context.onWarn(err);\n}\n\n// The default decoder only provides escapes for characters reserved as part of\n// the template syntax, and is only used if the custom renderer did not provide\n// a platform-specific decoder.\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\nconst decodeMap = {\n    gt: '>',\n    lt: '<',\n    amp: '&',\n    apos: \"'\",\n    quot: '\"'\n};\nconst defaultParserOptions = {\n    delimiters: [`{{`, `}}`],\n    getNamespace: () => 0 /* Namespaces.HTML */,\n    getTextMode: () => 0 /* TextModes.DATA */,\n    isVoidTag: NO,\n    isPreTag: NO,\n    isCustomElement: NO,\n    decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\n    onError: defaultOnError,\n    onWarn: defaultOnWarn,\n    comments: (process.env.NODE_ENV !== 'production')\n};\nfunction baseParse(content, options = {}) {\n    const context = createParserContext(content, options);\n    const start = getCursor(context);\n    return createRoot(parseChildren(context, 0 /* TextModes.DATA */, []), getSelection(context, start));\n}\nfunction createParserContext(content, rawOptions) {\n    const options = extend({}, defaultParserOptions);\n    let key;\n    for (key in rawOptions) {\n        // @ts-ignore\n        options[key] =\n            rawOptions[key] === undefined\n                ? defaultParserOptions[key]\n                : rawOptions[key];\n    }\n    return {\n        options,\n        column: 1,\n        line: 1,\n        offset: 0,\n        originalSource: content,\n        source: content,\n        inPre: false,\n        inVPre: false,\n        onWarn: options.onWarn\n    };\n}\nfunction parseChildren(context, mode, ancestors) {\n    const parent = last(ancestors);\n    const ns = parent ? parent.ns : 0 /* Namespaces.HTML */;\n    const nodes = [];\n    while (!isEnd(context, mode, ancestors)) {\n        const s = context.source;\n        let node = undefined;\n        if (mode === 0 /* TextModes.DATA */ || mode === 1 /* TextModes.RCDATA */) {\n            if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\n                // '{{'\n                node = parseInterpolation(context, mode);\n            }\n            else if (mode === 0 /* TextModes.DATA */ && s[0] === '<') {\n                // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\n                if (s.length === 1) {\n                    emitError(context, 5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */, 1);\n                }\n                else if (s[1] === '!') {\n                    // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\n                    if (startsWith(s, '<!--')) {\n                        node = parseComment(context);\n                    }\n                    else if (startsWith(s, '<!DOCTYPE')) {\n                        // Ignore DOCTYPE by a limitation.\n                        node = parseBogusComment(context);\n                    }\n                    else if (startsWith(s, '<![CDATA[')) {\n                        if (ns !== 0 /* Namespaces.HTML */) {\n                            node = parseCDATA(context, ancestors);\n                        }\n                        else {\n                            emitError(context, 1 /* ErrorCodes.CDATA_IN_HTML_CONTENT */);\n                            node = parseBogusComment(context);\n                        }\n                    }\n                    else {\n                        emitError(context, 11 /* ErrorCodes.INCORRECTLY_OPENED_COMMENT */);\n                        node = parseBogusComment(context);\n                    }\n                }\n                else if (s[1] === '/') {\n                    // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\n                    if (s.length === 2) {\n                        emitError(context, 5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */, 2);\n                    }\n                    else if (s[2] === '>') {\n                        emitError(context, 14 /* ErrorCodes.MISSING_END_TAG_NAME */, 2);\n                        advanceBy(context, 3);\n                        continue;\n                    }\n                    else if (/[a-z]/i.test(s[2])) {\n                        emitError(context, 23 /* ErrorCodes.X_INVALID_END_TAG */);\n                        parseTag(context, 1 /* TagType.End */, parent);\n                        continue;\n                    }\n                    else {\n                        emitError(context, 12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 2);\n                        node = parseBogusComment(context);\n                    }\n                }\n                else if (/[a-z]/i.test(s[1])) {\n                    node = parseElement(context, ancestors);\n                    // 2.x <template> with no directive compat\n                    if (isCompatEnabled(\"COMPILER_NATIVE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE */, context) &&\n                        node &&\n                        node.tag === 'template' &&\n                        !node.props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ &&\n                            isSpecialTemplateDirective(p.name))) {\n                        (process.env.NODE_ENV !== 'production') &&\n                            warnDeprecation(\"COMPILER_NATIVE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE */, context, node.loc);\n                        node = node.children;\n                    }\n                }\n                else if (s[1] === '?') {\n                    emitError(context, 21 /* ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */, 1);\n                    node = parseBogusComment(context);\n                }\n                else {\n                    emitError(context, 12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 1);\n                }\n            }\n        }\n        if (!node) {\n            node = parseText(context, mode);\n        }\n        if (isArray(node)) {\n            for (let i = 0; i < node.length; i++) {\n                pushNode(nodes, node[i]);\n            }\n        }\n        else {\n            pushNode(nodes, node);\n        }\n    }\n    // Whitespace handling strategy like v2\n    let removedWhitespace = false;\n    if (mode !== 2 /* TextModes.RAWTEXT */ && mode !== 1 /* TextModes.RCDATA */) {\n        const shouldCondense = context.options.whitespace !== 'preserve';\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (node.type === 2 /* NodeTypes.TEXT */) {\n                if (!context.inPre) {\n                    if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\n                        const prev = nodes[i - 1];\n                        const next = nodes[i + 1];\n                        // Remove if:\n                        // - the whitespace is the first or last node, or:\n                        // - (condense mode) the whitespace is between twos comments, or:\n                        // - (condense mode) the whitespace is between comment and element, or:\n                        // - (condense mode) the whitespace is between two elements AND contains newline\n                        if (!prev ||\n                            !next ||\n                            (shouldCondense &&\n                                ((prev.type === 3 /* NodeTypes.COMMENT */ &&\n                                    next.type === 3 /* NodeTypes.COMMENT */) ||\n                                    (prev.type === 3 /* NodeTypes.COMMENT */ &&\n                                        next.type === 1 /* NodeTypes.ELEMENT */) ||\n                                    (prev.type === 1 /* NodeTypes.ELEMENT */ &&\n                                        next.type === 3 /* NodeTypes.COMMENT */) ||\n                                    (prev.type === 1 /* NodeTypes.ELEMENT */ &&\n                                        next.type === 1 /* NodeTypes.ELEMENT */ &&\n                                        /[\\r\\n]/.test(node.content))))) {\n                            removedWhitespace = true;\n                            nodes[i] = null;\n                        }\n                        else {\n                            // Otherwise, the whitespace is condensed into a single space\n                            node.content = ' ';\n                        }\n                    }\n                    else if (shouldCondense) {\n                        // in condense mode, consecutive whitespaces in text are condensed\n                        // down to a single space.\n                        node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\n                    }\n                }\n                else {\n                    // #6410 normalize windows newlines in <pre>:\n                    // in SSR, browsers normalize server-rendered \\r\\n into a single \\n\n                    // in the DOM\n                    node.content = node.content.replace(/\\r\\n/g, '\\n');\n                }\n            }\n            // Remove comment nodes if desired by configuration.\n            else if (node.type === 3 /* NodeTypes.COMMENT */ && !context.options.comments) {\n                removedWhitespace = true;\n                nodes[i] = null;\n            }\n        }\n        if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\n            // remove leading newline per html spec\n            // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\n            const first = nodes[0];\n            if (first && first.type === 2 /* NodeTypes.TEXT */) {\n                first.content = first.content.replace(/^\\r?\\n/, '');\n            }\n        }\n    }\n    return removedWhitespace ? nodes.filter(Boolean) : nodes;\n}\nfunction pushNode(nodes, node) {\n    if (node.type === 2 /* NodeTypes.TEXT */) {\n        const prev = last(nodes);\n        // Merge if both this and the previous node are text and those are\n        // consecutive. This happens for cases like \"a < b\".\n        if (prev &&\n            prev.type === 2 /* NodeTypes.TEXT */ &&\n            prev.loc.end.offset === node.loc.start.offset) {\n            prev.content += node.content;\n            prev.loc.end = node.loc.end;\n            prev.loc.source += node.loc.source;\n            return;\n        }\n    }\n    nodes.push(node);\n}\nfunction parseCDATA(context, ancestors) {\n    advanceBy(context, 9);\n    const nodes = parseChildren(context, 3 /* TextModes.CDATA */, ancestors);\n    if (context.source.length === 0) {\n        emitError(context, 6 /* ErrorCodes.EOF_IN_CDATA */);\n    }\n    else {\n        advanceBy(context, 3);\n    }\n    return nodes;\n}\nfunction parseComment(context) {\n    const start = getCursor(context);\n    let content;\n    // Regular comment.\n    const match = /--(\\!)?>/.exec(context.source);\n    if (!match) {\n        content = context.source.slice(4);\n        advanceBy(context, context.source.length);\n        emitError(context, 7 /* ErrorCodes.EOF_IN_COMMENT */);\n    }\n    else {\n        if (match.index <= 3) {\n            emitError(context, 0 /* ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT */);\n        }\n        if (match[1]) {\n            emitError(context, 10 /* ErrorCodes.INCORRECTLY_CLOSED_COMMENT */);\n        }\n        content = context.source.slice(4, match.index);\n        // Advancing with reporting nested comments.\n        const s = context.source.slice(0, match.index);\n        let prevIndex = 1, nestedIndex = 0;\n        while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\n            advanceBy(context, nestedIndex - prevIndex + 1);\n            if (nestedIndex + 4 < s.length) {\n                emitError(context, 16 /* ErrorCodes.NESTED_COMMENT */);\n            }\n            prevIndex = nestedIndex + 1;\n        }\n        advanceBy(context, match.index + match[0].length - prevIndex + 1);\n    }\n    return {\n        type: 3 /* NodeTypes.COMMENT */,\n        content,\n        loc: getSelection(context, start)\n    };\n}\nfunction parseBogusComment(context) {\n    const start = getCursor(context);\n    const contentStart = context.source[1] === '?' ? 1 : 2;\n    let content;\n    const closeIndex = context.source.indexOf('>');\n    if (closeIndex === -1) {\n        content = context.source.slice(contentStart);\n        advanceBy(context, context.source.length);\n    }\n    else {\n        content = context.source.slice(contentStart, closeIndex);\n        advanceBy(context, closeIndex + 1);\n    }\n    return {\n        type: 3 /* NodeTypes.COMMENT */,\n        content,\n        loc: getSelection(context, start)\n    };\n}\nfunction parseElement(context, ancestors) {\n    // Start tag.\n    const wasInPre = context.inPre;\n    const wasInVPre = context.inVPre;\n    const parent = last(ancestors);\n    const element = parseTag(context, 0 /* TagType.Start */, parent);\n    const isPreBoundary = context.inPre && !wasInPre;\n    const isVPreBoundary = context.inVPre && !wasInVPre;\n    if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\n        // #4030 self-closing <pre> tag\n        if (isPreBoundary) {\n            context.inPre = false;\n        }\n        if (isVPreBoundary) {\n            context.inVPre = false;\n        }\n        return element;\n    }\n    // Children.\n    ancestors.push(element);\n    const mode = context.options.getTextMode(element, parent);\n    const children = parseChildren(context, mode, ancestors);\n    ancestors.pop();\n    // 2.x inline-template compat\n    {\n        const inlineTemplateProp = element.props.find(p => p.type === 6 /* NodeTypes.ATTRIBUTE */ && p.name === 'inline-template');\n        if (inlineTemplateProp &&\n            checkCompatEnabled(\"COMPILER_INLINE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE */, context, inlineTemplateProp.loc)) {\n            const loc = getSelection(context, element.loc.end);\n            inlineTemplateProp.value = {\n                type: 2 /* NodeTypes.TEXT */,\n                content: loc.source,\n                loc\n            };\n        }\n    }\n    element.children = children;\n    // End tag.\n    if (startsWithEndTagOpen(context.source, element.tag)) {\n        parseTag(context, 1 /* TagType.End */, parent);\n    }\n    else {\n        emitError(context, 24 /* ErrorCodes.X_MISSING_END_TAG */, 0, element.loc.start);\n        if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\n            const first = children[0];\n            if (first && startsWith(first.loc.source, '<!--')) {\n                emitError(context, 8 /* ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */);\n            }\n        }\n    }\n    element.loc = getSelection(context, element.loc.start);\n    if (isPreBoundary) {\n        context.inPre = false;\n    }\n    if (isVPreBoundary) {\n        context.inVPre = false;\n    }\n    return element;\n}\nconst isSpecialTemplateDirective = /*#__PURE__*/ makeMap(`if,else,else-if,for,slot`);\nfunction parseTag(context, type, parent) {\n    // Tag open.\n    const start = getCursor(context);\n    const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\n    const tag = match[1];\n    const ns = context.options.getNamespace(tag, parent);\n    advanceBy(context, match[0].length);\n    advanceSpaces(context);\n    // save current state in case we need to re-parse attributes with v-pre\n    const cursor = getCursor(context);\n    const currentSource = context.source;\n    // check <pre> tag\n    if (context.options.isPreTag(tag)) {\n        context.inPre = true;\n    }\n    // Attributes.\n    let props = parseAttributes(context, type);\n    // check v-pre\n    if (type === 0 /* TagType.Start */ &&\n        !context.inVPre &&\n        props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'pre')) {\n        context.inVPre = true;\n        // reset context\n        extend(context, cursor);\n        context.source = currentSource;\n        // re-parse attrs and filter out v-pre itself\n        props = parseAttributes(context, type).filter(p => p.name !== 'v-pre');\n    }\n    // Tag close.\n    let isSelfClosing = false;\n    if (context.source.length === 0) {\n        emitError(context, 9 /* ErrorCodes.EOF_IN_TAG */);\n    }\n    else {\n        isSelfClosing = startsWith(context.source, '/>');\n        if (type === 1 /* TagType.End */ && isSelfClosing) {\n            emitError(context, 4 /* ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS */);\n        }\n        advanceBy(context, isSelfClosing ? 2 : 1);\n    }\n    if (type === 1 /* TagType.End */) {\n        return;\n    }\n    // 2.x deprecation checks\n    if ((process.env.NODE_ENV !== 'production') &&\n        isCompatEnabled(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE */, context)) {\n        let hasIf = false;\n        let hasFor = false;\n        for (let i = 0; i < props.length; i++) {\n            const p = props[i];\n            if (p.type === 7 /* NodeTypes.DIRECTIVE */) {\n                if (p.name === 'if') {\n                    hasIf = true;\n                }\n                else if (p.name === 'for') {\n                    hasFor = true;\n                }\n            }\n            if (hasIf && hasFor) {\n                warnDeprecation(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE */, context, getSelection(context, start));\n                break;\n            }\n        }\n    }\n    let tagType = 0 /* ElementTypes.ELEMENT */;\n    if (!context.inVPre) {\n        if (tag === 'slot') {\n            tagType = 2 /* ElementTypes.SLOT */;\n        }\n        else if (tag === 'template') {\n            if (props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ && isSpecialTemplateDirective(p.name))) {\n                tagType = 3 /* ElementTypes.TEMPLATE */;\n            }\n        }\n        else if (isComponent(tag, props, context)) {\n            tagType = 1 /* ElementTypes.COMPONENT */;\n        }\n    }\n    return {\n        type: 1 /* NodeTypes.ELEMENT */,\n        ns,\n        tag,\n        tagType,\n        props,\n        isSelfClosing,\n        children: [],\n        loc: getSelection(context, start),\n        codegenNode: undefined // to be created during transform phase\n    };\n}\nfunction isComponent(tag, props, context) {\n    const options = context.options;\n    if (options.isCustomElement(tag)) {\n        return false;\n    }\n    if (tag === 'component' ||\n        /^[A-Z]/.test(tag) ||\n        isCoreComponent(tag) ||\n        (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\n        (options.isNativeTag && !options.isNativeTag(tag))) {\n        return true;\n    }\n    // at this point the tag should be a native tag, but check for potential \"is\"\n    // casting\n    for (let i = 0; i < props.length; i++) {\n        const p = props[i];\n        if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\n            if (p.name === 'is' && p.value) {\n                if (p.value.content.startsWith('vue:')) {\n                    return true;\n                }\n                else if (checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\n                    return true;\n                }\n            }\n        }\n        else {\n            // directive\n            // v-is (TODO Deprecate)\n            if (p.name === 'is') {\n                return true;\n            }\n            else if (\n            // :is on plain element - only treat as component in compat mode\n            p.name === 'bind' &&\n                isStaticArgOf(p.arg, 'is') &&\n                true &&\n                checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\n                return true;\n            }\n        }\n    }\n}\nfunction parseAttributes(context, type) {\n    const props = [];\n    const attributeNames = new Set();\n    while (context.source.length > 0 &&\n        !startsWith(context.source, '>') &&\n        !startsWith(context.source, '/>')) {\n        if (startsWith(context.source, '/')) {\n            emitError(context, 22 /* ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG */);\n            advanceBy(context, 1);\n            advanceSpaces(context);\n            continue;\n        }\n        if (type === 1 /* TagType.End */) {\n            emitError(context, 3 /* ErrorCodes.END_TAG_WITH_ATTRIBUTES */);\n        }\n        const attr = parseAttribute(context, attributeNames);\n        // Trim whitespace between class\n        // https://github.com/vuejs/core/issues/4251\n        if (attr.type === 6 /* NodeTypes.ATTRIBUTE */ &&\n            attr.value &&\n            attr.name === 'class') {\n            attr.value.content = attr.value.content.replace(/\\s+/g, ' ').trim();\n        }\n        if (type === 0 /* TagType.Start */) {\n            props.push(attr);\n        }\n        if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\n            emitError(context, 15 /* ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */);\n        }\n        advanceSpaces(context);\n    }\n    return props;\n}\nfunction parseAttribute(context, nameSet) {\n    // Name.\n    const start = getCursor(context);\n    const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\n    const name = match[0];\n    if (nameSet.has(name)) {\n        emitError(context, 2 /* ErrorCodes.DUPLICATE_ATTRIBUTE */);\n    }\n    nameSet.add(name);\n    if (name[0] === '=') {\n        emitError(context, 19 /* ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */);\n    }\n    {\n        const pattern = /[\"'<]/g;\n        let m;\n        while ((m = pattern.exec(name))) {\n            emitError(context, 17 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */, m.index);\n        }\n    }\n    advanceBy(context, name.length);\n    // Value\n    let value = undefined;\n    if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\n        advanceSpaces(context);\n        advanceBy(context, 1);\n        advanceSpaces(context);\n        value = parseAttributeValue(context);\n        if (!value) {\n            emitError(context, 13 /* ErrorCodes.MISSING_ATTRIBUTE_VALUE */);\n        }\n    }\n    const loc = getSelection(context, start);\n    if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\n        const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);\n        let isPropShorthand = startsWith(name, '.');\n        let dirName = match[1] ||\n            (isPropShorthand || startsWith(name, ':')\n                ? 'bind'\n                : startsWith(name, '@')\n                    ? 'on'\n                    : 'slot');\n        let arg;\n        if (match[2]) {\n            const isSlot = dirName === 'slot';\n            const startOffset = name.lastIndexOf(match[2]);\n            const loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match[2].length + ((isSlot && match[3]) || '').length));\n            let content = match[2];\n            let isStatic = true;\n            if (content.startsWith('[')) {\n                isStatic = false;\n                if (!content.endsWith(']')) {\n                    emitError(context, 27 /* ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */);\n                    content = content.slice(1);\n                }\n                else {\n                    content = content.slice(1, content.length - 1);\n                }\n            }\n            else if (isSlot) {\n                // #1241 special case for v-slot: vuetify relies extensively on slot\n                // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\n                // supports such usage so we are keeping it consistent with 2.x.\n                content += match[3] || '';\n            }\n            arg = {\n                type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\n                content,\n                isStatic,\n                constType: isStatic\n                    ? 3 /* ConstantTypes.CAN_STRINGIFY */\n                    : 0 /* ConstantTypes.NOT_CONSTANT */,\n                loc\n            };\n        }\n        if (value && value.isQuoted) {\n            const valueLoc = value.loc;\n            valueLoc.start.offset++;\n            valueLoc.start.column++;\n            valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\n            valueLoc.source = valueLoc.source.slice(1, -1);\n        }\n        const modifiers = match[3] ? match[3].slice(1).split('.') : [];\n        if (isPropShorthand)\n            modifiers.push('prop');\n        // 2.x compat v-bind:foo.sync -> v-model:foo\n        if (dirName === 'bind' && arg) {\n            if (modifiers.includes('sync') &&\n                checkCompatEnabled(\"COMPILER_V_BIND_SYNC\" /* CompilerDeprecationTypes.COMPILER_V_BIND_SYNC */, context, loc, arg.loc.source)) {\n                dirName = 'model';\n                modifiers.splice(modifiers.indexOf('sync'), 1);\n            }\n            if ((process.env.NODE_ENV !== 'production') && modifiers.includes('prop')) {\n                checkCompatEnabled(\"COMPILER_V_BIND_PROP\" /* CompilerDeprecationTypes.COMPILER_V_BIND_PROP */, context, loc);\n            }\n        }\n        return {\n            type: 7 /* NodeTypes.DIRECTIVE */,\n            name: dirName,\n            exp: value && {\n                type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\n                content: value.content,\n                isStatic: false,\n                // Treat as non-constant by default. This can be potentially set to\n                // other values by `transformExpression` to make it eligible for hoisting.\n                constType: 0 /* ConstantTypes.NOT_CONSTANT */,\n                loc: value.loc\n            },\n            arg,\n            modifiers,\n            loc\n        };\n    }\n    // missing directive name or illegal directive name\n    if (!context.inVPre && startsWith(name, 'v-')) {\n        emitError(context, 26 /* ErrorCodes.X_MISSING_DIRECTIVE_NAME */);\n    }\n    return {\n        type: 6 /* NodeTypes.ATTRIBUTE */,\n        name,\n        value: value && {\n            type: 2 /* NodeTypes.TEXT */,\n            content: value.content,\n            loc: value.loc\n        },\n        loc\n    };\n}\nfunction parseAttributeValue(context) {\n    const start = getCursor(context);\n    let content;\n    const quote = context.source[0];\n    const isQuoted = quote === `\"` || quote === `'`;\n    if (isQuoted) {\n        // Quoted value.\n        advanceBy(context, 1);\n        const endIndex = context.source.indexOf(quote);\n        if (endIndex === -1) {\n            content = parseTextData(context, context.source.length, 4 /* TextModes.ATTRIBUTE_VALUE */);\n        }\n        else {\n            content = parseTextData(context, endIndex, 4 /* TextModes.ATTRIBUTE_VALUE */);\n            advanceBy(context, 1);\n        }\n    }\n    else {\n        // Unquoted\n        const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\n        if (!match) {\n            return undefined;\n        }\n        const unexpectedChars = /[\"'<=`]/g;\n        let m;\n        while ((m = unexpectedChars.exec(match[0]))) {\n            emitError(context, 18 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */, m.index);\n        }\n        content = parseTextData(context, match[0].length, 4 /* TextModes.ATTRIBUTE_VALUE */);\n    }\n    return { content, isQuoted, loc: getSelection(context, start) };\n}\nfunction parseInterpolation(context, mode) {\n    const [open, close] = context.options.delimiters;\n    const closeIndex = context.source.indexOf(close, open.length);\n    if (closeIndex === -1) {\n        emitError(context, 25 /* ErrorCodes.X_MISSING_INTERPOLATION_END */);\n        return undefined;\n    }\n    const start = getCursor(context);\n    advanceBy(context, open.length);\n    const innerStart = getCursor(context);\n    const innerEnd = getCursor(context);\n    const rawContentLength = closeIndex - open.length;\n    const rawContent = context.source.slice(0, rawContentLength);\n    const preTrimContent = parseTextData(context, rawContentLength, mode);\n    const content = preTrimContent.trim();\n    const startOffset = preTrimContent.indexOf(content);\n    if (startOffset > 0) {\n        advancePositionWithMutation(innerStart, rawContent, startOffset);\n    }\n    const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\n    advancePositionWithMutation(innerEnd, rawContent, endOffset);\n    advanceBy(context, close.length);\n    return {\n        type: 5 /* NodeTypes.INTERPOLATION */,\n        content: {\n            type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\n            isStatic: false,\n            // Set `isConstant` to false by default and will decide in transformExpression\n            constType: 0 /* ConstantTypes.NOT_CONSTANT */,\n            content,\n            loc: getSelection(context, innerStart, innerEnd)\n        },\n        loc: getSelection(context, start)\n    };\n}\nfunction parseText(context, mode) {\n    const endTokens = mode === 3 /* TextModes.CDATA */ ? [']]>'] : ['<', context.options.delimiters[0]];\n    let endIndex = context.source.length;\n    for (let i = 0; i < endTokens.length; i++) {\n        const index = context.source.indexOf(endTokens[i], 1);\n        if (index !== -1 && endIndex > index) {\n            endIndex = index;\n        }\n    }\n    const start = getCursor(context);\n    const content = parseTextData(context, endIndex, mode);\n    return {\n        type: 2 /* NodeTypes.TEXT */,\n        content,\n        loc: getSelection(context, start)\n    };\n}\n/**\n * Get text data with a given length from the current location.\n * This translates HTML entities in the text data.\n */\nfunction parseTextData(context, length, mode) {\n    const rawText = context.source.slice(0, length);\n    advanceBy(context, length);\n    if (mode === 2 /* TextModes.RAWTEXT */ ||\n        mode === 3 /* TextModes.CDATA */ ||\n        !rawText.includes('&')) {\n        return rawText;\n    }\n    else {\n        // DATA or RCDATA containing \"&\"\". Entity decoding required.\n        return context.options.decodeEntities(rawText, mode === 4 /* TextModes.ATTRIBUTE_VALUE */);\n    }\n}\nfunction getCursor(context) {\n    const { column, line, offset } = context;\n    return { column, line, offset };\n}\nfunction getSelection(context, start, end) {\n    end = end || getCursor(context);\n    return {\n        start,\n        end,\n        source: context.originalSource.slice(start.offset, end.offset)\n    };\n}\nfunction last(xs) {\n    return xs[xs.length - 1];\n}\nfunction startsWith(source, searchString) {\n    return source.startsWith(searchString);\n}\nfunction advanceBy(context, numberOfCharacters) {\n    const { source } = context;\n    advancePositionWithMutation(context, source, numberOfCharacters);\n    context.source = source.slice(numberOfCharacters);\n}\nfunction advanceSpaces(context) {\n    const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\n    if (match) {\n        advanceBy(context, match[0].length);\n    }\n}\nfunction getNewPosition(context, start, numberOfCharacters) {\n    return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\n}\nfunction emitError(context, code, offset, loc = getCursor(context)) {\n    if (offset) {\n        loc.offset += offset;\n        loc.column += offset;\n    }\n    context.options.onError(createCompilerError(code, {\n        start: loc,\n        end: loc,\n        source: ''\n    }));\n}\nfunction isEnd(context, mode, ancestors) {\n    const s = context.source;\n    switch (mode) {\n        case 0 /* TextModes.DATA */:\n            if (startsWith(s, '</')) {\n                // TODO: probably bad performance\n                for (let i = ancestors.length - 1; i >= 0; --i) {\n                    if (startsWithEndTagOpen(s, ancestors[i].tag)) {\n                        return true;\n                    }\n                }\n            }\n            break;\n        case 1 /* TextModes.RCDATA */:\n        case 2 /* TextModes.RAWTEXT */: {\n            const parent = last(ancestors);\n            if (parent && startsWithEndTagOpen(s, parent.tag)) {\n                return true;\n            }\n            break;\n        }\n        case 3 /* TextModes.CDATA */:\n            if (startsWith(s, ']]>')) {\n                return true;\n            }\n            break;\n    }\n    return !s;\n}\nfunction startsWithEndTagOpen(source, tag) {\n    return (startsWith(source, '</') &&\n        source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() &&\n        /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>'));\n}\n\nfunction hoistStatic(root, context) {\n    walk(root, context, \n    // Root node is unfortunately non-hoistable due to potential parent\n    // fallthrough attributes.\n    isSingleElementRoot(root, root.children[0]));\n}\nfunction isSingleElementRoot(root, child) {\n    const { children } = root;\n    return (children.length === 1 &&\n        child.type === 1 /* NodeTypes.ELEMENT */ &&\n        !isSlotOutlet(child));\n}\nfunction walk(node, context, doNotHoistNode = false) {\n    const { children } = node;\n    const originalCount = children.length;\n    let hoistedCount = 0;\n    for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        // only plain elements & text calls are eligible for hoisting.\n        if (child.type === 1 /* NodeTypes.ELEMENT */ &&\n            child.tagType === 0 /* ElementTypes.ELEMENT */) {\n            const constantType = doNotHoistNode\n                ? 0 /* ConstantTypes.NOT_CONSTANT */\n                : getConstantType(child, context);\n            if (constantType > 0 /* ConstantTypes.NOT_CONSTANT */) {\n                if (constantType >= 2 /* ConstantTypes.CAN_HOIST */) {\n                    child.codegenNode.patchFlag =\n                        -1 /* PatchFlags.HOISTED */ + ((process.env.NODE_ENV !== 'production') ? ` /* HOISTED */` : ``);\n                    child.codegenNode = context.hoist(child.codegenNode);\n                    hoistedCount++;\n                    continue;\n                }\n            }\n            else {\n                // node may contain dynamic children, but its props may be eligible for\n                // hoisting.\n                const codegenNode = child.codegenNode;\n                if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\n                    const flag = getPatchFlag(codegenNode);\n                    if ((!flag ||\n                        flag === 512 /* PatchFlags.NEED_PATCH */ ||\n                        flag === 1 /* PatchFlags.TEXT */) &&\n                        getGeneratedPropsConstantType(child, context) >=\n                            2 /* ConstantTypes.CAN_HOIST */) {\n                        const props = getNodeProps(child);\n                        if (props) {\n                            codegenNode.props = context.hoist(props);\n                        }\n                    }\n                    if (codegenNode.dynamicProps) {\n                        codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\n                    }\n                }\n            }\n        }\n        // walk further\n        if (child.type === 1 /* NodeTypes.ELEMENT */) {\n            const isComponent = child.tagType === 1 /* ElementTypes.COMPONENT */;\n            if (isComponent) {\n                context.scopes.vSlot++;\n            }\n            walk(child, context);\n            if (isComponent) {\n                context.scopes.vSlot--;\n            }\n        }\n        else if (child.type === 11 /* NodeTypes.FOR */) {\n            // Do not hoist v-for single child because it has to be a block\n            walk(child, context, child.children.length === 1);\n        }\n        else if (child.type === 9 /* NodeTypes.IF */) {\n            for (let i = 0; i < child.branches.length; i++) {\n                // Do not hoist v-if single child because it has to be a block\n                walk(child.branches[i], context, child.branches[i].children.length === 1);\n            }\n        }\n    }\n    if (hoistedCount && context.transformHoist) {\n        context.transformHoist(children, context, node);\n    }\n    // all children were hoisted - the entire children array is hoistable.\n    if (hoistedCount &&\n        hoistedCount === originalCount &&\n        node.type === 1 /* NodeTypes.ELEMENT */ &&\n        node.tagType === 0 /* ElementTypes.ELEMENT */ &&\n        node.codegenNode &&\n        node.codegenNode.type === 13 /* NodeTypes.VNODE_CALL */ &&\n        isArray(node.codegenNode.children)) {\n        node.codegenNode.children = context.hoist(createArrayExpression(node.codegenNode.children));\n    }\n}\nfunction getConstantType(node, context) {\n    const { constantCache } = context;\n    switch (node.type) {\n        case 1 /* NodeTypes.ELEMENT */:\n            if (node.tagType !== 0 /* ElementTypes.ELEMENT */) {\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\n            }\n            const cached = constantCache.get(node);\n            if (cached !== undefined) {\n                return cached;\n            }\n            const codegenNode = node.codegenNode;\n            if (codegenNode.type !== 13 /* NodeTypes.VNODE_CALL */) {\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\n            }\n            if (codegenNode.isBlock &&\n                node.tag !== 'svg' &&\n                node.tag !== 'foreignObject') {\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\n            }\n            const flag = getPatchFlag(codegenNode);\n            if (!flag) {\n                let returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\n                // Element itself has no patch flag. However we still need to check:\n                // 1. Even for a node with no patch flag, it is possible for it to contain\n                // non-hoistable expressions that refers to scope variables, e.g. compiler\n                // injected keys or cached event handlers. Therefore we need to always\n                // check the codegenNode's props to be sure.\n                const generatedPropsType = getGeneratedPropsConstantType(node, context);\n                if (generatedPropsType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n                    constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\n                    return 0 /* ConstantTypes.NOT_CONSTANT */;\n                }\n                if (generatedPropsType < returnType) {\n                    returnType = generatedPropsType;\n                }\n                // 2. its children.\n                for (let i = 0; i < node.children.length; i++) {\n                    const childType = getConstantType(node.children[i], context);\n                    if (childType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n                        constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\n                        return 0 /* ConstantTypes.NOT_CONSTANT */;\n                    }\n                    if (childType < returnType) {\n                        returnType = childType;\n                    }\n                }\n                // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\n                // type, check if any of the props can cause the type to be lowered\n                // we can skip can_patch because it's guaranteed by the absence of a\n                // patchFlag.\n                if (returnType > 1 /* ConstantTypes.CAN_SKIP_PATCH */) {\n                    for (let i = 0; i < node.props.length; i++) {\n                        const p = node.props[i];\n                        if (p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'bind' && p.exp) {\n                            const expType = getConstantType(p.exp, context);\n                            if (expType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n                                constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\n                                return 0 /* ConstantTypes.NOT_CONSTANT */;\n                            }\n                            if (expType < returnType) {\n                                returnType = expType;\n                            }\n                        }\n                    }\n                }\n                // only svg/foreignObject could be block here, however if they are\n                // static then they don't need to be blocks since there will be no\n                // nested updates.\n                if (codegenNode.isBlock) {\n                    // except set custom directives.\n                    for (let i = 0; i < node.props.length; i++) {\n                        const p = node.props[i];\n                        if (p.type === 7 /* NodeTypes.DIRECTIVE */) {\n                            constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\n                            return 0 /* ConstantTypes.NOT_CONSTANT */;\n                        }\n                    }\n                    context.removeHelper(OPEN_BLOCK);\n                    context.removeHelper(getVNodeBlockHelper(context.inSSR, codegenNode.isComponent));\n                    codegenNode.isBlock = false;\n                    context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\n                }\n                constantCache.set(node, returnType);\n                return returnType;\n            }\n            else {\n                constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\n            }\n        case 2 /* NodeTypes.TEXT */:\n        case 3 /* NodeTypes.COMMENT */:\n            return 3 /* ConstantTypes.CAN_STRINGIFY */;\n        case 9 /* NodeTypes.IF */:\n        case 11 /* NodeTypes.FOR */:\n        case 10 /* NodeTypes.IF_BRANCH */:\n            return 0 /* ConstantTypes.NOT_CONSTANT */;\n        case 5 /* NodeTypes.INTERPOLATION */:\n        case 12 /* NodeTypes.TEXT_CALL */:\n            return getConstantType(node.content, context);\n        case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\n            return node.constType;\n        case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\n            let returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                if (isString(child) || isSymbol(child)) {\n                    continue;\n                }\n                const childType = getConstantType(child, context);\n                if (childType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n                    return 0 /* ConstantTypes.NOT_CONSTANT */;\n                }\n                else if (childType < returnType) {\n                    returnType = childType;\n                }\n            }\n            return returnType;\n        default:\n            if ((process.env.NODE_ENV !== 'production')) ;\n            return 0 /* ConstantTypes.NOT_CONSTANT */;\n    }\n}\nconst allowHoistedHelperSet = new Set([\n    NORMALIZE_CLASS,\n    NORMALIZE_STYLE,\n    NORMALIZE_PROPS,\n    GUARD_REACTIVE_PROPS\n]);\nfunction getConstantTypeOfHelperCall(value, context) {\n    if (value.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */ &&\n        !isString(value.callee) &&\n        allowHoistedHelperSet.has(value.callee)) {\n        const arg = value.arguments[0];\n        if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n            return getConstantType(arg, context);\n        }\n        else if (arg.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\n            // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\n            return getConstantTypeOfHelperCall(arg, context);\n        }\n    }\n    return 0 /* ConstantTypes.NOT_CONSTANT */;\n}\nfunction getGeneratedPropsConstantType(node, context) {\n    let returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\n    const props = getNodeProps(node);\n    if (props && props.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\n        const { properties } = props;\n        for (let i = 0; i < properties.length; i++) {\n            const { key, value } = properties[i];\n            const keyType = getConstantType(key, context);\n            if (keyType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n                return keyType;\n            }\n            if (keyType < returnType) {\n                returnType = keyType;\n            }\n            let valueType;\n            if (value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n                valueType = getConstantType(value, context);\n            }\n            else if (value.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\n                // some helper calls can be hoisted,\n                // such as the `normalizeProps` generated by the compiler for pre-normalize class,\n                // in this case we need to respect the ConstantType of the helper's arguments\n                valueType = getConstantTypeOfHelperCall(value, context);\n            }\n            else {\n                valueType = 0 /* ConstantTypes.NOT_CONSTANT */;\n            }\n            if (valueType === 0 /* ConstantTypes.NOT_CONSTANT */) {\n                return valueType;\n            }\n            if (valueType < returnType) {\n                returnType = valueType;\n            }\n        }\n    }\n    return returnType;\n}\nfunction getNodeProps(node) {\n    const codegenNode = node.codegenNode;\n    if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\n        return codegenNode.props;\n    }\n}\nfunction getPatchFlag(node) {\n    const flag = node.patchFlag;\n    return flag ? parseInt(flag, 10) : undefined;\n}\n\nfunction createTransformContext(root, { filename = '', prefixIdentifiers = false, hoistStatic = false, cacheHandlers = false, nodeTransforms = [], directiveTransforms = {}, transformHoist = null, isBuiltInComponent = NOOP, isCustomElement = NOOP, expressionPlugins = [], scopeId = null, slotted = true, ssr = false, inSSR = false, ssrCssVars = ``, bindingMetadata = EMPTY_OBJ, inline = false, isTS = false, onError = defaultOnError, onWarn = defaultOnWarn, compatConfig }) {\n    const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/);\n    const context = {\n        // options\n        selfName: nameMatch && capitalize(camelize$1(nameMatch[1])),\n        prefixIdentifiers,\n        hoistStatic,\n        cacheHandlers,\n        nodeTransforms,\n        directiveTransforms,\n        transformHoist,\n        isBuiltInComponent,\n        isCustomElement,\n        expressionPlugins,\n        scopeId,\n        slotted,\n        ssr,\n        inSSR,\n        ssrCssVars,\n        bindingMetadata,\n        inline,\n        isTS,\n        onError,\n        onWarn,\n        compatConfig,\n        // state\n        root,\n        helpers: new Map(),\n        components: new Set(),\n        directives: new Set(),\n        hoists: [],\n        imports: [],\n        constantCache: new Map(),\n        temps: 0,\n        cached: 0,\n        identifiers: Object.create(null),\n        scopes: {\n            vFor: 0,\n            vSlot: 0,\n            vPre: 0,\n            vOnce: 0\n        },\n        parent: null,\n        currentNode: root,\n        childIndex: 0,\n        inVOnce: false,\n        // methods\n        helper(name) {\n            const count = context.helpers.get(name) || 0;\n            context.helpers.set(name, count + 1);\n            return name;\n        },\n        removeHelper(name) {\n            const count = context.helpers.get(name);\n            if (count) {\n                const currentCount = count - 1;\n                if (!currentCount) {\n                    context.helpers.delete(name);\n                }\n                else {\n                    context.helpers.set(name, currentCount);\n                }\n            }\n        },\n        helperString(name) {\n            return `_${helperNameMap[context.helper(name)]}`;\n        },\n        replaceNode(node) {\n            /* istanbul ignore if */\n            if ((process.env.NODE_ENV !== 'production')) {\n                if (!context.currentNode) {\n                    throw new Error(`Node being replaced is already removed.`);\n                }\n                if (!context.parent) {\n                    throw new Error(`Cannot replace root node.`);\n                }\n            }\n            context.parent.children[context.childIndex] = context.currentNode = node;\n        },\n        removeNode(node) {\n            if ((process.env.NODE_ENV !== 'production') && !context.parent) {\n                throw new Error(`Cannot remove root node.`);\n            }\n            const list = context.parent.children;\n            const removalIndex = node\n                ? list.indexOf(node)\n                : context.currentNode\n                    ? context.childIndex\n                    : -1;\n            /* istanbul ignore if */\n            if ((process.env.NODE_ENV !== 'production') && removalIndex < 0) {\n                throw new Error(`node being removed is not a child of current parent`);\n            }\n            if (!node || node === context.currentNode) {\n                // current node removed\n                context.currentNode = null;\n                context.onNodeRemoved();\n            }\n            else {\n                // sibling node removed\n                if (context.childIndex > removalIndex) {\n                    context.childIndex--;\n                    context.onNodeRemoved();\n                }\n            }\n            context.parent.children.splice(removalIndex, 1);\n        },\n        onNodeRemoved: () => { },\n        addIdentifiers(exp) {\n        },\n        removeIdentifiers(exp) {\n        },\n        hoist(exp) {\n            if (isString(exp))\n                exp = createSimpleExpression(exp);\n            context.hoists.push(exp);\n            const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, 2 /* ConstantTypes.CAN_HOIST */);\n            identifier.hoisted = exp;\n            return identifier;\n        },\n        cache(exp, isVNode = false) {\n            return createCacheExpression(context.cached++, exp, isVNode);\n        }\n    };\n    {\n        context.filters = new Set();\n    }\n    return context;\n}\nfunction transform(root, options) {\n    const context = createTransformContext(root, options);\n    traverseNode(root, context);\n    if (options.hoistStatic) {\n        hoistStatic(root, context);\n    }\n    if (!options.ssr) {\n        createRootCodegen(root, context);\n    }\n    // finalize meta information\n    root.helpers = new Set([...context.helpers.keys()]);\n    root.components = [...context.components];\n    root.directives = [...context.directives];\n    root.imports = context.imports;\n    root.hoists = context.hoists;\n    root.temps = context.temps;\n    root.cached = context.cached;\n    {\n        root.filters = [...context.filters];\n    }\n}\nfunction createRootCodegen(root, context) {\n    const { helper } = context;\n    const { children } = root;\n    if (children.length === 1) {\n        const child = children[0];\n        // if the single child is an element, turn it into a block.\n        if (isSingleElementRoot(root, child) && child.codegenNode) {\n            // single element root is never hoisted so codegenNode will never be\n            // SimpleExpressionNode\n            const codegenNode = child.codegenNode;\n            if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\n                makeBlock(codegenNode, context);\n            }\n            root.codegenNode = codegenNode;\n        }\n        else {\n            // - single <slot/>, IfNode, ForNode: already blocks.\n            // - single text node: always patched.\n            // root codegen falls through via genNode()\n            root.codegenNode = child;\n        }\n    }\n    else if (children.length > 1) {\n        // root has multiple nodes - return a fragment block.\n        let patchFlag = 64 /* PatchFlags.STABLE_FRAGMENT */;\n        let patchFlagText = PatchFlagNames[64 /* PatchFlags.STABLE_FRAGMENT */];\n        // check if the fragment actually contains a single valid child with\n        // the rest being comments\n        if ((process.env.NODE_ENV !== 'production') &&\n            children.filter(c => c.type !== 3 /* NodeTypes.COMMENT */).length === 1) {\n            patchFlag |= 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */;\n            patchFlagText += `, ${PatchFlagNames[2048 /* PatchFlags.DEV_ROOT_FRAGMENT */]}`;\n        }\n        root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, patchFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, undefined, false /* isComponent */);\n    }\n    else ;\n}\nfunction traverseChildren(parent, context) {\n    let i = 0;\n    const nodeRemoved = () => {\n        i--;\n    };\n    for (; i < parent.children.length; i++) {\n        const child = parent.children[i];\n        if (isString(child))\n            continue;\n        context.parent = parent;\n        context.childIndex = i;\n        context.onNodeRemoved = nodeRemoved;\n        traverseNode(child, context);\n    }\n}\nfunction traverseNode(node, context) {\n    context.currentNode = node;\n    // apply transform plugins\n    const { nodeTransforms } = context;\n    const exitFns = [];\n    for (let i = 0; i < nodeTransforms.length; i++) {\n        const onExit = nodeTransforms[i](node, context);\n        if (onExit) {\n            if (isArray(onExit)) {\n                exitFns.push(...onExit);\n            }\n            else {\n                exitFns.push(onExit);\n            }\n        }\n        if (!context.currentNode) {\n            // node was removed\n            return;\n        }\n        else {\n            // node may have been replaced\n            node = context.currentNode;\n        }\n    }\n    switch (node.type) {\n        case 3 /* NodeTypes.COMMENT */:\n            if (!context.ssr) {\n                // inject import for the Comment symbol, which is needed for creating\n                // comment nodes with `createVNode`\n                context.helper(CREATE_COMMENT);\n            }\n            break;\n        case 5 /* NodeTypes.INTERPOLATION */:\n            // no need to traverse, but we need to inject toString helper\n            if (!context.ssr) {\n                context.helper(TO_DISPLAY_STRING);\n            }\n            break;\n        // for container types, further traverse downwards\n        case 9 /* NodeTypes.IF */:\n            for (let i = 0; i < node.branches.length; i++) {\n                traverseNode(node.branches[i], context);\n            }\n            break;\n        case 10 /* NodeTypes.IF_BRANCH */:\n        case 11 /* NodeTypes.FOR */:\n        case 1 /* NodeTypes.ELEMENT */:\n        case 0 /* NodeTypes.ROOT */:\n            traverseChildren(node, context);\n            break;\n    }\n    // exit transforms\n    context.currentNode = node;\n    let i = exitFns.length;\n    while (i--) {\n        exitFns[i]();\n    }\n}\nfunction createStructuralDirectiveTransform(name, fn) {\n    const matches = isString(name)\n        ? (n) => n === name\n        : (n) => name.test(n);\n    return (node, context) => {\n        if (node.type === 1 /* NodeTypes.ELEMENT */) {\n            const { props } = node;\n            // structural directive transforms are not concerned with slots\n            // as they are handled separately in vSlot.ts\n            if (node.tagType === 3 /* ElementTypes.TEMPLATE */ && props.some(isVSlot)) {\n                return;\n            }\n            const exitFns = [];\n            for (let i = 0; i < props.length; i++) {\n                const prop = props[i];\n                if (prop.type === 7 /* NodeTypes.DIRECTIVE */ && matches(prop.name)) {\n                    // structural directives are removed to avoid infinite recursion\n                    // also we remove them *before* applying so that it can further\n                    // traverse itself in case it moves the node around\n                    props.splice(i, 1);\n                    i--;\n                    const onExit = fn(node, prop, context);\n                    if (onExit)\n                        exitFns.push(onExit);\n                }\n            }\n            return exitFns;\n        }\n    };\n}\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\nconst aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\nfunction createCodegenContext(ast, { mode = 'function', prefixIdentifiers = mode === 'module', sourceMap = false, filename = `template.vue.html`, scopeId = null, optimizeImports = false, runtimeGlobalName = `Vue`, runtimeModuleName = `vue`, ssrRuntimeModuleName = 'vue/server-renderer', ssr = false, isTS = false, inSSR = false }) {\n    const context = {\n        mode,\n        prefixIdentifiers,\n        sourceMap,\n        filename,\n        scopeId,\n        optimizeImports,\n        runtimeGlobalName,\n        runtimeModuleName,\n        ssrRuntimeModuleName,\n        ssr,\n        isTS,\n        inSSR,\n        source: ast.loc.source,\n        code: ``,\n        column: 1,\n        line: 1,\n        offset: 0,\n        indentLevel: 0,\n        pure: false,\n        map: undefined,\n        helper(key) {\n            return `_${helperNameMap[key]}`;\n        },\n        push(code, node) {\n            context.code += code;\n        },\n        indent() {\n            newline(++context.indentLevel);\n        },\n        deindent(withoutNewLine = false) {\n            if (withoutNewLine) {\n                --context.indentLevel;\n            }\n            else {\n                newline(--context.indentLevel);\n            }\n        },\n        newline() {\n            newline(context.indentLevel);\n        }\n    };\n    function newline(n) {\n        context.push('\\n' + `  `.repeat(n));\n    }\n    return context;\n}\nfunction generate(ast, options = {}) {\n    const context = createCodegenContext(ast, options);\n    if (options.onContextCreated)\n        options.onContextCreated(context);\n    const { mode, push, prefixIdentifiers, indent, deindent, newline, scopeId, ssr } = context;\n    const helpers = Array.from(ast.helpers);\n    const hasHelpers = helpers.length > 0;\n    const useWithBlock = !prefixIdentifiers && mode !== 'module';\n    const isSetupInlined = !true ;\n    // preambles\n    // in setup() inline mode, the preamble is generated in a sub context\n    // and returned separately.\n    const preambleContext = isSetupInlined\n        ? createCodegenContext(ast, options)\n        : context;\n    {\n        genFunctionPreamble(ast, preambleContext);\n    }\n    // enter render function\n    const functionName = ssr ? `ssrRender` : `render`;\n    const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache'];\n    const signature = args.join(', ');\n    {\n        push(`function ${functionName}(${signature}) {`);\n    }\n    indent();\n    if (useWithBlock) {\n        push(`with (_ctx) {`);\n        indent();\n        // function mode const declarations should be inside with block\n        // also they should be renamed to avoid collision with user properties\n        if (hasHelpers) {\n            push(`const { ${helpers.map(aliasHelper).join(', ')} } = _Vue`);\n            push(`\\n`);\n            newline();\n        }\n    }\n    // generate asset resolution statements\n    if (ast.components.length) {\n        genAssets(ast.components, 'component', context);\n        if (ast.directives.length || ast.temps > 0) {\n            newline();\n        }\n    }\n    if (ast.directives.length) {\n        genAssets(ast.directives, 'directive', context);\n        if (ast.temps > 0) {\n            newline();\n        }\n    }\n    if (ast.filters && ast.filters.length) {\n        newline();\n        genAssets(ast.filters, 'filter', context);\n        newline();\n    }\n    if (ast.temps > 0) {\n        push(`let `);\n        for (let i = 0; i < ast.temps; i++) {\n            push(`${i > 0 ? `, ` : ``}_temp${i}`);\n        }\n    }\n    if (ast.components.length || ast.directives.length || ast.temps) {\n        push(`\\n`);\n        newline();\n    }\n    // generate the VNode tree expression\n    if (!ssr) {\n        push(`return `);\n    }\n    if (ast.codegenNode) {\n        genNode(ast.codegenNode, context);\n    }\n    else {\n        push(`null`);\n    }\n    if (useWithBlock) {\n        deindent();\n        push(`}`);\n    }\n    deindent();\n    push(`}`);\n    return {\n        ast,\n        code: context.code,\n        preamble: isSetupInlined ? preambleContext.code : ``,\n        // SourceMapGenerator does have toJSON() method but it's not in the types\n        map: context.map ? context.map.toJSON() : undefined\n    };\n}\nfunction genFunctionPreamble(ast, context) {\n    const { ssr, prefixIdentifiers, push, newline, runtimeModuleName, runtimeGlobalName, ssrRuntimeModuleName } = context;\n    const VueBinding = runtimeGlobalName;\n    // Generate const declaration for helpers\n    // In prefix mode, we place the const declaration at top so it's done\n    // only once; But if we not prefixing, we place the declaration inside the\n    // with block so it doesn't incur the `in` check cost for every helper access.\n    const helpers = Array.from(ast.helpers);\n    if (helpers.length > 0) {\n        {\n            // \"with\" mode.\n            // save Vue in a separate variable to avoid collision\n            push(`const _Vue = ${VueBinding}\\n`);\n            // in \"with\" mode, helpers are declared inside the with block to avoid\n            // has check cost, but hoists are lifted out of the function - we need\n            // to provide the helper here.\n            if (ast.hoists.length) {\n                const staticHelpers = [\n                    CREATE_VNODE,\n                    CREATE_ELEMENT_VNODE,\n                    CREATE_COMMENT,\n                    CREATE_TEXT,\n                    CREATE_STATIC\n                ]\n                    .filter(helper => helpers.includes(helper))\n                    .map(aliasHelper)\n                    .join(', ');\n                push(`const { ${staticHelpers} } = _Vue\\n`);\n            }\n        }\n    }\n    genHoists(ast.hoists, context);\n    newline();\n    push(`return `);\n}\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\n    const resolver = helper(type === 'filter'\n        ? RESOLVE_FILTER\n        : type === 'component'\n            ? RESOLVE_COMPONENT\n            : RESOLVE_DIRECTIVE);\n    for (let i = 0; i < assets.length; i++) {\n        let id = assets[i];\n        // potential component implicit self-reference inferred from SFC filename\n        const maybeSelfReference = id.endsWith('__self');\n        if (maybeSelfReference) {\n            id = id.slice(0, -6);\n        }\n        push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`);\n        if (i < assets.length - 1) {\n            newline();\n        }\n    }\n}\nfunction genHoists(hoists, context) {\n    if (!hoists.length) {\n        return;\n    }\n    context.pure = true;\n    const { push, newline, helper, scopeId, mode } = context;\n    newline();\n    for (let i = 0; i < hoists.length; i++) {\n        const exp = hoists[i];\n        if (exp) {\n            push(`const _hoisted_${i + 1} = ${``}`);\n            genNode(exp, context);\n            newline();\n        }\n    }\n    context.pure = false;\n}\nfunction isText(n) {\n    return (isString(n) ||\n        n.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ ||\n        n.type === 2 /* NodeTypes.TEXT */ ||\n        n.type === 5 /* NodeTypes.INTERPOLATION */ ||\n        n.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */);\n}\nfunction genNodeListAsArray(nodes, context) {\n    const multilines = nodes.length > 3 ||\n        (((process.env.NODE_ENV !== 'production')) && nodes.some(n => isArray(n) || !isText(n)));\n    context.push(`[`);\n    multilines && context.indent();\n    genNodeList(nodes, context, multilines);\n    multilines && context.deindent();\n    context.push(`]`);\n}\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\n    const { push, newline } = context;\n    for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (isString(node)) {\n            push(node);\n        }\n        else if (isArray(node)) {\n            genNodeListAsArray(node, context);\n        }\n        else {\n            genNode(node, context);\n        }\n        if (i < nodes.length - 1) {\n            if (multilines) {\n                comma && push(',');\n                newline();\n            }\n            else {\n                comma && push(', ');\n            }\n        }\n    }\n}\nfunction genNode(node, context) {\n    if (isString(node)) {\n        context.push(node);\n        return;\n    }\n    if (isSymbol(node)) {\n        context.push(context.helper(node));\n        return;\n    }\n    switch (node.type) {\n        case 1 /* NodeTypes.ELEMENT */:\n        case 9 /* NodeTypes.IF */:\n        case 11 /* NodeTypes.FOR */:\n            (process.env.NODE_ENV !== 'production') &&\n                assert(node.codegenNode != null, `Codegen node is missing for element/if/for node. ` +\n                    `Apply appropriate transforms first.`);\n            genNode(node.codegenNode, context);\n            break;\n        case 2 /* NodeTypes.TEXT */:\n            genText(node, context);\n            break;\n        case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\n            genExpression(node, context);\n            break;\n        case 5 /* NodeTypes.INTERPOLATION */:\n            genInterpolation(node, context);\n            break;\n        case 12 /* NodeTypes.TEXT_CALL */:\n            genNode(node.codegenNode, context);\n            break;\n        case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\n            genCompoundExpression(node, context);\n            break;\n        case 3 /* NodeTypes.COMMENT */:\n            genComment(node, context);\n            break;\n        case 13 /* NodeTypes.VNODE_CALL */:\n            genVNodeCall(node, context);\n            break;\n        case 14 /* NodeTypes.JS_CALL_EXPRESSION */:\n            genCallExpression(node, context);\n            break;\n        case 15 /* NodeTypes.JS_OBJECT_EXPRESSION */:\n            genObjectExpression(node, context);\n            break;\n        case 17 /* NodeTypes.JS_ARRAY_EXPRESSION */:\n            genArrayExpression(node, context);\n            break;\n        case 18 /* NodeTypes.JS_FUNCTION_EXPRESSION */:\n            genFunctionExpression(node, context);\n            break;\n        case 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */:\n            genConditionalExpression(node, context);\n            break;\n        case 20 /* NodeTypes.JS_CACHE_EXPRESSION */:\n            genCacheExpression(node, context);\n            break;\n        case 21 /* NodeTypes.JS_BLOCK_STATEMENT */:\n            genNodeList(node.body, context, true, false);\n            break;\n        // SSR only types\n        case 22 /* NodeTypes.JS_TEMPLATE_LITERAL */:\n            break;\n        case 23 /* NodeTypes.JS_IF_STATEMENT */:\n            break;\n        case 24 /* NodeTypes.JS_ASSIGNMENT_EXPRESSION */:\n            break;\n        case 25 /* NodeTypes.JS_SEQUENCE_EXPRESSION */:\n            break;\n        case 26 /* NodeTypes.JS_RETURN_STATEMENT */:\n            break;\n        /* istanbul ignore next */\n        case 10 /* NodeTypes.IF_BRANCH */:\n            // noop\n            break;\n        default:\n            if ((process.env.NODE_ENV !== 'production')) {\n                assert(false, `unhandled codegen node type: ${node.type}`);\n                // make sure we exhaust all possible types\n                const exhaustiveCheck = node;\n                return exhaustiveCheck;\n            }\n    }\n}\nfunction genText(node, context) {\n    context.push(JSON.stringify(node.content), node);\n}\nfunction genExpression(node, context) {\n    const { content, isStatic } = node;\n    context.push(isStatic ? JSON.stringify(content) : content, node);\n}\nfunction genInterpolation(node, context) {\n    const { push, helper, pure } = context;\n    if (pure)\n        push(PURE_ANNOTATION);\n    push(`${helper(TO_DISPLAY_STRING)}(`);\n    genNode(node.content, context);\n    push(`)`);\n}\nfunction genCompoundExpression(node, context) {\n    for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        if (isString(child)) {\n            context.push(child);\n        }\n        else {\n            genNode(child, context);\n        }\n    }\n}\nfunction genExpressionAsPropertyKey(node, context) {\n    const { push } = context;\n    if (node.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) {\n        push(`[`);\n        genCompoundExpression(node, context);\n        push(`]`);\n    }\n    else if (node.isStatic) {\n        // only quote keys if necessary\n        const text = isSimpleIdentifier(node.content)\n            ? node.content\n            : JSON.stringify(node.content);\n        push(text, node);\n    }\n    else {\n        push(`[${node.content}]`, node);\n    }\n}\nfunction genComment(node, context) {\n    const { push, helper, pure } = context;\n    if (pure) {\n        push(PURE_ANNOTATION);\n    }\n    push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\n}\nfunction genVNodeCall(node, context) {\n    const { push, helper, pure } = context;\n    const { tag, props, children, patchFlag, dynamicProps, directives, isBlock, disableTracking, isComponent } = node;\n    if (directives) {\n        push(helper(WITH_DIRECTIVES) + `(`);\n    }\n    if (isBlock) {\n        push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\n    }\n    if (pure) {\n        push(PURE_ANNOTATION);\n    }\n    const callHelper = isBlock\n        ? getVNodeBlockHelper(context.inSSR, isComponent)\n        : getVNodeHelper(context.inSSR, isComponent);\n    push(helper(callHelper) + `(`, node);\n    genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\n    push(`)`);\n    if (isBlock) {\n        push(`)`);\n    }\n    if (directives) {\n        push(`, `);\n        genNode(directives, context);\n        push(`)`);\n    }\n}\nfunction genNullableArgs(args) {\n    let i = args.length;\n    while (i--) {\n        if (args[i] != null)\n            break;\n    }\n    return args.slice(0, i + 1).map(arg => arg || `null`);\n}\n// JavaScript\nfunction genCallExpression(node, context) {\n    const { push, helper, pure } = context;\n    const callee = isString(node.callee) ? node.callee : helper(node.callee);\n    if (pure) {\n        push(PURE_ANNOTATION);\n    }\n    push(callee + `(`, node);\n    genNodeList(node.arguments, context);\n    push(`)`);\n}\nfunction genObjectExpression(node, context) {\n    const { push, indent, deindent, newline } = context;\n    const { properties } = node;\n    if (!properties.length) {\n        push(`{}`, node);\n        return;\n    }\n    const multilines = properties.length > 1 ||\n        (((process.env.NODE_ENV !== 'production')) &&\n            properties.some(p => p.value.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */));\n    push(multilines ? `{` : `{ `);\n    multilines && indent();\n    for (let i = 0; i < properties.length; i++) {\n        const { key, value } = properties[i];\n        // key\n        genExpressionAsPropertyKey(key, context);\n        push(`: `);\n        // value\n        genNode(value, context);\n        if (i < properties.length - 1) {\n            // will only reach this if it's multilines\n            push(`,`);\n            newline();\n        }\n    }\n    multilines && deindent();\n    push(multilines ? `}` : ` }`);\n}\nfunction genArrayExpression(node, context) {\n    genNodeListAsArray(node.elements, context);\n}\nfunction genFunctionExpression(node, context) {\n    const { push, indent, deindent } = context;\n    const { params, returns, body, newline, isSlot } = node;\n    if (isSlot) {\n        // wrap slot functions with owner context\n        push(`_${helperNameMap[WITH_CTX]}(`);\n    }\n    push(`(`, node);\n    if (isArray(params)) {\n        genNodeList(params, context);\n    }\n    else if (params) {\n        genNode(params, context);\n    }\n    push(`) => `);\n    if (newline || body) {\n        push(`{`);\n        indent();\n    }\n    if (returns) {\n        if (newline) {\n            push(`return `);\n        }\n        if (isArray(returns)) {\n            genNodeListAsArray(returns, context);\n        }\n        else {\n            genNode(returns, context);\n        }\n    }\n    else if (body) {\n        genNode(body, context);\n    }\n    if (newline || body) {\n        deindent();\n        push(`}`);\n    }\n    if (isSlot) {\n        if (node.isNonScopedSlot) {\n            push(`, undefined, true`);\n        }\n        push(`)`);\n    }\n}\nfunction genConditionalExpression(node, context) {\n    const { test, consequent, alternate, newline: needNewline } = node;\n    const { push, indent, deindent, newline } = context;\n    if (test.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n        const needsParens = !isSimpleIdentifier(test.content);\n        needsParens && push(`(`);\n        genExpression(test, context);\n        needsParens && push(`)`);\n    }\n    else {\n        push(`(`);\n        genNode(test, context);\n        push(`)`);\n    }\n    needNewline && indent();\n    context.indentLevel++;\n    needNewline || push(` `);\n    push(`? `);\n    genNode(consequent, context);\n    context.indentLevel--;\n    needNewline && newline();\n    needNewline || push(` `);\n    push(`: `);\n    const isNested = alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */;\n    if (!isNested) {\n        context.indentLevel++;\n    }\n    genNode(alternate, context);\n    if (!isNested) {\n        context.indentLevel--;\n    }\n    needNewline && deindent(true /* without newline */);\n}\nfunction genCacheExpression(node, context) {\n    const { push, helper, indent, deindent, newline } = context;\n    push(`_cache[${node.index}] || (`);\n    if (node.isVNode) {\n        indent();\n        push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\n        newline();\n    }\n    push(`_cache[${node.index}] = `);\n    genNode(node.value, context);\n    if (node.isVNode) {\n        push(`,`);\n        newline();\n        push(`${helper(SET_BLOCK_TRACKING)}(1),`);\n        newline();\n        push(`_cache[${node.index}]`);\n        deindent();\n    }\n    push(`)`);\n}\n\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = Object.create(null)) {\n    {\n        return;\n    }\n}\nfunction isReferencedIdentifier(id, parent, parentStack) {\n    {\n        return false;\n    }\n}\nfunction isInDestructureAssignment(parent, parentStack) {\n    if (parent &&\n        (parent.type === 'ObjectProperty' || parent.type === 'ArrayPattern')) {\n        let i = parentStack.length;\n        while (i--) {\n            const p = parentStack[i];\n            if (p.type === 'AssignmentExpression') {\n                return true;\n            }\n            else if (p.type !== 'ObjectProperty' && !p.type.endsWith('Pattern')) {\n                break;\n            }\n        }\n    }\n    return false;\n}\nfunction walkFunctionParams(node, onIdent) {\n    for (const p of node.params) {\n        for (const id of extractIdentifiers(p)) {\n            onIdent(id);\n        }\n    }\n}\nfunction walkBlockDeclarations(block, onIdent) {\n    for (const stmt of block.body) {\n        if (stmt.type === 'VariableDeclaration') {\n            if (stmt.declare)\n                continue;\n            for (const decl of stmt.declarations) {\n                for (const id of extractIdentifiers(decl.id)) {\n                    onIdent(id);\n                }\n            }\n        }\n        else if (stmt.type === 'FunctionDeclaration' ||\n            stmt.type === 'ClassDeclaration') {\n            if (stmt.declare || !stmt.id)\n                continue;\n            onIdent(stmt.id);\n        }\n    }\n}\nfunction extractIdentifiers(param, nodes = []) {\n    switch (param.type) {\n        case 'Identifier':\n            nodes.push(param);\n            break;\n        case 'MemberExpression':\n            let object = param;\n            while (object.type === 'MemberExpression') {\n                object = object.object;\n            }\n            nodes.push(object);\n            break;\n        case 'ObjectPattern':\n            for (const prop of param.properties) {\n                if (prop.type === 'RestElement') {\n                    extractIdentifiers(prop.argument, nodes);\n                }\n                else {\n                    extractIdentifiers(prop.value, nodes);\n                }\n            }\n            break;\n        case 'ArrayPattern':\n            param.elements.forEach(element => {\n                if (element)\n                    extractIdentifiers(element, nodes);\n            });\n            break;\n        case 'RestElement':\n            extractIdentifiers(param.argument, nodes);\n            break;\n        case 'AssignmentPattern':\n            extractIdentifiers(param.left, nodes);\n            break;\n    }\n    return nodes;\n}\nconst isFunctionType = (node) => {\n    return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\n};\nconst isStaticProperty = (node) => node &&\n    (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') &&\n    !node.computed;\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\n\n// these keywords should not appear inside expressions, but operators like\n// 'typeof', 'instanceof', and 'in' are allowed\nconst prohibitedKeywordRE = new RegExp('\\\\b' +\n    ('arguments,await,break,case,catch,class,const,continue,debugger,default,' +\n        'delete,do,else,export,extends,finally,for,function,if,import,let,new,' +\n        'return,super,switch,throw,try,var,void,while,with,yield')\n        .split(',')\n        .join('\\\\b|\\\\b') +\n    '\\\\b');\n// strip strings in expressions\nconst stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n/**\n * Validate a non-prefixed expression.\n * This is only called when using the in-browser runtime compiler since it\n * doesn't prefix expressions.\n */\nfunction validateBrowserExpression(node, context, asParams = false, asRawStatements = false) {\n    const exp = node.content;\n    // empty expressions are validated per-directive since some directives\n    // do allow empty expressions.\n    if (!exp.trim()) {\n        return;\n    }\n    try {\n        new Function(asRawStatements\n            ? ` ${exp} `\n            : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`);\n    }\n    catch (e) {\n        let message = e.message;\n        const keywordMatch = exp\n            .replace(stripStringRE, '')\n            .match(prohibitedKeywordRE);\n        if (keywordMatch) {\n            message = `avoid using JavaScript keyword as property name: \"${keywordMatch[0]}\"`;\n        }\n        context.onError(createCompilerError(45 /* ErrorCodes.X_INVALID_EXPRESSION */, node.loc, undefined, message));\n    }\n}\n\nconst transformExpression = (node, context) => {\n    if (node.type === 5 /* NodeTypes.INTERPOLATION */) {\n        node.content = processExpression(node.content, context);\n    }\n    else if (node.type === 1 /* NodeTypes.ELEMENT */) {\n        // handle directives on element\n        for (let i = 0; i < node.props.length; i++) {\n            const dir = node.props[i];\n            // do not process for v-on & v-for since they are special handled\n            if (dir.type === 7 /* NodeTypes.DIRECTIVE */ && dir.name !== 'for') {\n                const exp = dir.exp;\n                const arg = dir.arg;\n                // do not process exp if this is v-on:arg - we need special handling\n                // for wrapping inline statements.\n                if (exp &&\n                    exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\n                    !(dir.name === 'on' && arg)) {\n                    dir.exp = processExpression(exp, context, \n                    // slot args must be processed as function params\n                    dir.name === 'slot');\n                }\n                if (arg && arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && !arg.isStatic) {\n                    dir.arg = processExpression(arg, context);\n                }\n            }\n        }\n    }\n};\n// Important: since this function uses Node.js only dependencies, it should\n// always be used with a leading !true check so that it can be\n// tree-shaken from the browser build.\nfunction processExpression(node, context, \n// some expressions like v-slot props & v-for aliases should be parsed as\n// function params\nasParams = false, \n// v-on handler values may contain multiple statements\nasRawStatements = false, localVars = Object.create(context.identifiers)) {\n    {\n        if ((process.env.NODE_ENV !== 'production')) {\n            // simple in-browser validation (same logic in 2.x)\n            validateBrowserExpression(node, context, asParams, asRawStatements);\n        }\n        return node;\n    }\n}\nfunction stringifyExpression(exp) {\n    if (isString(exp)) {\n        return exp;\n    }\n    else if (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n        return exp.content;\n    }\n    else {\n        return exp.children\n            .map(stringifyExpression)\n            .join('');\n    }\n}\n\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\n        // #1587: We need to dynamically increment the key based on the current\n        // node's sibling nodes, since chained v-if/else branches are\n        // rendered at the same depth\n        const siblings = context.parent.children;\n        let i = siblings.indexOf(ifNode);\n        let key = 0;\n        while (i-- >= 0) {\n            const sibling = siblings[i];\n            if (sibling && sibling.type === 9 /* NodeTypes.IF */) {\n                key += sibling.branches.length;\n            }\n        }\n        // Exit callback. Complete the codegenNode when all children have been\n        // transformed.\n        return () => {\n            if (isRoot) {\n                ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\n            }\n            else {\n                // attach this branch's codegen node to the v-if root.\n                const parentCondition = getParentCondition(ifNode.codegenNode);\n                parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\n            }\n        };\n    });\n});\n// target-agnostic transform used for both Client and SSR\nfunction processIf(node, dir, context, processCodegen) {\n    if (dir.name !== 'else' &&\n        (!dir.exp || !dir.exp.content.trim())) {\n        const loc = dir.exp ? dir.exp.loc : node.loc;\n        context.onError(createCompilerError(28 /* ErrorCodes.X_V_IF_NO_EXPRESSION */, dir.loc));\n        dir.exp = createSimpleExpression(`true`, false, loc);\n    }\n    if ((process.env.NODE_ENV !== 'production') && true && dir.exp) {\n        validateBrowserExpression(dir.exp, context);\n    }\n    if (dir.name === 'if') {\n        const branch = createIfBranch(node, dir);\n        const ifNode = {\n            type: 9 /* NodeTypes.IF */,\n            loc: node.loc,\n            branches: [branch]\n        };\n        context.replaceNode(ifNode);\n        if (processCodegen) {\n            return processCodegen(ifNode, branch, true);\n        }\n    }\n    else {\n        // locate the adjacent v-if\n        const siblings = context.parent.children;\n        const comments = [];\n        let i = siblings.indexOf(node);\n        while (i-- >= -1) {\n            const sibling = siblings[i];\n            if (sibling && sibling.type === 3 /* NodeTypes.COMMENT */) {\n                context.removeNode(sibling);\n                (process.env.NODE_ENV !== 'production') && comments.unshift(sibling);\n                continue;\n            }\n            if (sibling &&\n                sibling.type === 2 /* NodeTypes.TEXT */ &&\n                !sibling.content.trim().length) {\n                context.removeNode(sibling);\n                continue;\n            }\n            if (sibling && sibling.type === 9 /* NodeTypes.IF */) {\n                // Check if v-else was followed by v-else-if\n                if (dir.name === 'else-if' &&\n                    sibling.branches[sibling.branches.length - 1].condition === undefined) {\n                    context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, node.loc));\n                }\n                // move the node to the if node's branches\n                context.removeNode();\n                const branch = createIfBranch(node, dir);\n                if ((process.env.NODE_ENV !== 'production') &&\n                    comments.length &&\n                    // #3619 ignore comments if the v-if is direct child of <transition>\n                    !(context.parent &&\n                        context.parent.type === 1 /* NodeTypes.ELEMENT */ &&\n                        isBuiltInType(context.parent.tag, 'transition'))) {\n                    branch.children = [...comments, ...branch.children];\n                }\n                // check if user is forcing same key on different branches\n                if ((process.env.NODE_ENV !== 'production') || !true) {\n                    const key = branch.userKey;\n                    if (key) {\n                        sibling.branches.forEach(({ userKey }) => {\n                            if (isSameKey(userKey, key)) {\n                                context.onError(createCompilerError(29 /* ErrorCodes.X_V_IF_SAME_KEY */, branch.userKey.loc));\n                            }\n                        });\n                    }\n                }\n                sibling.branches.push(branch);\n                const onExit = processCodegen && processCodegen(sibling, branch, false);\n                // since the branch was removed, it will not be traversed.\n                // make sure to traverse here.\n                traverseNode(branch, context);\n                // call on exit\n                if (onExit)\n                    onExit();\n                // make sure to reset currentNode after traversal to indicate this\n                // node has been removed.\n                context.currentNode = null;\n            }\n            else {\n                context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, node.loc));\n            }\n            break;\n        }\n    }\n}\nfunction createIfBranch(node, dir) {\n    const isTemplateIf = node.tagType === 3 /* ElementTypes.TEMPLATE */;\n    return {\n        type: 10 /* NodeTypes.IF_BRANCH */,\n        loc: node.loc,\n        condition: dir.name === 'else' ? undefined : dir.exp,\n        children: isTemplateIf && !findDir(node, 'for') ? node.children : [node],\n        userKey: findProp(node, `key`),\n        isTemplateIf\n    };\n}\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\n    if (branch.condition) {\n        return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context), \n        // make sure to pass in asBlock: true so that the comment node call\n        // closes the current block.\n        createCallExpression(context.helper(CREATE_COMMENT), [\n            (process.env.NODE_ENV !== 'production') ? '\"v-if\"' : '\"\"',\n            'true'\n        ]));\n    }\n    else {\n        return createChildrenCodegenNode(branch, keyIndex, context);\n    }\n}\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\n    const { helper } = context;\n    const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2 /* ConstantTypes.CAN_HOIST */));\n    const { children } = branch;\n    const firstChild = children[0];\n    const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1 /* NodeTypes.ELEMENT */;\n    if (needFragmentWrapper) {\n        if (children.length === 1 && firstChild.type === 11 /* NodeTypes.FOR */) {\n            // optimize away nested fragments when child is a ForNode\n            const vnodeCall = firstChild.codegenNode;\n            injectProp(vnodeCall, keyProperty, context);\n            return vnodeCall;\n        }\n        else {\n            let patchFlag = 64 /* PatchFlags.STABLE_FRAGMENT */;\n            let patchFlagText = PatchFlagNames[64 /* PatchFlags.STABLE_FRAGMENT */];\n            // check if the fragment actually contains a single valid child with\n            // the rest being comments\n            if ((process.env.NODE_ENV !== 'production') &&\n                !branch.isTemplateIf &&\n                children.filter(c => c.type !== 3 /* NodeTypes.COMMENT */).length === 1) {\n                patchFlag |= 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */;\n                patchFlagText += `, ${PatchFlagNames[2048 /* PatchFlags.DEV_ROOT_FRAGMENT */]}`;\n            }\n            return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, false, false /* isComponent */, branch.loc);\n        }\n    }\n    else {\n        const ret = firstChild.codegenNode;\n        const vnodeCall = getMemoedVNodeCall(ret);\n        // Change createVNode to createBlock.\n        if (vnodeCall.type === 13 /* NodeTypes.VNODE_CALL */) {\n            makeBlock(vnodeCall, context);\n        }\n        // inject branch key\n        injectProp(vnodeCall, keyProperty, context);\n        return ret;\n    }\n}\nfunction isSameKey(a, b) {\n    if (!a || a.type !== b.type) {\n        return false;\n    }\n    if (a.type === 6 /* NodeTypes.ATTRIBUTE */) {\n        if (a.value.content !== b.value.content) {\n            return false;\n        }\n    }\n    else {\n        // directive\n        const exp = a.exp;\n        const branchExp = b.exp;\n        if (exp.type !== branchExp.type) {\n            return false;\n        }\n        if (exp.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */ ||\n            exp.isStatic !== branchExp.isStatic ||\n            exp.content !== branchExp.content) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction getParentCondition(node) {\n    while (true) {\n        if (node.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\n            if (node.alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\n                node = node.alternate;\n            }\n            else {\n                return node;\n            }\n        }\n        else if (node.type === 20 /* NodeTypes.JS_CACHE_EXPRESSION */) {\n            node = node.value;\n        }\n    }\n}\n\nconst transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\n    const { helper, removeHelper } = context;\n    return processFor(node, dir, context, forNode => {\n        // create the loop render function expression now, and add the\n        // iterator on exit after all children have been traversed\n        const renderExp = createCallExpression(helper(RENDER_LIST), [\n            forNode.source\n        ]);\n        const isTemplate = isTemplateNode(node);\n        const memo = findDir(node, 'memo');\n        const keyProp = findProp(node, `key`);\n        const keyExp = keyProp &&\n            (keyProp.type === 6 /* NodeTypes.ATTRIBUTE */\n                ? createSimpleExpression(keyProp.value.content, true)\n                : keyProp.exp);\n        const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\n        const isStableFragment = forNode.source.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\n            forNode.source.constType > 0 /* ConstantTypes.NOT_CONSTANT */;\n        const fragmentFlag = isStableFragment\n            ? 64 /* PatchFlags.STABLE_FRAGMENT */\n            : keyProp\n                ? 128 /* PatchFlags.KEYED_FRAGMENT */\n                : 256 /* PatchFlags.UNKEYED_FRAGMENT */;\n        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, fragmentFlag +\n            ((process.env.NODE_ENV !== 'production') ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``), undefined, undefined, true /* isBlock */, !isStableFragment /* disableTracking */, false /* isComponent */, node.loc);\n        return () => {\n            // finish the codegen now that all children have been traversed\n            let childBlock;\n            const { children } = forNode;\n            // check <template v-for> key placement\n            if (((process.env.NODE_ENV !== 'production') || !true) && isTemplate) {\n                node.children.some(c => {\n                    if (c.type === 1 /* NodeTypes.ELEMENT */) {\n                        const key = findProp(c, 'key');\n                        if (key) {\n                            context.onError(createCompilerError(33 /* ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT */, key.loc));\n                            return true;\n                        }\n                    }\n                });\n            }\n            const needFragmentWrapper = children.length !== 1 || children[0].type !== 1 /* NodeTypes.ELEMENT */;\n            const slotOutlet = isSlotOutlet(node)\n                ? node\n                : isTemplate &&\n                    node.children.length === 1 &&\n                    isSlotOutlet(node.children[0])\n                    ? node.children[0] // api-extractor somehow fails to infer this\n                    : null;\n            if (slotOutlet) {\n                // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\n                childBlock = slotOutlet.codegenNode;\n                if (isTemplate && keyProperty) {\n                    // <template v-for=\"...\" :key=\"...\"><slot/></template>\n                    // we need to inject the key to the renderSlot() call.\n                    // the props for renderSlot is passed as the 3rd argument.\n                    injectProp(childBlock, keyProperty, context);\n                }\n            }\n            else if (needFragmentWrapper) {\n                // <template v-for=\"...\"> with text or multi-elements\n                // should generate a fragment block for each loop\n                childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, 64 /* PatchFlags.STABLE_FRAGMENT */ +\n                    ((process.env.NODE_ENV !== 'production')\n                        ? ` /* ${PatchFlagNames[64 /* PatchFlags.STABLE_FRAGMENT */]} */`\n                        : ``), undefined, undefined, true, undefined, false /* isComponent */);\n            }\n            else {\n                // Normal element v-for. Directly use the child's codegenNode\n                // but mark it as a block.\n                childBlock = children[0]\n                    .codegenNode;\n                if (isTemplate && keyProperty) {\n                    injectProp(childBlock, keyProperty, context);\n                }\n                if (childBlock.isBlock !== !isStableFragment) {\n                    if (childBlock.isBlock) {\n                        // switch from block to vnode\n                        removeHelper(OPEN_BLOCK);\n                        removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n                    }\n                    else {\n                        // switch from vnode to block\n                        removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n                    }\n                }\n                childBlock.isBlock = !isStableFragment;\n                if (childBlock.isBlock) {\n                    helper(OPEN_BLOCK);\n                    helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n                }\n                else {\n                    helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n                }\n            }\n            if (memo) {\n                const loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [\n                    createSimpleExpression(`_cached`)\n                ]));\n                loop.body = createBlockStatement([\n                    createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\n                    createCompoundExpression([\n                        `if (_cached`,\n                        ...(keyExp ? [` && _cached.key === `, keyExp] : []),\n                        ` && ${context.helperString(IS_MEMO_SAME)}(_cached, _memo)) return _cached`\n                    ]),\n                    createCompoundExpression([`const _item = `, childBlock]),\n                    createSimpleExpression(`_item.memo = _memo`),\n                    createSimpleExpression(`return _item`)\n                ]);\n                renderExp.arguments.push(loop, createSimpleExpression(`_cache`), createSimpleExpression(String(context.cached++)));\n            }\n            else {\n                renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true /* force newline */));\n            }\n        };\n    });\n});\n// target-agnostic transform used for both Client and SSR\nfunction processFor(node, dir, context, processCodegen) {\n    if (!dir.exp) {\n        context.onError(createCompilerError(31 /* ErrorCodes.X_V_FOR_NO_EXPRESSION */, dir.loc));\n        return;\n    }\n    const parseResult = parseForExpression(\n    // can only be simple expression because vFor transform is applied\n    // before expression transform.\n    dir.exp, context);\n    if (!parseResult) {\n        context.onError(createCompilerError(32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */, dir.loc));\n        return;\n    }\n    const { addIdentifiers, removeIdentifiers, scopes } = context;\n    const { source, value, key, index } = parseResult;\n    const forNode = {\n        type: 11 /* NodeTypes.FOR */,\n        loc: dir.loc,\n        source,\n        valueAlias: value,\n        keyAlias: key,\n        objectIndexAlias: index,\n        parseResult,\n        children: isTemplateNode(node) ? node.children : [node]\n    };\n    context.replaceNode(forNode);\n    // bookkeeping\n    scopes.vFor++;\n    const onExit = processCodegen && processCodegen(forNode);\n    return () => {\n        scopes.vFor--;\n        if (onExit)\n            onExit();\n    };\n}\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n// This regex doesn't cover the case if key or index aliases have destructuring,\n// but those do not make sense in the first place, so this works in practice.\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nconst stripParensRE = /^\\(|\\)$/g;\nfunction parseForExpression(input, context) {\n    const loc = input.loc;\n    const exp = input.content;\n    const inMatch = exp.match(forAliasRE);\n    if (!inMatch)\n        return;\n    const [, LHS, RHS] = inMatch;\n    const result = {\n        source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\n        value: undefined,\n        key: undefined,\n        index: undefined\n    };\n    if ((process.env.NODE_ENV !== 'production') && true) {\n        validateBrowserExpression(result.source, context);\n    }\n    let valueContent = LHS.trim().replace(stripParensRE, '').trim();\n    const trimmedOffset = LHS.indexOf(valueContent);\n    const iteratorMatch = valueContent.match(forIteratorRE);\n    if (iteratorMatch) {\n        valueContent = valueContent.replace(forIteratorRE, '').trim();\n        const keyContent = iteratorMatch[1].trim();\n        let keyOffset;\n        if (keyContent) {\n            keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\n            result.key = createAliasExpression(loc, keyContent, keyOffset);\n            if ((process.env.NODE_ENV !== 'production') && true) {\n                validateBrowserExpression(result.key, context, true);\n            }\n        }\n        if (iteratorMatch[2]) {\n            const indexContent = iteratorMatch[2].trim();\n            if (indexContent) {\n                result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key\n                    ? keyOffset + keyContent.length\n                    : trimmedOffset + valueContent.length));\n                if ((process.env.NODE_ENV !== 'production') && true) {\n                    validateBrowserExpression(result.index, context, true);\n                }\n            }\n        }\n    }\n    if (valueContent) {\n        result.value = createAliasExpression(loc, valueContent, trimmedOffset);\n        if ((process.env.NODE_ENV !== 'production') && true) {\n            validateBrowserExpression(result.value, context, true);\n        }\n    }\n    return result;\n}\nfunction createAliasExpression(range, content, offset) {\n    return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\n}\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\n    return createParamsList([value, key, index, ...memoArgs]);\n}\nfunction createParamsList(args) {\n    let i = args.length;\n    while (i--) {\n        if (args[i])\n            break;\n    }\n    return args\n        .slice(0, i + 1)\n        .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false));\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\n// A NodeTransform that:\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\n//    by transformExpression. This is only applied in non-browser builds with\n//    { prefixIdentifiers: true }.\n// 2. Track v-slot depths so that we know a slot is inside another slot.\n//    Note the exit callback is executed before buildSlots() on the same node,\n//    so only nested slots see positive numbers.\nconst trackSlotScopes = (node, context) => {\n    if (node.type === 1 /* NodeTypes.ELEMENT */ &&\n        (node.tagType === 1 /* ElementTypes.COMPONENT */ ||\n            node.tagType === 3 /* ElementTypes.TEMPLATE */)) {\n        // We are only checking non-empty v-slot here\n        // since we only care about slots that introduce scope variables.\n        const vSlot = findDir(node, 'slot');\n        if (vSlot) {\n            vSlot.exp;\n            context.scopes.vSlot++;\n            return () => {\n                context.scopes.vSlot--;\n            };\n        }\n    }\n};\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\nconst trackVForSlotScopes = (node, context) => {\n    let vFor;\n    if (isTemplateNode(node) &&\n        node.props.some(isVSlot) &&\n        (vFor = findDir(node, 'for'))) {\n        const result = (vFor.parseResult = parseForExpression(vFor.exp, context));\n        if (result) {\n            const { value, key, index } = result;\n            const { addIdentifiers, removeIdentifiers } = context;\n            value && addIdentifiers(value);\n            key && addIdentifiers(key);\n            index && addIdentifiers(index);\n            return () => {\n                value && removeIdentifiers(value);\n                key && removeIdentifiers(key);\n                index && removeIdentifiers(index);\n            };\n        }\n    }\n};\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false /* newline */, true /* isSlot */, children.length ? children[0].loc : loc);\n// Instead of being a DirectiveTransform, v-slot processing is called during\n// transformElement to build the slots object for a component.\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\n    context.helper(WITH_CTX);\n    const { children, loc } = node;\n    const slotsProperties = [];\n    const dynamicSlots = [];\n    // If the slot is inside a v-for or another v-slot, force it to be dynamic\n    // since it likely uses a scope variable.\n    let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\n    // 1. Check for slot with slotProps on component itself.\n    //    <Comp v-slot=\"{ prop }\"/>\n    const onComponentSlot = findDir(node, 'slot', true);\n    if (onComponentSlot) {\n        const { arg, exp } = onComponentSlot;\n        if (arg && !isStaticExp(arg)) {\n            hasDynamicSlots = true;\n        }\n        slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\n    }\n    // 2. Iterate through children and check for template slots\n    //    <template v-slot:foo=\"{ prop }\">\n    let hasTemplateSlots = false;\n    let hasNamedDefaultSlot = false;\n    const implicitDefaultChildren = [];\n    const seenSlotNames = new Set();\n    let conditionalBranchIndex = 0;\n    for (let i = 0; i < children.length; i++) {\n        const slotElement = children[i];\n        let slotDir;\n        if (!isTemplateNode(slotElement) ||\n            !(slotDir = findDir(slotElement, 'slot', true))) {\n            // not a <template v-slot>, skip.\n            if (slotElement.type !== 3 /* NodeTypes.COMMENT */) {\n                implicitDefaultChildren.push(slotElement);\n            }\n            continue;\n        }\n        if (onComponentSlot) {\n            // already has on-component slot - this is incorrect usage.\n            context.onError(createCompilerError(37 /* ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE */, slotDir.loc));\n            break;\n        }\n        hasTemplateSlots = true;\n        const { children: slotChildren, loc: slotLoc } = slotElement;\n        const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;\n        // check if name is dynamic.\n        let staticSlotName;\n        if (isStaticExp(slotName)) {\n            staticSlotName = slotName ? slotName.content : `default`;\n        }\n        else {\n            hasDynamicSlots = true;\n        }\n        const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\n        // check if this slot is conditional (v-if/v-for)\n        let vIf;\n        let vElse;\n        let vFor;\n        if ((vIf = findDir(slotElement, 'if'))) {\n            hasDynamicSlots = true;\n            dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback));\n        }\n        else if ((vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))) {\n            // find adjacent v-if\n            let j = i;\n            let prev;\n            while (j--) {\n                prev = children[j];\n                if (prev.type !== 3 /* NodeTypes.COMMENT */) {\n                    break;\n                }\n            }\n            if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\n                // remove node\n                children.splice(i, 1);\n                i--;\n                // attach this slot to previous conditional\n                let conditional = dynamicSlots[dynamicSlots.length - 1];\n                while (conditional.alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\n                    conditional = conditional.alternate;\n                }\n                conditional.alternate = vElse.exp\n                    ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback)\n                    : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);\n            }\n            else {\n                context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, vElse.loc));\n            }\n        }\n        else if ((vFor = findDir(slotElement, 'for'))) {\n            hasDynamicSlots = true;\n            const parseResult = vFor.parseResult ||\n                parseForExpression(vFor.exp, context);\n            if (parseResult) {\n                // Render the dynamic slots as an array and add it to the createSlot()\n                // args. The runtime knows how to handle it appropriately.\n                dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [\n                    parseResult.source,\n                    createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true /* force newline */)\n                ]));\n            }\n            else {\n                context.onError(createCompilerError(32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */, vFor.loc));\n            }\n        }\n        else {\n            // check duplicate static names\n            if (staticSlotName) {\n                if (seenSlotNames.has(staticSlotName)) {\n                    context.onError(createCompilerError(38 /* ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES */, dirLoc));\n                    continue;\n                }\n                seenSlotNames.add(staticSlotName);\n                if (staticSlotName === 'default') {\n                    hasNamedDefaultSlot = true;\n                }\n            }\n            slotsProperties.push(createObjectProperty(slotName, slotFunction));\n        }\n    }\n    if (!onComponentSlot) {\n        const buildDefaultSlotProperty = (props, children) => {\n            const fn = buildSlotFn(props, children, loc);\n            if (context.compatConfig) {\n                fn.isNonScopedSlot = true;\n            }\n            return createObjectProperty(`default`, fn);\n        };\n        if (!hasTemplateSlots) {\n            // implicit default slot (on component)\n            slotsProperties.push(buildDefaultSlotProperty(undefined, children));\n        }\n        else if (implicitDefaultChildren.length &&\n            // #3766\n            // with whitespace: 'preserve', whitespaces between slots will end up in\n            // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\n            implicitDefaultChildren.some(node => isNonWhitespaceContent(node))) {\n            // implicit default slot (mixed with named slots)\n            if (hasNamedDefaultSlot) {\n                context.onError(createCompilerError(39 /* ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, implicitDefaultChildren[0].loc));\n            }\n            else {\n                slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\n            }\n        }\n    }\n    const slotFlag = hasDynamicSlots\n        ? 2 /* SlotFlags.DYNAMIC */\n        : hasForwardedSlots(node.children)\n            ? 3 /* SlotFlags.FORWARDED */\n            : 1 /* SlotFlags.STABLE */;\n    let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`, \n    // 2 = compiled but dynamic = can skip normalization, but must run diff\n    // 1 = compiled and static = can skip normalization AND diff as optimized\n    createSimpleExpression(slotFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${slotFlagsText[slotFlag]} */` : ``), false))), loc);\n    if (dynamicSlots.length) {\n        slots = createCallExpression(context.helper(CREATE_SLOTS), [\n            slots,\n            createArrayExpression(dynamicSlots)\n        ]);\n    }\n    return {\n        slots,\n        hasDynamicSlots\n    };\n}\nfunction buildDynamicSlot(name, fn, index) {\n    const props = [\n        createObjectProperty(`name`, name),\n        createObjectProperty(`fn`, fn)\n    ];\n    if (index != null) {\n        props.push(createObjectProperty(`key`, createSimpleExpression(String(index), true)));\n    }\n    return createObjectExpression(props);\n}\nfunction hasForwardedSlots(children) {\n    for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        switch (child.type) {\n            case 1 /* NodeTypes.ELEMENT */:\n                if (child.tagType === 2 /* ElementTypes.SLOT */ ||\n                    hasForwardedSlots(child.children)) {\n                    return true;\n                }\n                break;\n            case 9 /* NodeTypes.IF */:\n                if (hasForwardedSlots(child.branches))\n                    return true;\n                break;\n            case 10 /* NodeTypes.IF_BRANCH */:\n            case 11 /* NodeTypes.FOR */:\n                if (hasForwardedSlots(child.children))\n                    return true;\n                break;\n        }\n    }\n    return false;\n}\nfunction isNonWhitespaceContent(node) {\n    if (node.type !== 2 /* NodeTypes.TEXT */ && node.type !== 12 /* NodeTypes.TEXT_CALL */)\n        return true;\n    return node.type === 2 /* NodeTypes.TEXT */\n        ? !!node.content.trim()\n        : isNonWhitespaceContent(node.content);\n}\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\n// import, which should be used instead of a resolveDirective call.\nconst directiveImportMap = new WeakMap();\n// generate a JavaScript AST for this element's codegen\nconst transformElement = (node, context) => {\n    // perform the work on exit, after all child expressions have been\n    // processed and merged.\n    return function postTransformElement() {\n        node = context.currentNode;\n        if (!(node.type === 1 /* NodeTypes.ELEMENT */ &&\n            (node.tagType === 0 /* ElementTypes.ELEMENT */ ||\n                node.tagType === 1 /* ElementTypes.COMPONENT */))) {\n            return;\n        }\n        const { tag, props } = node;\n        const isComponent = node.tagType === 1 /* ElementTypes.COMPONENT */;\n        // The goal of the transform is to create a codegenNode implementing the\n        // VNodeCall interface.\n        let vnodeTag = isComponent\n            ? resolveComponentType(node, context)\n            : `\"${tag}\"`;\n        const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\n        let vnodeProps;\n        let vnodeChildren;\n        let vnodePatchFlag;\n        let patchFlag = 0;\n        let vnodeDynamicProps;\n        let dynamicPropNames;\n        let vnodeDirectives;\n        let shouldUseBlock = \n        // dynamic component may resolve to plain elements\n        isDynamicComponent ||\n            vnodeTag === TELEPORT ||\n            vnodeTag === SUSPENSE ||\n            (!isComponent &&\n                // <svg> and <foreignObject> must be forced into blocks so that block\n                // updates inside get proper isSVG flag at runtime. (#639, #643)\n                // This is technically web-specific, but splitting the logic out of core\n                // leads to too much unnecessary complexity.\n                (tag === 'svg' || tag === 'foreignObject'));\n        // props\n        if (props.length > 0) {\n            const propsBuildResult = buildProps(node, context, undefined, isComponent, isDynamicComponent);\n            vnodeProps = propsBuildResult.props;\n            patchFlag = propsBuildResult.patchFlag;\n            dynamicPropNames = propsBuildResult.dynamicPropNames;\n            const directives = propsBuildResult.directives;\n            vnodeDirectives =\n                directives && directives.length\n                    ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context)))\n                    : undefined;\n            if (propsBuildResult.shouldUseBlock) {\n                shouldUseBlock = true;\n            }\n        }\n        // children\n        if (node.children.length > 0) {\n            if (vnodeTag === KEEP_ALIVE) {\n                // Although a built-in component, we compile KeepAlive with raw children\n                // instead of slot functions so that it can be used inside Transition\n                // or other Transition-wrapping HOCs.\n                // To ensure correct updates with block optimizations, we need to:\n                // 1. Force keep-alive into a block. This avoids its children being\n                //    collected by a parent block.\n                shouldUseBlock = true;\n                // 2. Force keep-alive to always be updated, since it uses raw children.\n                patchFlag |= 1024 /* PatchFlags.DYNAMIC_SLOTS */;\n                if ((process.env.NODE_ENV !== 'production') && node.children.length > 1) {\n                    context.onError(createCompilerError(46 /* ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN */, {\n                        start: node.children[0].loc.start,\n                        end: node.children[node.children.length - 1].loc.end,\n                        source: ''\n                    }));\n                }\n            }\n            const shouldBuildAsSlots = isComponent &&\n                // Teleport is not a real component and has dedicated runtime handling\n                vnodeTag !== TELEPORT &&\n                // explained above.\n                vnodeTag !== KEEP_ALIVE;\n            if (shouldBuildAsSlots) {\n                const { slots, hasDynamicSlots } = buildSlots(node, context);\n                vnodeChildren = slots;\n                if (hasDynamicSlots) {\n                    patchFlag |= 1024 /* PatchFlags.DYNAMIC_SLOTS */;\n                }\n            }\n            else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\n                const child = node.children[0];\n                const type = child.type;\n                // check for dynamic text children\n                const hasDynamicTextChild = type === 5 /* NodeTypes.INTERPOLATION */ ||\n                    type === 8 /* NodeTypes.COMPOUND_EXPRESSION */;\n                if (hasDynamicTextChild &&\n                    getConstantType(child, context) === 0 /* ConstantTypes.NOT_CONSTANT */) {\n                    patchFlag |= 1 /* PatchFlags.TEXT */;\n                }\n                // pass directly if the only child is a text node\n                // (plain / interpolation / expression)\n                if (hasDynamicTextChild || type === 2 /* NodeTypes.TEXT */) {\n                    vnodeChildren = child;\n                }\n                else {\n                    vnodeChildren = node.children;\n                }\n            }\n            else {\n                vnodeChildren = node.children;\n            }\n        }\n        // patchFlag & dynamicPropNames\n        if (patchFlag !== 0) {\n            if ((process.env.NODE_ENV !== 'production')) {\n                if (patchFlag < 0) {\n                    // special flags (negative and mutually exclusive)\n                    vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;\n                }\n                else {\n                    // bitwise flags\n                    const flagNames = Object.keys(PatchFlagNames)\n                        .map(Number)\n                        .filter(n => n > 0 && patchFlag & n)\n                        .map(n => PatchFlagNames[n])\n                        .join(`, `);\n                    vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\n                }\n            }\n            else {\n                vnodePatchFlag = String(patchFlag);\n            }\n            if (dynamicPropNames && dynamicPropNames.length) {\n                vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\n            }\n        }\n        node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false /* disableTracking */, isComponent, node.loc);\n    };\n};\nfunction resolveComponentType(node, context, ssr = false) {\n    let { tag } = node;\n    // 1. dynamic component\n    const isExplicitDynamic = isComponentTag(tag);\n    const isProp = findProp(node, 'is');\n    if (isProp) {\n        if (isExplicitDynamic ||\n            (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context))) {\n            const exp = isProp.type === 6 /* NodeTypes.ATTRIBUTE */\n                ? isProp.value && createSimpleExpression(isProp.value.content, true)\n                : isProp.exp;\n            if (exp) {\n                return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\n                    exp\n                ]);\n            }\n        }\n        else if (isProp.type === 6 /* NodeTypes.ATTRIBUTE */ &&\n            isProp.value.content.startsWith('vue:')) {\n            // <button is=\"vue:xxx\">\n            // if not <component>, only is value that starts with \"vue:\" will be\n            // treated as component by the parse phase and reach here, unless it's\n            // compat mode where all is values are considered components\n            tag = isProp.value.content.slice(4);\n        }\n    }\n    // 1.5 v-is (TODO: Deprecate)\n    const isDir = !isExplicitDynamic && findDir(node, 'is');\n    if (isDir && isDir.exp) {\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\n            isDir.exp\n        ]);\n    }\n    // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\n    const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\n    if (builtIn) {\n        // built-ins are simply fallthroughs / have special handling during ssr\n        // so we don't need to import their runtime equivalents\n        if (!ssr)\n            context.helper(builtIn);\n        return builtIn;\n    }\n    // 5. user component (resolve)\n    context.helper(RESOLVE_COMPONENT);\n    context.components.add(tag);\n    return toValidAssetId(tag, `component`);\n}\nfunction buildProps(node, context, props = node.props, isComponent, isDynamicComponent, ssr = false) {\n    const { tag, loc: elementLoc, children } = node;\n    let properties = [];\n    const mergeArgs = [];\n    const runtimeDirectives = [];\n    const hasChildren = children.length > 0;\n    let shouldUseBlock = false;\n    // patchFlag analysis\n    let patchFlag = 0;\n    let hasRef = false;\n    let hasClassBinding = false;\n    let hasStyleBinding = false;\n    let hasHydrationEventBinding = false;\n    let hasDynamicKeys = false;\n    let hasVnodeHook = false;\n    const dynamicPropNames = [];\n    const pushMergeArg = (arg) => {\n        if (properties.length) {\n            mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\n            properties = [];\n        }\n        if (arg)\n            mergeArgs.push(arg);\n    };\n    const analyzePatchFlag = ({ key, value }) => {\n        if (isStaticExp(key)) {\n            const name = key.content;\n            const isEventHandler = isOn(name);\n            if (isEventHandler &&\n                (!isComponent || isDynamicComponent) &&\n                // omit the flag for click handlers because hydration gives click\n                // dedicated fast path.\n                name.toLowerCase() !== 'onclick' &&\n                // omit v-model handlers\n                name !== 'onUpdate:modelValue' &&\n                // omit onVnodeXXX hooks\n                !isReservedProp(name)) {\n                hasHydrationEventBinding = true;\n            }\n            if (isEventHandler && isReservedProp(name)) {\n                hasVnodeHook = true;\n            }\n            if (value.type === 20 /* NodeTypes.JS_CACHE_EXPRESSION */ ||\n                ((value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ ||\n                    value.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) &&\n                    getConstantType(value, context) > 0)) {\n                // skip if the prop is a cached handler or has constant value\n                return;\n            }\n            if (name === 'ref') {\n                hasRef = true;\n            }\n            else if (name === 'class') {\n                hasClassBinding = true;\n            }\n            else if (name === 'style') {\n                hasStyleBinding = true;\n            }\n            else if (name !== 'key' && !dynamicPropNames.includes(name)) {\n                dynamicPropNames.push(name);\n            }\n            // treat the dynamic class and style binding of the component as dynamic props\n            if (isComponent &&\n                (name === 'class' || name === 'style') &&\n                !dynamicPropNames.includes(name)) {\n                dynamicPropNames.push(name);\n            }\n        }\n        else {\n            hasDynamicKeys = true;\n        }\n    };\n    for (let i = 0; i < props.length; i++) {\n        // static attribute\n        const prop = props[i];\n        if (prop.type === 6 /* NodeTypes.ATTRIBUTE */) {\n            const { loc, name, value } = prop;\n            let isStatic = true;\n            if (name === 'ref') {\n                hasRef = true;\n                if (context.scopes.vFor > 0) {\n                    properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\n                }\n            }\n            // skip is on <component>, or is=\"vue:xxx\"\n            if (name === 'is' &&\n                (isComponentTag(tag) ||\n                    (value && value.content.startsWith('vue:')) ||\n                    (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context)))) {\n                continue;\n            }\n            properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : '', isStatic, value ? value.loc : loc)));\n        }\n        else {\n            // directives\n            const { name, arg, exp, loc } = prop;\n            const isVBind = name === 'bind';\n            const isVOn = name === 'on';\n            // skip v-slot - it is handled by its dedicated transform.\n            if (name === 'slot') {\n                if (!isComponent) {\n                    context.onError(createCompilerError(40 /* ErrorCodes.X_V_SLOT_MISPLACED */, loc));\n                }\n                continue;\n            }\n            // skip v-once/v-memo - they are handled by dedicated transforms.\n            if (name === 'once' || name === 'memo') {\n                continue;\n            }\n            // skip v-is and :is on <component>\n            if (name === 'is' ||\n                (isVBind &&\n                    isStaticArgOf(arg, 'is') &&\n                    (isComponentTag(tag) ||\n                        (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context))))) {\n                continue;\n            }\n            // skip v-on in SSR compilation\n            if (isVOn && ssr) {\n                continue;\n            }\n            if (\n            // #938: elements with dynamic keys should be forced into blocks\n            (isVBind && isStaticArgOf(arg, 'key')) ||\n                // inline before-update hooks need to force block so that it is invoked\n                // before children\n                (isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update'))) {\n                shouldUseBlock = true;\n            }\n            if (isVBind && isStaticArgOf(arg, 'ref') && context.scopes.vFor > 0) {\n                properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\n            }\n            // special case for v-bind and v-on with no argument\n            if (!arg && (isVBind || isVOn)) {\n                hasDynamicKeys = true;\n                if (exp) {\n                    if (isVBind) {\n                        // have to merge early for compat build check\n                        pushMergeArg();\n                        {\n                            // 2.x v-bind object order compat\n                            if ((process.env.NODE_ENV !== 'production')) {\n                                const hasOverridableKeys = mergeArgs.some(arg => {\n                                    if (arg.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\n                                        return arg.properties.some(({ key }) => {\n                                            if (key.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */ ||\n                                                !key.isStatic) {\n                                                return true;\n                                            }\n                                            return (key.content !== 'class' &&\n                                                key.content !== 'style' &&\n                                                !isOn(key.content));\n                                        });\n                                    }\n                                    else {\n                                        // dynamic expression\n                                        return true;\n                                    }\n                                });\n                                if (hasOverridableKeys) {\n                                    checkCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER */, context, loc);\n                                }\n                            }\n                            if (isCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER */, context)) {\n                                mergeArgs.unshift(exp);\n                                continue;\n                            }\n                        }\n                        mergeArgs.push(exp);\n                    }\n                    else {\n                        // v-on=\"obj\" -> toHandlers(obj)\n                        pushMergeArg({\n                            type: 14 /* NodeTypes.JS_CALL_EXPRESSION */,\n                            loc,\n                            callee: context.helper(TO_HANDLERS),\n                            arguments: isComponent ? [exp] : [exp, `true`]\n                        });\n                    }\n                }\n                else {\n                    context.onError(createCompilerError(isVBind\n                        ? 34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */\n                        : 35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */, loc));\n                }\n                continue;\n            }\n            const directiveTransform = context.directiveTransforms[name];\n            if (directiveTransform) {\n                // has built-in directive transform.\n                const { props, needRuntime } = directiveTransform(prop, node, context);\n                !ssr && props.forEach(analyzePatchFlag);\n                if (isVOn && arg && !isStaticExp(arg)) {\n                    pushMergeArg(createObjectExpression(props, elementLoc));\n                }\n                else {\n                    properties.push(...props);\n                }\n                if (needRuntime) {\n                    runtimeDirectives.push(prop);\n                    if (isSymbol(needRuntime)) {\n                        directiveImportMap.set(prop, needRuntime);\n                    }\n                }\n            }\n            else if (!isBuiltInDirective(name)) {\n                // no built-in transform, this is a user custom directive.\n                runtimeDirectives.push(prop);\n                // custom dirs may use beforeUpdate so they need to force blocks\n                // to ensure before-update gets called before children update\n                if (hasChildren) {\n                    shouldUseBlock = true;\n                }\n            }\n        }\n    }\n    let propsExpression = undefined;\n    // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\n    if (mergeArgs.length) {\n        // close up any not-yet-merged props\n        pushMergeArg();\n        if (mergeArgs.length > 1) {\n            propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\n        }\n        else {\n            // single v-bind with nothing else - no need for a mergeProps call\n            propsExpression = mergeArgs[0];\n        }\n    }\n    else if (properties.length) {\n        propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\n    }\n    // patchFlag analysis\n    if (hasDynamicKeys) {\n        patchFlag |= 16 /* PatchFlags.FULL_PROPS */;\n    }\n    else {\n        if (hasClassBinding && !isComponent) {\n            patchFlag |= 2 /* PatchFlags.CLASS */;\n        }\n        if (hasStyleBinding && !isComponent) {\n            patchFlag |= 4 /* PatchFlags.STYLE */;\n        }\n        if (dynamicPropNames.length) {\n            patchFlag |= 8 /* PatchFlags.PROPS */;\n        }\n        if (hasHydrationEventBinding) {\n            patchFlag |= 32 /* PatchFlags.HYDRATE_EVENTS */;\n        }\n    }\n    if (!shouldUseBlock &&\n        (patchFlag === 0 || patchFlag === 32 /* PatchFlags.HYDRATE_EVENTS */) &&\n        (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\n        patchFlag |= 512 /* PatchFlags.NEED_PATCH */;\n    }\n    // pre-normalize props, SSR is skipped for now\n    if (!context.inSSR && propsExpression) {\n        switch (propsExpression.type) {\n            case 15 /* NodeTypes.JS_OBJECT_EXPRESSION */:\n                // means that there is no v-bind,\n                // but still need to deal with dynamic key binding\n                let classKeyIndex = -1;\n                let styleKeyIndex = -1;\n                let hasDynamicKey = false;\n                for (let i = 0; i < propsExpression.properties.length; i++) {\n                    const key = propsExpression.properties[i].key;\n                    if (isStaticExp(key)) {\n                        if (key.content === 'class') {\n                            classKeyIndex = i;\n                        }\n                        else if (key.content === 'style') {\n                            styleKeyIndex = i;\n                        }\n                    }\n                    else if (!key.isHandlerKey) {\n                        hasDynamicKey = true;\n                    }\n                }\n                const classProp = propsExpression.properties[classKeyIndex];\n                const styleProp = propsExpression.properties[styleKeyIndex];\n                // no dynamic key\n                if (!hasDynamicKey) {\n                    if (classProp && !isStaticExp(classProp.value)) {\n                        classProp.value = createCallExpression(context.helper(NORMALIZE_CLASS), [classProp.value]);\n                    }\n                    if (styleProp &&\n                        // the static style is compiled into an object,\n                        // so use `hasStyleBinding` to ensure that it is a dynamic style binding\n                        (hasStyleBinding ||\n                            (styleProp.value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\n                                styleProp.value.content.trim()[0] === `[`) ||\n                            // v-bind:style and style both exist,\n                            // v-bind:style with static literal object\n                            styleProp.value.type === 17 /* NodeTypes.JS_ARRAY_EXPRESSION */)) {\n                        styleProp.value = createCallExpression(context.helper(NORMALIZE_STYLE), [styleProp.value]);\n                    }\n                }\n                else {\n                    // dynamic key binding, wrap with `normalizeProps`\n                    propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [propsExpression]);\n                }\n                break;\n            case 14 /* NodeTypes.JS_CALL_EXPRESSION */:\n                // mergeProps call, do nothing\n                break;\n            default:\n                // single v-bind\n                propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [\n                    createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\n                        propsExpression\n                    ])\n                ]);\n                break;\n        }\n    }\n    return {\n        props: propsExpression,\n        directives: runtimeDirectives,\n        patchFlag,\n        dynamicPropNames,\n        shouldUseBlock\n    };\n}\n// Dedupe props in an object literal.\n// Literal duplicated attributes would have been warned during the parse phase,\n// however, it's possible to encounter duplicated `onXXX` handlers with different\n// modifiers. We also need to merge static and dynamic class / style attributes.\n// - onXXX handlers / style: merge into array\n// - class: merge into single expression with concatenation\nfunction dedupeProperties(properties) {\n    const knownProps = new Map();\n    const deduped = [];\n    for (let i = 0; i < properties.length; i++) {\n        const prop = properties[i];\n        // dynamic keys are always allowed\n        if (prop.key.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */ || !prop.key.isStatic) {\n            deduped.push(prop);\n            continue;\n        }\n        const name = prop.key.content;\n        const existing = knownProps.get(name);\n        if (existing) {\n            if (name === 'style' || name === 'class' || isOn(name)) {\n                mergeAsArray(existing, prop);\n            }\n            // unexpected duplicate, should have emitted error during parse\n        }\n        else {\n            knownProps.set(name, prop);\n            deduped.push(prop);\n        }\n    }\n    return deduped;\n}\nfunction mergeAsArray(existing, incoming) {\n    if (existing.value.type === 17 /* NodeTypes.JS_ARRAY_EXPRESSION */) {\n        existing.value.elements.push(incoming.value);\n    }\n    else {\n        existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\n    }\n}\nfunction buildDirectiveArgs(dir, context) {\n    const dirArgs = [];\n    const runtime = directiveImportMap.get(dir);\n    if (runtime) {\n        // built-in directive with runtime\n        dirArgs.push(context.helperString(runtime));\n    }\n    else {\n        {\n            // inject statement for resolving directive\n            context.helper(RESOLVE_DIRECTIVE);\n            context.directives.add(dir.name);\n            dirArgs.push(toValidAssetId(dir.name, `directive`));\n        }\n    }\n    const { loc } = dir;\n    if (dir.exp)\n        dirArgs.push(dir.exp);\n    if (dir.arg) {\n        if (!dir.exp) {\n            dirArgs.push(`void 0`);\n        }\n        dirArgs.push(dir.arg);\n    }\n    if (Object.keys(dir.modifiers).length) {\n        if (!dir.arg) {\n            if (!dir.exp) {\n                dirArgs.push(`void 0`);\n            }\n            dirArgs.push(`void 0`);\n        }\n        const trueExpression = createSimpleExpression(`true`, false, loc);\n        dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\n    }\n    return createArrayExpression(dirArgs, dir.loc);\n}\nfunction stringifyDynamicPropNames(props) {\n    let propsNamesString = `[`;\n    for (let i = 0, l = props.length; i < l; i++) {\n        propsNamesString += JSON.stringify(props[i]);\n        if (i < l - 1)\n            propsNamesString += ', ';\n    }\n    return propsNamesString + `]`;\n}\nfunction isComponentTag(tag) {\n    return tag === 'component' || tag === 'Component';\n}\n\n(process.env.NODE_ENV !== 'production')\n    ? Object.freeze({})\n    : {};\n(process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\nconst cacheStringFunction = (fn) => {\n    const cache = Object.create(null);\n    return ((str) => {\n        const hit = cache[str];\n        return hit || (cache[str] = fn(str));\n    });\n};\nconst camelizeRE = /-(\\w)/g;\n/**\n * @private\n */\nconst camelize = cacheStringFunction((str) => {\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\n});\n\nconst transformSlotOutlet = (node, context) => {\n    if (isSlotOutlet(node)) {\n        const { children, loc } = node;\n        const { slotName, slotProps } = processSlotOutlet(node, context);\n        const slotArgs = [\n            context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\n            slotName,\n            '{}',\n            'undefined',\n            'true'\n        ];\n        let expectedLen = 2;\n        if (slotProps) {\n            slotArgs[2] = slotProps;\n            expectedLen = 3;\n        }\n        if (children.length) {\n            slotArgs[3] = createFunctionExpression([], children, false, false, loc);\n            expectedLen = 4;\n        }\n        if (context.scopeId && !context.slotted) {\n            expectedLen = 5;\n        }\n        slotArgs.splice(expectedLen); // remove unused arguments\n        node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\n    }\n};\nfunction processSlotOutlet(node, context) {\n    let slotName = `\"default\"`;\n    let slotProps = undefined;\n    const nonNameProps = [];\n    for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\n            if (p.value) {\n                if (p.name === 'name') {\n                    slotName = JSON.stringify(p.value.content);\n                }\n                else {\n                    p.name = camelize(p.name);\n                    nonNameProps.push(p);\n                }\n            }\n        }\n        else {\n            if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\n                if (p.exp)\n                    slotName = p.exp;\n            }\n            else {\n                if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\n                    p.arg.content = camelize(p.arg.content);\n                }\n                nonNameProps.push(p);\n            }\n        }\n    }\n    if (nonNameProps.length > 0) {\n        const { props, directives } = buildProps(node, context, nonNameProps, false, false);\n        slotProps = props;\n        if (directives.length) {\n            context.onError(createCompilerError(36 /* ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */, directives[0].loc));\n        }\n    }\n    return {\n        slotName,\n        slotProps\n    };\n}\n\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*(:[^=]+)?=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\nconst transformOn = (dir, node, context, augmentor) => {\n    const { loc, modifiers, arg } = dir;\n    if (!dir.exp && !modifiers.length) {\n        context.onError(createCompilerError(35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */, loc));\n    }\n    let eventName;\n    if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n        if (arg.isStatic) {\n            let rawName = arg.content;\n            // TODO deprecate @vnodeXXX usage\n            if (rawName.startsWith('vue:')) {\n                rawName = `vnode-${rawName.slice(4)}`;\n            }\n            const eventString = node.tagType !== 0 /* ElementTypes.ELEMENT */ ||\n                rawName.startsWith('vnode') ||\n                !/[A-Z]/.test(rawName)\n                ? // for non-element and vnode lifecycle event listeners, auto convert\n                    // it to camelCase. See issue #2249\n                    toHandlerKey(camelize$1(rawName))\n                : // preserve case for plain element listeners that have uppercase\n                    // letters, as these may be custom elements' custom events\n                    `on:${rawName}`;\n            eventName = createSimpleExpression(eventString, true, arg.loc);\n        }\n        else {\n            // #2388\n            eventName = createCompoundExpression([\n                `${context.helperString(TO_HANDLER_KEY)}(`,\n                arg,\n                `)`\n            ]);\n        }\n    }\n    else {\n        // already a compound expression.\n        eventName = arg;\n        eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\n        eventName.children.push(`)`);\n    }\n    // handler processing\n    let exp = dir.exp;\n    if (exp && !exp.content.trim()) {\n        exp = undefined;\n    }\n    let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\n    if (exp) {\n        const isMemberExp = isMemberExpression(exp.content);\n        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\n        const hasMultipleStatements = exp.content.includes(`;`);\n        if ((process.env.NODE_ENV !== 'production') && true) {\n            validateBrowserExpression(exp, context, false, hasMultipleStatements);\n        }\n        if (isInlineStatement || (shouldCache && isMemberExp)) {\n            // wrap inline statement in a function expression\n            exp = createCompoundExpression([\n                `${isInlineStatement\n                    ? `$event`\n                    : `${``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\n                exp,\n                hasMultipleStatements ? `}` : `)`\n            ]);\n        }\n    }\n    let ret = {\n        props: [\n            createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))\n        ]\n    };\n    // apply extended compiler augmentor\n    if (augmentor) {\n        ret = augmentor(ret);\n    }\n    if (shouldCache) {\n        // cache handlers so that it's always the same handler being passed down.\n        // this avoids unnecessary re-renders when users use inline handlers on\n        // components.\n        ret.props[0].value = context.cache(ret.props[0].value);\n    }\n    // mark the key as handler for props normalization check\n    ret.props.forEach(p => (p.key.isHandlerKey = true));\n    return ret;\n};\n\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\n// codegen for the entire props object. This transform here is only for v-bind\n// *with* args.\nconst transformBind = (dir, _node, context) => {\n    const { exp, modifiers, loc } = dir;\n    const arg = dir.arg;\n    if (arg.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n        arg.children.unshift(`(`);\n        arg.children.push(`) || \"\"`);\n    }\n    else if (!arg.isStatic) {\n        arg.content = `${arg.content} || \"\"`;\n    }\n    // .sync is replaced by v-model:arg\n    if (modifiers.includes('camel')) {\n        if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n            if (arg.isStatic) {\n                arg.content = camelize$1(arg.content);\n            }\n            else {\n                arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\n            }\n        }\n        else {\n            arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\n            arg.children.push(`)`);\n        }\n    }\n    if (!context.inSSR) {\n        if (modifiers.includes('prop')) {\n            injectPrefix(arg, '.');\n        }\n        if (modifiers.includes('attr')) {\n            injectPrefix(arg, '^');\n        }\n    }\n    if (!exp ||\n        (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && !exp.content.trim())) {\n        context.onError(createCompilerError(34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */, loc));\n        return {\n            props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\n        };\n    }\n    return {\n        props: [createObjectProperty(arg, exp)]\n    };\n};\nconst injectPrefix = (arg, prefix) => {\n    if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n        if (arg.isStatic) {\n            arg.content = prefix + arg.content;\n        }\n        else {\n            arg.content = `\\`${prefix}\\${${arg.content}}\\``;\n        }\n    }\n    else {\n        arg.children.unshift(`'${prefix}' + (`);\n        arg.children.push(`)`);\n    }\n};\n\n// Merge adjacent text nodes and expressions into a single expression\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\nconst transformText = (node, context) => {\n    if (node.type === 0 /* NodeTypes.ROOT */ ||\n        node.type === 1 /* NodeTypes.ELEMENT */ ||\n        node.type === 11 /* NodeTypes.FOR */ ||\n        node.type === 10 /* NodeTypes.IF_BRANCH */) {\n        // perform the transform on node exit so that all expressions have already\n        // been processed.\n        return () => {\n            const children = node.children;\n            let currentContainer = undefined;\n            let hasText = false;\n            for (let i = 0; i < children.length; i++) {\n                const child = children[i];\n                if (isText$1(child)) {\n                    hasText = true;\n                    for (let j = i + 1; j < children.length; j++) {\n                        const next = children[j];\n                        if (isText$1(next)) {\n                            if (!currentContainer) {\n                                currentContainer = children[i] = createCompoundExpression([child], child.loc);\n                            }\n                            // merge adjacent text node into current\n                            currentContainer.children.push(` + `, next);\n                            children.splice(j, 1);\n                            j--;\n                        }\n                        else {\n                            currentContainer = undefined;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!hasText ||\n                // if this is a plain element with a single text child, leave it\n                // as-is since the runtime has dedicated fast path for this by directly\n                // setting textContent of the element.\n                // for component root it's always normalized anyway.\n                (children.length === 1 &&\n                    (node.type === 0 /* NodeTypes.ROOT */ ||\n                        (node.type === 1 /* NodeTypes.ELEMENT */ &&\n                            node.tagType === 0 /* ElementTypes.ELEMENT */ &&\n                            // #3756\n                            // custom directives can potentially add DOM elements arbitrarily,\n                            // we need to avoid setting textContent of the element at runtime\n                            // to avoid accidentally overwriting the DOM elements added\n                            // by the user through custom directives.\n                            !node.props.find(p => p.type === 7 /* NodeTypes.DIRECTIVE */ &&\n                                !context.directiveTransforms[p.name]) &&\n                            // in compat mode, <template> tags with no special directives\n                            // will be rendered as a fragment so its children must be\n                            // converted into vnodes.\n                            !(node.tag === 'template'))))) {\n                return;\n            }\n            // pre-convert text nodes into createTextVNode(text) calls to avoid\n            // runtime normalization.\n            for (let i = 0; i < children.length; i++) {\n                const child = children[i];\n                if (isText$1(child) || child.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) {\n                    const callArgs = [];\n                    // createTextVNode defaults to single whitespace, so if it is a\n                    // single space the code could be an empty call to save bytes.\n                    if (child.type !== 2 /* NodeTypes.TEXT */ || child.content !== ' ') {\n                        callArgs.push(child);\n                    }\n                    // mark dynamic text with flag so it gets patched inside a block\n                    if (!context.ssr &&\n                        getConstantType(child, context) === 0 /* ConstantTypes.NOT_CONSTANT */) {\n                        callArgs.push(1 /* PatchFlags.TEXT */ +\n                            ((process.env.NODE_ENV !== 'production') ? ` /* ${PatchFlagNames[1 /* PatchFlags.TEXT */]} */` : ``));\n                    }\n                    children[i] = {\n                        type: 12 /* NodeTypes.TEXT_CALL */,\n                        content: child,\n                        loc: child.loc,\n                        codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\n                    };\n                }\n            }\n        };\n    }\n};\n\nconst seen$1 = new WeakSet();\nconst transformOnce = (node, context) => {\n    if (node.type === 1 /* NodeTypes.ELEMENT */ && findDir(node, 'once', true)) {\n        if (seen$1.has(node) || context.inVOnce) {\n            return;\n        }\n        seen$1.add(node);\n        context.inVOnce = true;\n        context.helper(SET_BLOCK_TRACKING);\n        return () => {\n            context.inVOnce = false;\n            const cur = context.currentNode;\n            if (cur.codegenNode) {\n                cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */);\n            }\n        };\n    }\n};\n\nconst transformModel = (dir, node, context) => {\n    const { exp, arg } = dir;\n    if (!exp) {\n        context.onError(createCompilerError(41 /* ErrorCodes.X_V_MODEL_NO_EXPRESSION */, dir.loc));\n        return createTransformProps();\n    }\n    const rawExp = exp.loc.source;\n    const expString = exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ ? exp.content : rawExp;\n    // im SFC <script setup> inline mode, the exp may have been transformed into\n    // _unref(exp)\n    const bindingType = context.bindingMetadata[rawExp];\n    // check props\n    if (bindingType === \"props\" /* BindingTypes.PROPS */ ||\n        bindingType === \"props-aliased\" /* BindingTypes.PROPS_ALIASED */) {\n        context.onError(createCompilerError(44 /* ErrorCodes.X_V_MODEL_ON_PROPS */, exp.loc));\n        return createTransformProps();\n    }\n    const maybeRef = !true  ;\n    if (!expString.trim() ||\n        (!isMemberExpression(expString) && !maybeRef)) {\n        context.onError(createCompilerError(42 /* ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION */, exp.loc));\n        return createTransformProps();\n    }\n    const propName = arg ? arg : createSimpleExpression('modelValue', true);\n    const eventName = arg\n        ? isStaticExp(arg)\n            ? `onUpdate:${camelize$1(arg.content)}`\n            : createCompoundExpression(['\"onUpdate:\" + ', arg])\n        : `onUpdate:modelValue`;\n    let assignmentExp;\n    const eventArg = context.isTS ? `($event: any)` : `$event`;\n    {\n        assignmentExp = createCompoundExpression([\n            `${eventArg} => ((`,\n            exp,\n            `) = $event)`\n        ]);\n    }\n    const props = [\n        // modelValue: foo\n        createObjectProperty(propName, dir.exp),\n        // \"onUpdate:modelValue\": $event => (foo = $event)\n        createObjectProperty(eventName, assignmentExp)\n    ];\n    // modelModifiers: { foo: true, \"bar-baz\": true }\n    if (dir.modifiers.length && node.tagType === 1 /* ElementTypes.COMPONENT */) {\n        const modifiers = dir.modifiers\n            .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\n            .join(`, `);\n        const modifiersKey = arg\n            ? isStaticExp(arg)\n                ? `${arg.content}Modifiers`\n                : createCompoundExpression([arg, ' + \"Modifiers\"'])\n            : `modelModifiers`;\n        props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, 2 /* ConstantTypes.CAN_HOIST */)));\n    }\n    return createTransformProps(props);\n};\nfunction createTransformProps(props = []) {\n    return { props };\n}\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\nconst transformFilter = (node, context) => {\n    if (!isCompatEnabled(\"COMPILER_FILTER\" /* CompilerDeprecationTypes.COMPILER_FILTERS */, context)) {\n        return;\n    }\n    if (node.type === 5 /* NodeTypes.INTERPOLATION */) {\n        // filter rewrite is applied before expression transform so only\n        // simple expressions are possible at this stage\n        rewriteFilter(node.content, context);\n    }\n    if (node.type === 1 /* NodeTypes.ELEMENT */) {\n        node.props.forEach((prop) => {\n            if (prop.type === 7 /* NodeTypes.DIRECTIVE */ &&\n                prop.name !== 'for' &&\n                prop.exp) {\n                rewriteFilter(prop.exp, context);\n            }\n        });\n    }\n};\nfunction rewriteFilter(node, context) {\n    if (node.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n        parseFilter(node, context);\n    }\n    else {\n        for (let i = 0; i < node.children.length; i++) {\n            const child = node.children[i];\n            if (typeof child !== 'object')\n                continue;\n            if (child.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\n                parseFilter(child, context);\n            }\n            else if (child.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) {\n                rewriteFilter(node, context);\n            }\n            else if (child.type === 5 /* NodeTypes.INTERPOLATION */) {\n                rewriteFilter(child.content, context);\n            }\n        }\n    }\n}\nfunction parseFilter(node, context) {\n    const exp = node.content;\n    let inSingle = false;\n    let inDouble = false;\n    let inTemplateString = false;\n    let inRegex = false;\n    let curly = 0;\n    let square = 0;\n    let paren = 0;\n    let lastFilterIndex = 0;\n    let c, prev, i, expression, filters = [];\n    for (i = 0; i < exp.length; i++) {\n        prev = c;\n        c = exp.charCodeAt(i);\n        if (inSingle) {\n            if (c === 0x27 && prev !== 0x5c)\n                inSingle = false;\n        }\n        else if (inDouble) {\n            if (c === 0x22 && prev !== 0x5c)\n                inDouble = false;\n        }\n        else if (inTemplateString) {\n            if (c === 0x60 && prev !== 0x5c)\n                inTemplateString = false;\n        }\n        else if (inRegex) {\n            if (c === 0x2f && prev !== 0x5c)\n                inRegex = false;\n        }\n        else if (c === 0x7c && // pipe\n            exp.charCodeAt(i + 1) !== 0x7c &&\n            exp.charCodeAt(i - 1) !== 0x7c &&\n            !curly &&\n            !square &&\n            !paren) {\n            if (expression === undefined) {\n                // first filter, end of expression\n                lastFilterIndex = i + 1;\n                expression = exp.slice(0, i).trim();\n            }\n            else {\n                pushFilter();\n            }\n        }\n        else {\n            switch (c) {\n                case 0x22:\n                    inDouble = true;\n                    break; // \"\n                case 0x27:\n                    inSingle = true;\n                    break; // '\n                case 0x60:\n                    inTemplateString = true;\n                    break; // `\n                case 0x28:\n                    paren++;\n                    break; // (\n                case 0x29:\n                    paren--;\n                    break; // )\n                case 0x5b:\n                    square++;\n                    break; // [\n                case 0x5d:\n                    square--;\n                    break; // ]\n                case 0x7b:\n                    curly++;\n                    break; // {\n                case 0x7d:\n                    curly--;\n                    break; // }\n            }\n            if (c === 0x2f) {\n                // /\n                let j = i - 1;\n                let p;\n                // find first non-whitespace prev char\n                for (; j >= 0; j--) {\n                    p = exp.charAt(j);\n                    if (p !== ' ')\n                        break;\n                }\n                if (!p || !validDivisionCharRE.test(p)) {\n                    inRegex = true;\n                }\n            }\n        }\n    }\n    if (expression === undefined) {\n        expression = exp.slice(0, i).trim();\n    }\n    else if (lastFilterIndex !== 0) {\n        pushFilter();\n    }\n    function pushFilter() {\n        filters.push(exp.slice(lastFilterIndex, i).trim());\n        lastFilterIndex = i + 1;\n    }\n    if (filters.length) {\n        (process.env.NODE_ENV !== 'production') &&\n            warnDeprecation(\"COMPILER_FILTER\" /* CompilerDeprecationTypes.COMPILER_FILTERS */, context, node.loc);\n        for (i = 0; i < filters.length; i++) {\n            expression = wrapFilter(expression, filters[i], context);\n        }\n        node.content = expression;\n    }\n}\nfunction wrapFilter(exp, filter, context) {\n    context.helper(RESOLVE_FILTER);\n    const i = filter.indexOf('(');\n    if (i < 0) {\n        context.filters.add(filter);\n        return `${toValidAssetId(filter, 'filter')}(${exp})`;\n    }\n    else {\n        const name = filter.slice(0, i);\n        const args = filter.slice(i + 1);\n        context.filters.add(name);\n        return `${toValidAssetId(name, 'filter')}(${exp}${args !== ')' ? ',' + args : args}`;\n    }\n}\n\nconst seen = new WeakSet();\nconst transformMemo = (node, context) => {\n    if (node.type === 1 /* NodeTypes.ELEMENT */) {\n        const dir = findDir(node, 'memo');\n        if (!dir || seen.has(node)) {\n            return;\n        }\n        seen.add(node);\n        return () => {\n            const codegenNode = node.codegenNode ||\n                context.currentNode.codegenNode;\n            if (codegenNode && codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\n                // non-component sub tree should be turned into a block\n                if (node.tagType !== 1 /* ElementTypes.COMPONENT */) {\n                    makeBlock(codegenNode, context);\n                }\n                node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\n                    dir.exp,\n                    createFunctionExpression(undefined, codegenNode),\n                    `_cache`,\n                    String(context.cached++)\n                ]);\n            }\n        };\n    }\n};\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\n    return [\n        [\n            transformOnce,\n            transformIf,\n            transformMemo,\n            transformFor,\n            ...([transformFilter] ),\n            ...((process.env.NODE_ENV !== 'production')\n                    ? [transformExpression]\n                    : []),\n            transformSlotOutlet,\n            transformElement,\n            trackSlotScopes,\n            transformText\n        ],\n        {\n            on: transformOn,\n            bind: transformBind,\n            model: transformModel\n        }\n    ];\n}\n// we name it `baseCompile` so that higher order compilers like\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\nfunction baseCompile(template, options = {}) {\n    const onError = options.onError || defaultOnError;\n    const isModuleMode = options.mode === 'module';\n    /* istanbul ignore if */\n    {\n        if (options.prefixIdentifiers === true) {\n            onError(createCompilerError(47 /* ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED */));\n        }\n        else if (isModuleMode) {\n            onError(createCompilerError(48 /* ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED */));\n        }\n    }\n    const prefixIdentifiers = !true ;\n    if (options.cacheHandlers) {\n        onError(createCompilerError(49 /* ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED */));\n    }\n    if (options.scopeId && !isModuleMode) {\n        onError(createCompilerError(50 /* ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED */));\n    }\n    const ast = isString(template) ? baseParse(template, options) : template;\n    const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();\n    transform(ast, extend({}, options, {\n        prefixIdentifiers,\n        nodeTransforms: [\n            ...nodeTransforms,\n            ...(options.nodeTransforms || []) // user transforms\n        ],\n        directiveTransforms: extend({}, directiveTransforms, options.directiveTransforms || {} // user transforms\n        )\n    }));\n    return generate(ast, extend({}, options, {\n        prefixIdentifiers\n    }));\n}\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexport { BASE_TRANSITION, CAMELIZE, CAPITALIZE, CREATE_BLOCK, CREATE_COMMENT, CREATE_ELEMENT_BLOCK, CREATE_ELEMENT_VNODE, CREATE_SLOTS, CREATE_STATIC, CREATE_TEXT, CREATE_VNODE, FRAGMENT, GUARD_REACTIVE_PROPS, IS_MEMO_SAME, IS_REF, KEEP_ALIVE, MERGE_PROPS, NORMALIZE_CLASS, NORMALIZE_PROPS, NORMALIZE_STYLE, OPEN_BLOCK, POP_SCOPE_ID, PUSH_SCOPE_ID, RENDER_LIST, RENDER_SLOT, RESOLVE_COMPONENT, RESOLVE_DIRECTIVE, RESOLVE_DYNAMIC_COMPONENT, RESOLVE_FILTER, SET_BLOCK_TRACKING, SUSPENSE, TELEPORT, TO_DISPLAY_STRING, TO_HANDLERS, TO_HANDLER_KEY, UNREF, WITH_CTX, WITH_DIRECTIVES, WITH_MEMO, advancePositionWithClone, advancePositionWithMutation, assert, baseCompile, baseParse, buildDirectiveArgs, buildProps, buildSlots, checkCompatEnabled, createArrayExpression, createAssignmentExpression, createBlockStatement, createCacheExpression, createCallExpression, createCompilerError, createCompoundExpression, createConditionalExpression, createForLoopParams, createFunctionExpression, createIfStatement, createInterpolation, createObjectExpression, createObjectProperty, createReturnStatement, createRoot, createSequenceExpression, createSimpleExpression, createStructuralDirectiveTransform, createTemplateLiteral, createTransformContext, createVNodeCall, extractIdentifiers, findDir, findProp, generate, getBaseTransformPreset, getConstantType, getInnerRange, getMemoedVNodeCall, getVNodeBlockHelper, getVNodeHelper, hasDynamicKeyVBind, hasScopeRef, helperNameMap, injectProp, isBuiltInType, isCoreComponent, isFunctionType, isInDestructureAssignment, isMemberExpression, isMemberExpressionBrowser, isMemberExpressionNode, isReferencedIdentifier, isSimpleIdentifier, isSlotOutlet, isStaticArgOf, isStaticExp, isStaticProperty, isStaticPropertyKey, isTemplateNode, isText$1 as isText, isVSlot, locStub, makeBlock, noopDirectiveTransform, processExpression, processFor, processIf, processSlotOutlet, registerRuntimeHelpers, resolveComponentType, stringifyExpression, toValidAssetId, trackSlotScopes, trackVForSlotScopes, transform, transformBind, transformElement, transformExpression, transformModel, transformOn, traverseNode, walkBlockDeclarations, walkFunctionParams, walkIdentifiers, warnDeprecation };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}